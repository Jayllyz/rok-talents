{"version":3,"sources":["utils.js","Error.js","values.js","data sync /^/.//v.*//Attack/.json$","data sync /^/.//v.*//Archer/.json$","data sync /^/.//v.*//Cavalry/.json$","data sync /^/.//v.*//Conquering/.json$","data sync /^/.//v.*//Defense/.json$","data sync /^/.//v.*//Garrison/.json$","data sync /^/.//v.*//Gathering/.json$","data sync /^/.//v.*//Infantry/.json$","data sync /^/.//v.*//Integration/.json$","data sync /^/.//v.*//Leadership/.json$","data sync /^/.//v.*//Mobility/.json$","data sync /^/.//v.*//Peacekeeping/.json$","data sync /^/.//v.*//Skill/.json$","data sync /^/.//v.*//Support/.json$","data sync /^/.//v.*//Versatility/.json$","serviceWorker.js","NavBarButtons.js","Tooltips.js","NavBarSettings.js","NavBarCommander.js","Modals.js","NavBar.js","SummaryPanel.js","StatsPanel.js","StatsTalentsPanel.js","InfoPanel.js","data/AllTrees.js","App.js","index.js"],"names":["sumArray","arr","reduce","partial","a","isMultidimensional","filter","Array","isArray","length","getMaxTalentCount","talentValues","replaceTalentText","text","replacementIdx","newText","i","re","RegExp","replace","getTreeName","color","commander","commanderData","Commanders","setTitle","r","y","b","sep","document","title","createSummaryString","rSpent","ySpent","bSpent","name","shortName","isTouchDevice","window","matchMedia","matches","encode","match","map","v","valuesToLetters","hasOwnProperty","join","decode","encoded","split","k","lettersToValues","ErrorBoundary","props","state","error","errorInfo","this","setState","style","whiteSpace","toString","componentStack","children","Component","maxPoints","c","d","e","f","g","h","j","l","m","n","o","p","q","s","t","u","w","x","z","webpackContext","req","id","webpackContextResolve","__webpack_require__","Error","code","keys","Object","resolve","module","exports","Boolean","location","hostname","NavBarButtons","className","data-testid","type","disabled","calcPointsSpent","onClick","resetTalents","icon","faTrashAlt","showShare","faShareAlt","HelpTooltip","OverlayTrigger","placement","flip","trigger","overlay","Tooltip","tooltip","faQuestionCircle","NavBarSettings","Dropdown","alignRight","as","NavItem","Toggle","NavLink","faCog","Menu","Form","Group","Header","Check","label","checked","isShownInfoPanel","onChange","toggleInfoPanel","isShownValues","toggleValueDisplay","isShownTotals","toggleTotalDisplay","Divider","ToggleButtonGroup","size","value","nodeSize","val","toggleNodeSize","ToggleButton","variant","isSpeedMode","toggleSpeedMode","process","NavBarCommander","isOpen","toggleSelect","bind","prevState","commanderList","sort","legendaryCommanders","epicCommanders","forEach","selectItem","Item","key","changeCommander","alt","src","tier","push","show","onToggle","faUser","createSelectItems","InvalidBuildModal","modal","toggle","Modal","centered","onHide","closeButton","faExclamationTriangle","Body","message","Footer","Button","AboutModal","faInfoCircle","href","repository","releases","target","rel","version","author","url","bugs","report","ShareModal","input","getElementById","readOnly","select","execCommand","innerHTML","ReactGA","event","category","action","faLink","defaultValue","copyURL","faCopy","EmailShareButton","EmailIcon","round","RedditShareButton","RedditIcon","TwitterShareButton","TwitterIcon","WhatsappShareButton","WhatsappIcon","PocketShareButton","PocketIcon","NavBar","navOpen","toggleNav","navBarCommanderRef","aboutModalRef","shareModalRef","Fragment","ref","component","Navbar","Brand","minDeviceWidth","cursor","showAbout","Nav","toggleMouseXY","toggleTalentID","isShownMouseXY","isShownTalentID","SummaryPanel","calcPointsRemaining","StatsPanel","stat","statValue","nodes","some","values","idx","talentInfo","treeData","stats","calcStats","StatsTalentsPanel","isShownStatsTalents","toggleStatsTalents","talents","Collapse","in","calcStatsTalents","InfoPanel","orientation","red","yellow","blue","loadTreeData","Attack","require","Archer","Cavalry","Conquering","Defense","Garrison","Gathering","Infantry","Integration","Leadership","Mobility","Peacekeeping","Skill","Support","Versatility","TreePanel","React","lazy","App","invalidModalFlag","invalidBuildMessage","changeTalentValue","urlParams","slice","getEmptyState","updateURL","urlDataVersion","comID","parseInt","commanderName","find","dataVersion","createZeroTalents","Number","maxArray","createMaxValueArray","el","JSON","parse","localStorage","getItem","method","queryString","history","replaceState","zeroTalents","treePanelRef","drawLines","resetPanZoom","numRed","numYellow","numBlue","fill","how","newArr","points","repaint","setItem","toggleMouseListeners","navBarRef","fallback","Spinner","animation","infoPanelRef","initialize","pageview","search","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.5c9f5d44.chunk.js","sourcesContent":["import { valuesToLetters, lettersToValues } from './values';\nimport Commanders from './data/commanders.json';\nimport { title } from '../package.json';\n\n/**\n * Sum all values of an array\n *\n * @export\n * @param {Number[]} arr Array to calculate sum of\n * @returns {Number} Sum of the array\n */\nexport function sumArray(arr) {\n  return arr.reduce((partial, a) => partial + a, 0);\n}\n\n/**\n * Check if two arrays are equal\n *\n * @export\n * @param {array} a First array\n * @param {array} b Second array\n * @returns {boolean} Are the two arrays equal?\n */\nexport function arraysEqual(a, b) {\n  if (a === b) return true;\n  if (a == null || b == null) return false;\n  // eslint-disable-next-line\n  if (a.length != b.length) return false;\n\n  for (var i = 0; i < a.length; ++i) {\n    if (a[i] !== b[i]) return false;\n  }\n  return true;\n}\n\n/**\n * Check if array is nested/multidimensional\n *\n * @param {Array} arr array to check for nesting\n * @returns {Boolean} Boolean indicating whether array is multidimensional\n */\nexport function isMultidimensional(arr) {\n  return arr.filter(Array.isArray).length !== 0;\n}\n\n/**\n * Get maximum number of spendable points for a talent\n *\n * @param {Array} talentValues array of values for a given talent\n * @returns {Number} Number of maximum spendable points\n */\nexport function getMaxTalentCount(talentValues) {\n  let max;\n  if (!isMultidimensional(talentValues)) {\n    max = talentValues.length;\n  } else {\n    // All multidimensional arrays should be same length (checked by unit test)\n    max = talentValues[0].length;\n  }\n  return max;\n}\n\n/**\n * Replace talent text placeholders (e.g. `${1}`) with selected values\n *\n * @param {string} text Full talent text\n * @param {Array} talentValues Array (or multidimensional array) of values for the talent\n * @param {Number} replacementIdx Index of the value to use as replacement\n * @returns {string} Talent text with placeholders replaced\n */\nexport function replaceTalentText(text, talentValues, replacementIdx) {\n  let newText = text;\n\n  if (isMultidimensional(talentValues)) {\n    for (let i = 0; i < talentValues.length; i++) {\n      let re = new RegExp(`\\\\$\\\\{${i + 1}\\\\}`, 'g');\n      newText = newText.replace(re, talentValues[i][replacementIdx]);\n    }\n  } else {\n    newText = newText.replace(/\\$\\{1\\}/g, talentValues[replacementIdx]);\n  }\n\n  return newText;\n}\n\n/**\n * Get the full name of a talent tree (e.g. Skill, Garrison). The name\n * depends on the tree color and the selected commander\n *\n * @param {string} color Color of the tree to retrieve the name for\n * @param {string} commander Name of the commander\n * @returns {string} full tree name\n */\nexport function getTreeName(color, commander) {\n  const commanderData = Commanders[commander];\n  if (commanderData) {\n    return commanderData[color];\n  }\n}\n\n/**\n * Set the window title with commander name and talents spent in each tree\n *\n * @param {string} commander Full name of the commander\n * @param {Number[]} r Array of red tree values\n * @param {Number[]} y Array of yellow tree values\n * @param {Number[]} b Array of blue tree values\n * @param {string} [sep='/'] Separator to use between point totals\n */\nexport function setTitle(commander, r, y, b, sep = '/') {\n  document.title = `${createSummaryString(commander, r, y, b, sep)} | ${title}`;\n}\n\n/**\n * Create a string with commander name and talents spent in each tree\n *\n * @param {string} commander Full name of the commander\n * @param {Number[]} r Array of red tree values\n * @param {Number[]} y Array of yellow tree values\n * @param {Number[]} b Array of blue tree values\n * @param {string} [sep='/'] Separator to use between point totals\n * @returns {string} String summarizing the commander and points spent\n */\nexport function createSummaryString(commander, r, y, b, sep = '/') {\n  const rSpent = sumArray(r);\n  const ySpent = sumArray(y);\n  const bSpent = sumArray(b);\n  const name = Commanders[commander].shortName || commander;\n  return `${name} (${rSpent}${sep}${ySpent}${sep}${bSpent})`;\n}\n/**\n * Detect if device is touch enabled\n *\n * @returns {boolean} Whether device is touch or not\n */\nexport function isTouchDevice() {\n  if (window.matchMedia('(pointer: coarse)').matches) {\n    return true;\n  } else {\n    return false;\n  }\n}\n\n/**\n * Encode/compress the passed text\n *\n * @param {string} text Text to be encoded/compressed\n * @returns {string} Encoded/compressed version of the text\n */\nexport function encode(text) {\n  const encoded = text\n    .match(/(..?)/g)\n    .map(v => {\n      return valuesToLetters.hasOwnProperty(v) ? valuesToLetters[v] : v;\n    })\n    .join('');\n\n  return encoded;\n}\n\n/**\n * Decode encoded text\n *\n * @param {string} encoded Encoded form of the text\n * @returns {string} Decoded string\n */\nexport function decode(encoded) {\n  const decoded = encoded\n    .split('')\n    .map(k => {\n      return lettersToValues.hasOwnProperty(k) ? lettersToValues[k] : k;\n    })\n    .join('');\n\n  return decoded;\n}\n\nexport default {\n  sumArray,\n  arraysEqual,\n  isMultidimensional,\n  getMaxTalentCount,\n  replaceTalentText,\n  setTitle,\n  createSummaryString,\n  isTouchDevice,\n  encode,\n  decode\n};\n","import React, { Component } from 'react';\n\nclass ErrorBoundary extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { error: null, errorInfo: null };\n  }\n\n  componentDidCatch(error, errorInfo) {\n    // Catch errors in any components below and re-render with error\n    this.setState({\n      error: error,\n      errorInfo: errorInfo\n    });\n  }\n\n  render() {\n    if (this.state.errorInfo) {\n      // Error path\n      return (\n        <div>\n          <h3>Something broke!</h3>\n          <details style={{ whiteSpace: 'pre-wrap' }}>\n            {this.state.error && this.state.error.toString()}\n            <br />\n            {this.state.errorInfo.componentStack}\n          </details>\n        </div>\n      );\n    }\n\n    return this.props.children;\n  }\n}\n\nexport default ErrorBoundary;\n","/** Maximum number of talent points available in the game */\nexport const maxPoints = 74;\n\n// Max width of mobile/tablet devices (px)\nexport const mobileBreakpoint = 1280;\n\n/** Mapping value pairs to letters for encoding */\nexport const valuesToLetters = {\n  '00': 'a',\n  '01': 'b',\n  '02': 'c',\n  '03': 'd',\n  '04': 'e',\n  '10': 'f',\n  '11': 'g',\n  '12': 'h',\n  '13': 'i',\n  '14': 'j',\n  '20': 'k',\n  '21': 'l',\n  '22': 'm',\n  '23': 'n',\n  '24': 'o',\n  '30': 'p',\n  '31': 'q',\n  '32': 'r',\n  '33': 's',\n  '34': 't',\n  '35': 'u',\n  '40': 'v',\n  '41': 'w',\n  '42': 'x',\n  '43': 'y',\n  '44': 'z'\n};\n\n/** Mapping letters to value pairs for decoding */\nexport const lettersToValues = {\n  a: '00',\n  b: '01',\n  c: '02',\n  d: '03',\n  e: '04',\n  f: '10',\n  g: '11',\n  h: '12',\n  i: '13',\n  j: '14',\n  k: '20',\n  l: '21',\n  m: '22',\n  n: '23',\n  o: '24',\n  p: '30',\n  q: '31',\n  r: '32',\n  s: '33',\n  t: '34',\n  u: '35',\n  v: '40',\n  w: '41',\n  x: '42',\n  y: '43',\n  z: '44'\n};\n","var map = {\n\t\"./v1/Attack.json\": 200\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 199;","var map = {\n\t\"./v1/Archer.json\": 202\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 201;","var map = {\n\t\"./v1/Cavalry.json\": 204\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 203;","var map = {\n\t\"./v1/Conquering.json\": 206\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 205;","var map = {\n\t\"./v1/Defense.json\": 208\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 207;","var map = {\n\t\"./v1/Garrison.json\": 210\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 209;","var map = {\n\t\"./v1/Gathering.json\": 212\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 211;","var map = {\n\t\"./v1/Infantry.json\": 214\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 213;","var map = {\n\t\"./v1/Integration.json\": 216\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 215;","var map = {\n\t\"./v1/Leadership.json\": 218\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 217;","var map = {\n\t\"./v1/Mobility.json\": 220\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 219;","var map = {\n\t\"./v1/Peacekeeping.json\": 222\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 221;","var map = {\n\t\"./v1/Skill.json\": 224\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 223;","var map = {\n\t\"./v1/Support.json\": 226\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 225;","var map = {\n\t\"./v1/Versatility.json\": 228\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 227;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React, { Component } from 'react';\nimport { faTrashAlt, faShareAlt } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nimport './styles/NavBarButtons.css';\n\n/**\n * Nav bar component containing main buttons\n *\n * @class NavBarButtons\n * @extends {Component}\n */\nclass NavBarButtons extends Component {\n  render() {\n    return (\n      <form className=\"form-inline\">\n        <button\n          id=\"button-reset\"\n          data-testid=\"button-reset\"\n          type=\"button\"\n          className=\"btn btn-sm btn-danger\"\n          disabled={\n            this.props.commander | this.props.calcPointsSpent() ? false : true\n          }\n          onClick={this.props.resetTalents}\n        >\n          <FontAwesomeIcon icon={faTrashAlt} />\n          <span className=\"nav-button-text\">Reset</span>\n        </button>\n\n        <button\n          id=\"button-share\"\n          data-testid=\"button-share\"\n          type=\"button\"\n          disabled={\n            this.props.commander | this.props.calcPointsSpent() ? false : true\n          }\n          className=\"btn btn-sm btn-success\"\n          onClick={() => this.props.showShare()}\n        >\n          <FontAwesomeIcon icon={faShareAlt} />\n          <span className=\"nav-button-text\">Share</span>\n        </button>\n      </form>\n    );\n  }\n}\n\nexport default NavBarButtons;\n","import React, { Component } from 'react';\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\nimport Tooltip from 'react-bootstrap/Tooltip';\nimport { faQuestionCircle } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nimport './styles/Tooltips.css';\n\n/**\n * Tooltip showing a hoverable 'help' tooltip\n *\n * @class HelpTooltip\n * @extends {Component}\n */\nexport class HelpTooltip extends Component {\n  render() {\n    return (\n      <OverlayTrigger\n        placement=\"top\"\n        flip={true}\n        trigger={['hover', 'click']}\n        overlay={<Tooltip>{this.props.tooltip}</Tooltip>}\n      >\n        <FontAwesomeIcon icon={faQuestionCircle} className=\"help-icon\" />\n      </OverlayTrigger>\n    );\n  }\n}\n\nexport default { HelpTooltip };\n","import React, { Component } from 'react';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport NavItem from 'react-bootstrap/NavItem';\nimport NavLink from 'react-bootstrap/NavLink';\nimport Form from 'react-bootstrap/Form';\nimport ToggleButton from 'react-bootstrap/ToggleButton';\nimport ToggleButtonGroup from 'react-bootstrap/ToggleButtonGroup';\nimport { faCog } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { HelpTooltip } from './Tooltips';\n\nimport './styles/NavBarSettings.css';\n\n/**\n * Nav bar component containing drop down menu item for settings\n *\n * @class NavBarSettings\n * @extends {Component}\n */\nclass NavBarSettings extends Component {\n  render() {\n    return (\n      <Dropdown alignRight as={NavItem} id=\"select-settings\">\n        <Dropdown.Toggle as={NavLink} data-testid=\"select-settings\">\n          <FontAwesomeIcon icon={faCog} />\n          <span className=\"nav-button-text\">Settings</span>\n        </Dropdown.Toggle>\n\n        <Dropdown.Menu id=\"settings-menu\" className=\"nav-menu\">\n          <Form>\n            <Form.Group id=\"settings-group\">\n              <Dropdown.Header>Display</Dropdown.Header>\n              <Form.Check\n                type=\"switch\"\n                id=\"settings-info-panel\"\n                data-testid=\"settings-info-panel\"\n                label=\"Info panel\"\n                checked={this.props.isShownInfoPanel}\n                onChange={e => this.props.toggleInfoPanel()}\n              />\n              <Form.Check\n                type=\"switch\"\n                id=\"settings-values\"\n                data-testid=\"settings-values\"\n                label=\"Node values\"\n                checked={this.props.isShownValues}\n                onChange={e => this.props.toggleValueDisplay()}\n              />\n              <Form.Check\n                type=\"switch\"\n                id=\"settings-totals\"\n                data-testid=\"settings-totals\"\n                label=\"Total spent\"\n                checked={this.props.isShownTotals}\n                onChange={e => this.props.toggleTotalDisplay()}\n              />\n\n              <Dropdown.Divider />\n\n              <Dropdown.Header>Node Size</Dropdown.Header>\n              <div className=\"d-flex flex-column\">\n                <ToggleButtonGroup\n                  name=\"size\"\n                  size=\"sm\"\n                  value={this.props.nodeSize}\n                  onChange={val => {\n                    this.props.toggleNodeSize(val);\n                  }}\n                >\n                  <ToggleButton\n                    type=\"radio\"\n                    name=\"radio\"\n                    value=\"S\"\n                    variant=\"outline-primary\"\n                  >\n                    S\n                  </ToggleButton>\n                  <ToggleButton\n                    type=\"radio\"\n                    name=\"radio\"\n                    value=\"M\"\n                    variant=\"outline-primary\"\n                  >\n                    M\n                  </ToggleButton>\n                  <ToggleButton\n                    type=\"radio\"\n                    name=\"radio\"\n                    value=\"L\"\n                    variant=\"outline-primary\"\n                  >\n                    L\n                  </ToggleButton>\n                </ToggleButtonGroup>\n\n                <Dropdown.Divider />\n                <Dropdown.Header>Expert</Dropdown.Header>\n                <div className=\"help-wrapper\">\n                  <Form.Check\n                    type=\"switch\"\n                    id=\"settings-speed-mode\"\n                    label=\"Speed mode\"\n                    checked={this.props.isSpeedMode}\n                    onChange={e => this.props.toggleSpeedMode()}\n                  />\n                  <HelpTooltip\n                    tooltip=\"No tooltips. Left/right click nodes directly to assign/remove\n            points\"\n                  />\n                </div>\n              </div>\n\n              {process.env.NODE_ENV === 'development' && (\n                <React.Fragment>\n                  <Dropdown.Divider />\n                  <Dropdown.Header>Dev Mode</Dropdown.Header>\n                  <Form.Check\n                    type=\"switch\"\n                    id=\"settings-mouse\"\n                    data-testid=\"settings-mouse\"\n                    label=\"Show mouse XY\"\n                    checked={this.props.isShownMouseXY}\n                    onChange={e => this.props.toggleMouseXY()}\n                  />\n                  <Form.Check\n                    type=\"switch\"\n                    id=\"settings-talentID\"\n                    label=\"Show talent ID\"\n                    checked={this.props.isShownTalentID}\n                    onChange={e => this.props.toggleTalentID()}\n                  />\n                </React.Fragment>\n              )}\n            </Form.Group>\n          </Form>\n        </Dropdown.Menu>\n      </Dropdown>\n    );\n  }\n}\n\nexport default NavBarSettings;\n","import React, { Component } from 'react';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport NavItem from 'react-bootstrap/NavItem';\nimport NavLink from 'react-bootstrap/NavLink';\nimport { faUser } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nimport Commanders from './data/commanders.json';\nimport './styles/NavBarCommander.css';\n\n/**\n * Nav bar component containing commander drop down\n *\n * @class NavBarCommander\n * @extends {Component}\n */\nclass NavBarCommander extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isOpen: false\n    };\n\n    // Context bindings\n    this.toggleSelect = this.toggleSelect.bind(this);\n  }\n\n  /**\n   * Toggle open state of the commander select dropdown\n   *\n   * @memberof NavBarCommander\n   */\n  toggleSelect() {\n    this.setState(prevState => ({\n      isOpen: !prevState.isOpen\n    }));\n  }\n\n  /**\n   * Create a list of all available commanders (sorted)\n   *\n   * @returns {Dropdown.Item[]} Array of Dropdown items for all commanders\n   * @memberof NavBarCommander\n   */\n  createSelectItems() {\n    const commanderList = Object.keys(Commanders).sort();\n    let legendaryCommanders = [];\n    let epicCommanders = [];\n\n    commanderList.forEach(c => {\n      let selectItem = (\n        <Dropdown.Item\n          data-testid=\"menu-item\"\n          key={c}\n          onClick={() => {\n            this.props.changeCommander(c);\n          }}\n        >\n          <img\n            className=\"select-commander-icon\"\n            alt={c}\n            src={`${process.env.PUBLIC_URL}/images/commanders/${c}.png`}\n          ></img>\n          {Commanders[c]['shortName'] ? Commanders[c]['shortName'] : c}\n        </Dropdown.Item>\n      );\n\n      if (Commanders[c].tier === 'Legendary') {\n        legendaryCommanders.push(selectItem);\n      } else if (Commanders[c].tier === 'Epic') {\n        epicCommanders.push(selectItem);\n      }\n    });\n    return [\n      <Dropdown.Header key=\"header-legendary\">Legendary</Dropdown.Header>,\n      ...legendaryCommanders,\n      <Dropdown.Divider key=\"div1\" />,\n      <Dropdown.Header key=\"header-epic\">Epic</Dropdown.Header>,\n      ...epicCommanders\n    ];\n  }\n\n  render() {\n    return (\n      <Dropdown\n        alignRight\n        as={NavItem}\n        show={this.state.isOpen}\n        onToggle={this.toggleSelect}\n      >\n        <Dropdown.Toggle as={NavLink} data-testid=\"select-commander\">\n          {this.props.commander ? (\n            <img\n              data-testid=\"select-commander-icon\"\n              className=\"select-commander-icon\"\n              alt={this.props.commander}\n              src={`${process.env.PUBLIC_URL}/images/commanders/${this.props.commander}.png`}\n            ></img>\n          ) : (\n            <FontAwesomeIcon icon={faUser} />\n          )}\n          <span className=\"nav-button-text\">\n            {this.props.commander\n              ? Commanders[this.props.commander]['shortName']\n                ? Commanders[this.props.commander]['shortName']\n                : this.props.commander\n              : ' Commander'}\n          </span>\n        </Dropdown.Toggle>\n\n        <Dropdown.Menu id=\"select-commander-menu\" className=\"nav-menu\">\n          {this.createSelectItems()}\n        </Dropdown.Menu>\n      </Dropdown>\n    );\n  }\n}\n\nexport default NavBarCommander;\n","import React, { Component } from 'react';\nimport ReactGA from 'react-ga';\nimport Button from 'react-bootstrap/Button';\nimport Modal from 'react-bootstrap/Modal';\nimport {\n  faExclamationTriangle,\n  faInfoCircle,\n  faShareAlt,\n  faLink,\n  faCopy\n} from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  TwitterShareButton,\n  WhatsappShareButton,\n  RedditShareButton,\n  PocketShareButton,\n  EmailShareButton,\n  TwitterIcon,\n  WhatsappIcon,\n  RedditIcon,\n  PocketIcon,\n  EmailIcon\n} from 'react-share';\n\nimport {\n  title,\n  author,\n  repository,\n  bugs,\n  version\n} from '../package.json';\nimport './styles/Modals.css';\n\n/**\n * Modal displaying warning about an invalid build retrived from URL\n *\n * @class InvalidBuildModal\n * @extends {Component}\n */\nexport class InvalidBuildModal extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      modal: true\n    };\n\n    this.toggle = this.toggle.bind(this);\n  }\n\n  toggle() {\n    this.setState(prevState => ({\n      modal: !prevState.modal\n    }));\n  }\n\n  render() {\n    return (\n      <Modal centered show={this.state.modal} onHide={this.toggle}>\n        <Modal.Header closeButton>\n          <span>\n            <FontAwesomeIcon\n              icon={faExclamationTriangle}\n              className=\"modal-icon\"\n            />\n          </span>\n          Invalid Talent Build\n        </Modal.Header>\n        <Modal.Body>\n          <p>\n            The talent build you're trying to view is invalid. Please make sure\n            you've copied and pasted the link correctly.\n          </p>\n          <p data-testid=\"invalid-modal-body\">\n            <b>Reason:</b> {this.props.message}\n          </p>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button color=\"primary\" onClick={this.toggle}>\n            Close\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    );\n  }\n}\n\n/**\n * Modal displaying information about the application\n *\n * @class AboutModal\n * @extends {Component}\n */\nexport class AboutModal extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      modal: false\n    };\n\n    this.toggle = this.toggle.bind(this);\n  }\n\n  toggle() {\n    this.setState(prevState => ({\n      modal: !prevState.modal\n    }));\n  }\n\n  render() {\n    return (\n      <Modal centered show={this.state.modal} onHide={this.toggle}>\n        <Modal.Header closeButton>\n          <span>\n            <FontAwesomeIcon icon={faInfoCircle} className=\"modal-icon\" />\n          </span>\n          {title}\n        </Modal.Header>\n\n        <Modal.Body>\n          <div>\n            <img\n              id=\"modal-app-icon\"\n              src={`${process.env.PUBLIC_URL}/logo192.jpg`}\n              alt=\"RoK Talents Logo\"\n            ></img>\n            Talent builder for Rise of Kingdoms. Best viewed on PC/laptop.\n          </div>\n          <br />\n          <div>\n            <span className=\"about-label\">App version:</span>{' '}\n            <a\n              href={repository.releases}\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              {version}\n            </a>\n          </div>\n          <div>\n            <span className=\"about-label\">Creator:</span>{' '}\n            <a href={author.url} target=\"_blank\" rel=\"noopener noreferrer\">\n              {author.name}\n            </a>\n          </div>\n          <div>\n            <span className=\"about-label\">Code:</span>{' '}\n            <a href={repository.url} target=\"_blank\" rel=\"noopener noreferrer\">\n              GitHub\n            </a>\n          </div>\n          <div>\n            <span className=\"about-label\">Report a bug:</span>{' '}\n            <a href={bugs.report} target=\"_blank\" rel=\"noopener noreferrer\">\n              Report\n            </a>\n          </div>\n          <div>\n            <span className=\"about-label\">Support development:</span>{' '}\n            <a\n              href=\"https://www.buymeacoffee.com/simonho\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              <img\n                id=\"coffee\"\n                src=\"https://cdn.buymeacoffee.com/buttons/default-orange.png\"\n                alt=\"Buy Me A Coffee\"\n              ></img>\n            </a>\n          </div>\n        </Modal.Body>\n\n        <Modal.Footer>\n          <Button color=\"success\" onClick={this.toggle}>\n            Close\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    );\n  }\n}\n\n/**\n * Modal displaying sharing options for talent build\n *\n * @class ShareModal\n * @extends {Component}\n */\nexport class ShareModal extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      modal: false\n    };\n\n    this.toggle = this.toggle.bind(this);\n  }\n\n  toggle() {\n    this.setState(prevState => ({\n      modal: !prevState.modal\n    }));\n  }\n\n  copyURL() {\n    const input = document.getElementById('url');\n    input.readOnly = true;\n    input.select();\n    document.execCommand('copy');\n    document.getElementById('copyButton').innerHTML = '\\u2713';\n    ReactGA.event({\n      category: 'Share',\n      action: 'Copy URL'\n    });\n  }\n\n  render() {\n    return (\n      <Modal centered show={this.state.modal} onHide={this.toggle}>\n        <Modal.Header closeButton>\n          <span>\n            <FontAwesomeIcon icon={faShareAlt} className=\"modal-icon\" />\n          </span>\n          Share Talent Build\n        </Modal.Header>\n\n        <Modal.Body>\n          <div className=\"share-modal-label\">\n            Copy talent build link to your clipboard:\n          </div>\n\n          <div className=\"input-group mb-3\">\n            <div className=\"input-group-prepend\">\n              <span className=\"input-group-text\">\n                <FontAwesomeIcon icon={faLink} />\n              </span>\n            </div>\n            <input\n              id=\"url\"\n              type=\"text\"\n              className=\"form-control\"\n              defaultValue={window.location.href}\n            ></input>\n            <div className=\"input-group-append\">\n              <button\n                id=\"copyButton\"\n                className=\"btn btn-success\"\n                type=\"button\"\n                onClick={this.copyURL}\n              >\n                <FontAwesomeIcon icon={faCopy} />\n              </button>\n            </div>\n          </div>\n\n          <hr />\n\n          <div className=\"share-modal-label\">Share to social media:</div>\n\n          <div id=\"share-modal-social\">\n            <EmailShareButton url={window.location.href}>\n              <EmailIcon size={32} round />\n            </EmailShareButton>\n            <RedditShareButton url={window.location.href}>\n              <RedditIcon size={32} round />\n            </RedditShareButton>\n            <TwitterShareButton url={window.location.href}>\n              <TwitterIcon size={32} round />\n            </TwitterShareButton>\n            <WhatsappShareButton url={window.location.href}>\n              <WhatsappIcon size={32} round />\n            </WhatsappShareButton>\n            <PocketShareButton url={window.location.href}>\n              <PocketIcon size={32} round />\n            </PocketShareButton>\n          </div>\n        </Modal.Body>\n\n        <Modal.Footer>\n          <Button color=\"primary\" onClick={this.toggle}>\n            Close\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    );\n  }\n}\n\nexport default { InvalidBuildModal, AboutModal, ShareModal };\n","import React, { Component } from 'react';\nimport ReactGA from 'react-ga';\nimport MediaQuery from 'react-responsive';\nimport Navbar from 'react-bootstrap/Navbar';\nimport Nav from 'react-bootstrap/Nav';\nimport NavBarButtons from './NavBarButtons';\nimport NavBarSettings from './NavBarSettings';\nimport NavBarCommander from './NavBarCommander';\nimport { AboutModal, ShareModal } from './Modals';\nimport { faInfoCircle } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nimport { title } from '../package.json';\nimport './styles/NavBar.css';\n\n/**\n * Nav bar component containing main application buttons/controls\n *\n * @class NavBar\n * @extends {Component}\n */\nclass NavBar extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      navOpen: false\n    };\n\n    // Context bindings\n    this.toggleNav = this.toggleNav.bind(this);\n    this.toggleSelect = this.toggleSelect.bind(this);\n    this.showShare = this.showShare.bind(this);\n  }\n\n  /**\n   * Toggle visibility of the nav bar collapse/expand menu icon\n   *\n   * @memberof NavBar\n   */\n  toggleNav() {\n    this.setState(prevState => ({\n      navOpen: !prevState.navOpen\n    }));\n  }\n\n  /**\n   * Toggle open state of the commander select dropdown\n   *\n   * @memberof NavBar\n   */\n  toggleSelect() {\n    this.navBarCommanderRef.toggleSelect();\n  }\n\n  /**\n   * Control visibility of the \"About\" modal\n   *\n   * @memberof NavBar\n   */\n  showAbout() {\n    this.aboutModalRef.toggle();\n    ReactGA.event({\n      category: 'App',\n      action: 'View about modal'\n    });\n  }\n\n  /**\n   * Control visibility of the \"Share\" modal\n   *\n   * @memberof NavBar\n   */\n  showShare() {\n    this.shareModalRef.toggle();\n    ReactGA.event({\n      category: 'App',\n      action: 'View share modal'\n    });\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        <AboutModal ref={component => (this.aboutModalRef = component)} />\n        <ShareModal ref={component => (this.shareModalRef = component)} />\n\n        <Navbar\n          variant=\"light\"\n          className={this.props.isSpeedMode ? 'nav-speed' : 'navbar'}\n        >\n          <Navbar.Brand href=\"/\">\n            <img\n              id=\"nav-app-icon\"\n              src={`${process.env.PUBLIC_URL}/logo192.jpg`}\n              alt=\"RoK Talents Logo\"\n            ></img>\n          </Navbar.Brand>\n\n          <MediaQuery minDeviceWidth={380}>\n            <Navbar.Brand href=\"/\">{title}</Navbar.Brand>\n          </MediaQuery>\n\n          <Navbar.Brand\n            id=\"nav-icon\"\n            className=\"mr-auto\"\n            style={{ cursor: 'pointer' }}\n            onClick={() => this.showAbout(true)}\n          >\n            <FontAwesomeIcon icon={faInfoCircle} />\n          </Navbar.Brand>\n\n          <Nav className=\"ml-auto\">\n            <NavBarButtons\n              calcPointsSpent={this.props.calcPointsSpent}\n              resetTalents={this.props.resetTalents}\n              showShare={this.showShare}\n              commander={this.props.commander}\n            />\n\n            <NavBarSettings\n              toggleInfoPanel={this.props.toggleInfoPanel}\n              toggleTotalDisplay={this.props.toggleTotalDisplay}\n              toggleValueDisplay={this.props.toggleValueDisplay}\n              toggleNodeSize={this.props.toggleNodeSize}\n              toggleSpeedMode={this.props.toggleSpeedMode}\n              toggleMouseXY={this.props.toggleMouseXY}\n              toggleTalentID={this.props.toggleTalentID}\n              isShownInfoPanel={this.props.isShownInfoPanel}\n              isShownValues={this.props.isShownValues}\n              isShownTotals={this.props.isShownTotals}\n              isSpeedMode={this.props.isSpeedMode}\n              isShownMouseXY={this.props.isShownMouseXY}\n              isShownTalentID={this.props.isShownTalentID}\n              nodeSize={this.props.nodeSize}\n            />\n\n            <NavBarCommander\n              ref={component => (this.navBarCommanderRef = component)}\n              changeCommander={this.props.changeCommander}\n              commander={this.props.commander}\n            />\n          </Nav>\n        </Navbar>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default NavBar;\n","import React, { Component } from 'react';\n\nimport Commanders from './data/commanders.json';\nimport './styles/SummaryPanel.css';\n\n/**\n * Summary panel component displaying commander info\n *\n * @class SummaryPanel\n * @extends {Component}\n */\nclass SummaryPanel extends Component {\n  render() {\n    return (\n      <div id=\"summary-panel\" className=\"info-box\">\n        {this.props.commander && (\n          <img\n            src={`${process.env.PUBLIC_URL}/images/commanders/${this.props.commander}.png`}\n            alt={this.props.commander}\n          ></img>\n        )}\n\n        <h1>{this.props.commander ? this.props.commander : 'Summary'}</h1>\n        <h3>\n          {this.props.commander && Commanders[this.props.commander].title}\n        </h3>\n\n        <div id=\"summary-panel-summary\">\n          <p>Points remaining: {this.props.calcPointsRemaining()}</p>\n          <p>Points spent: {this.props.calcPointsSpent()}</p>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default SummaryPanel;\n","import React, { Component } from 'react';\n\nimport Commanders from './data/commanders.json';\nimport './styles/StatsPanel.css';\n\n//FIXME: calcStats is inefficient. Iterate once over everything (instead of once for each stat)\n\n/**\n * Stats panel component displaying stats about the current talent build\n *\n * @class StatsPanel\n * @extends {Component}\n */\nclass StatsPanel extends Component {\n  /**\n   * Calculate the total value of a given stat (e.g. attack, health)\n   *\n   * @param {string} stat Name of the stat to be calculated (e.g. Defense)\n   * @returns {number} Calculated value of the stat\n   * @memberof StatsPanel\n   */\n  calcStats(stat) {\n    const commander = this.props.commander;\n    let statValue = 0;\n\n    ['red', 'yellow', 'blue'].forEach(color => {\n      const nodes = this.props[color];\n\n      if (nodes.some(values => values !== 0)) {\n        nodes.forEach((value, idx) => {\n          const talentInfo = this.props.treeData[Commanders[commander][color]][\n            idx + 1\n          ];\n\n          if (value > 0 && talentInfo.stats === stat) {\n            statValue += talentInfo.values[value - 1];\n          }\n        });\n      }\n    });\n\n    return statValue;\n  }\n\n  render() {\n    return (\n      <div id=\"stats-panel\" className=\"info-box\">\n        <h2>Stats</h2>\n        <div id=\"stats-panel-stats\">\n          <p>Attack: {this.calcStats('Attack')}%</p>\n          <p>Defense: {this.calcStats('Defense')}%</p>\n          <p>Health: {this.calcStats('Health')}%</p>\n          <p>March Speed: {this.calcStats('March Speed')}%</p>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default StatsPanel;\n","import React, { Component } from 'react';\nimport ReactGA from 'react-ga';\nimport Collapse from 'react-bootstrap/Collapse';\nimport { getMaxTalentCount, replaceTalentText } from './utils';\n\nimport Commanders from './data/commanders.json';\nimport './styles/StatsTalentsPanel.css';\n\n/**\n * Stats talents panel component containing selected main talents\n *\n * @class StatsTalentsPanel\n * @extends {Component}\n */\nclass StatsTalentsPanel extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isShownStatsTalents: false\n    };\n\n    // Context bindings\n    this.toggleStatsTalents = this.toggleStatsTalents.bind(this);\n  }\n\n  /**\n   * Toggles visibility of the main talents descriptions\n   *\n   * @memberof StatsTalentsPanel\n   */\n  toggleStatsTalents() {\n    this.setState(prevState => ({\n      isShownStatsTalents: !prevState.isShownStatsTalents\n    }));\n\n    ReactGA.event({\n      category: 'App',\n      action: 'Toggle stats talents'\n    });\n  }\n\n  /**\n   * Calculate an array of the bonus stats that don't belong in any of\n   * the base state categories\n   *\n   * @param {string} stat Name of the stat to be calculated (e.g. Defense)\n   * @returns {String[]} Array of all selected main talents\n   * @memberof StatsTalentsPanel\n   */\n  calcStatsTalents() {\n    const commander = this.props.commander;\n    let talents = [];\n\n    ['red', 'yellow', 'blue'].forEach(color => {\n      const nodes = this.props[color];\n\n      if (nodes.some(values => values !== 0)) {\n        nodes.forEach((value, idx) => {\n          const talentInfo = this.props.treeData[Commanders[commander][color]][\n            idx + 1\n          ];\n\n          if (value > 0 && !talentInfo.stats) {\n            talents.push(\n              <div key={talentInfo.name} className={`stats-talents-main`}>\n                <div className=\"stats-talents-title\">\n                  <span className={`bullet bg-${color}`}></span>\n\n                  {`${talentInfo.name} (${value}/${getMaxTalentCount(\n                    talentInfo.values\n                  )})`}\n                </div>\n\n                <Collapse in={this.state.isShownStatsTalents}>\n                  <div className=\"stats-talents-text\">\n                    {replaceTalentText(\n                      talentInfo.text,\n                      talentInfo.values,\n                      value - 1\n                    )}\n                  </div>\n                </Collapse>\n              </div>\n            );\n          }\n        });\n      }\n    });\n\n    return talents;\n  }\n\n  render() {\n    return (\n      <div\n        id=\"stats-talents\"\n        className=\"info-box\"\n        onClick={this.toggleStatsTalents}\n      >\n        <h2>\n          Main Talents{' '}\n          <span className=\"stats-talents-expand\">\n            {this.state.isShownStatsTalents ? '(collapse)' : '(expand)'}\n          </span>\n        </h2>\n        <div data-testid=\"stats-talents\">{this.calcStatsTalents()}</div>\n      </div>\n    );\n  }\n}\n\nexport default StatsTalentsPanel;\n","import React, { Component } from 'react';\nimport MediaQuery from 'react-responsive';\nimport SummaryPanel from './SummaryPanel';\nimport StatsPanel from './StatsPanel';\nimport StatsTalentsPanel from './StatsTalentsPanel';\nimport ErrorBoundary from './Error';\n\nimport './styles/InfoPanel.css';\n\n/**\n * Info panel component displaying stats about the current talent build\n *\n * @class InfoPanel\n * @extends {Component}\n */\nclass InfoPanel extends Component {\n  render() {\n    return (\n      <div\n        id=\"info-panel\"\n        data-testid=\"info-panel\"\n        className={\n          this.props.isShownInfoPanel ? 'info-panel-open' : 'info-panel-closed'\n        }\n      >\n        <ErrorBoundary>\n          <div id=\"summary-panel-container\">\n            <SummaryPanel\n              commander={this.props.commander}\n              calcPointsRemaining={this.props.calcPointsRemaining}\n              calcPointsSpent={this.props.calcPointsSpent}\n            />\n            <MediaQuery orientation=\"portrait\">\n              <StatsPanel\n                commander={this.props.commander}\n                treeData={this.props.treeData}\n                red={this.props.red}\n                yellow={this.props.yellow}\n                blue={this.props.blue}\n              />\n            </MediaQuery>\n          </div>\n        </ErrorBoundary>\n\n        <MediaQuery orientation=\"landscape\">\n          <ErrorBoundary>\n            <StatsPanel\n              commander={this.props.commander}\n              treeData={this.props.treeData}\n              red={this.props.red}\n              yellow={this.props.yellow}\n              blue={this.props.blue}\n            />\n          </ErrorBoundary>\n\n          <ErrorBoundary>\n            <StatsTalentsPanel\n              commander={this.props.commander}\n              treeData={this.props.treeData}\n              red={this.props.red}\n              yellow={this.props.yellow}\n              blue={this.props.blue}\n            />\n          </ErrorBoundary>\n        </MediaQuery>\n      </div>\n    );\n  }\n}\n\nexport default InfoPanel;\n","// Utility to map data files to object\nfunction loadTreeData(version) {\n  const treeData = {\n    Attack: require(`./v${version}/Attack.json`),\n    Archer: require(`./v${version}/Archer.json`),\n    Cavalry: require(`./v${version}/Cavalry.json`),\n    Conquering: require(`./v${version}/Conquering.json`),\n    Defense: require(`./v${version}/Defense.json`),\n    Garrison: require(`./v${version}/Garrison.json`),\n    Gathering: require(`./v${version}/Gathering.json`),\n    Infantry: require(`./v${version}/Infantry.json`),\n    Integration: require(`./v${version}/Integration.json`),\n    Leadership: require(`./v${version}/Leadership.json`),\n    Mobility: require(`./v${version}/Mobility.json`),\n    Peacekeeping: require(`./v${version}/Peacekeeping.json`),\n    Skill: require(`./v${version}/Skill.json`),\n    Support: require(`./v${version}/Support.json`),\n    Versatility: require(`./v${version}/Versatility.json`)\n  };\n\n  if (process.env.NODE_ENV === 'development') {\n    console.info(`Info: Loading game data version ${version}`);\n  }\n\n  return treeData;\n}\n\nexport default loadTreeData;\n","import React, { Component, Suspense } from 'react';\nimport ReactGA from 'react-ga';\nimport Spinner from 'react-bootstrap/Spinner';\nimport NavBar from './NavBar';\nimport InfoPanel from './InfoPanel';\nimport { InvalidBuildModal } from './Modals';\nimport ErrorBoundary from './Error';\nimport loadTreeData from './data/AllTrees';\nimport Commanders from './data/commanders.json';\nimport {\n  sumArray,\n  getMaxTalentCount,\n  setTitle,\n  isTouchDevice,\n  encode,\n  decode\n} from './utils';\nimport { maxPoints } from './values';\nimport { dataVersion } from '../package.json';\n\nimport './styles/App.css';\nimport './styles/fonts.css';\n\nconst TreePanel = React.lazy(() => import('./TreePanel'));\nlet treeData;\n\n//TODO: shouldComponentUpdate pass\n//FIXME: only updateurl/encode if that particular tree has changed\n\n/**\n * Main application component. Contains high level logic for managing application state\n *\n * @class App\n * @extends {Component}\n */\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.invalidModalFlag = false;\n    this.invalidBuildMessage = '';\n\n    // Context bindings\n    this.toggleInfoPanel = this.toggleInfoPanel.bind(this);\n    this.toggleTotalDisplay = this.toggleTotalDisplay.bind(this);\n    this.toggleValueDisplay = this.toggleValueDisplay.bind(this);\n    this.toggleNodeSize = this.toggleNodeSize.bind(this);\n    this.toggleSpeedMode = this.toggleSpeedMode.bind(this);\n    this.toggleMouseXY = this.toggleMouseXY.bind(this);\n    this.toggleTalentID = this.toggleTalentID.bind(this);\n    this.toggleSelect = this.toggleSelect.bind(this);\n    this.changeCommander = this.changeCommander.bind(this);\n    this.resetTalents = this.resetTalents.bind(this);\n    this.changeTalentValue = this.changeTalentValue.bind(this);\n    this.calcPointsSpent = this.calcPointsSpent.bind(this);\n    this.calcPointsRemaining = this.calcPointsRemaining.bind(this);\n\n    // Set initial state from query string\n    const urlParams = this.props.url.slice(1).split(';');\n\n    switch (urlParams.length) {\n      case 1: // blank url\n        this.state = this.getEmptyState();\n        this.updateURL('clear');\n        break;\n      case 5: // complete url\n        //FIXME: this loads treeData twice if url is valid\n        this.state = this.getEmptyState();\n        let [urlDataVersion, comID, red, yellow, blue] = urlParams;\n        urlDataVersion = parseInt(urlDataVersion);\n\n        const commanderName = Object.keys(Commanders).find(\n          key => Commanders[key]['id'] === comID\n        );\n\n        // Check for invalid build\n        if (urlDataVersion > dataVersion) {\n          this.invalidBuildMessage = 'Incorrect game data version';\n          this.invalidModalFlag = true;\n        } else if (!commanderName) {\n          this.invalidBuildMessage = 'Unknown commander ID';\n          this.invalidModalFlag = true;\n        } else {\n          treeData = loadTreeData(urlDataVersion);\n          this.state = {\n            ...this.state,\n            dataVersion: urlDataVersion,\n            commander: commanderName,\n            ...this.createZeroTalents(commanderName)\n          };\n\n          const colorPairs = [\n            [red, 'red'],\n            [yellow, 'yellow'],\n            [blue, 'blue']\n          ];\n\n          for (let color of colorPairs) {\n            // Decode and split talent string into array\n            let talents = decode(color[0])\n              .split('')\n              .map(Number);\n            const maxArray = this.createMaxValueArray(\n              this.state.commander,\n              color[1]\n            );\n\n            if (talents.length !== this.state[color[1]].length) {\n              // Check talent array is correct length\n              this.invalidBuildMessage = `Incorrect number of talents (${color[1]} tree)`;\n              this.invalidModalFlag = true;\n              break;\n            } else if (\n              // Check spent values are not too large\n              talents.some(function(el, idx) {\n                return el > maxArray[idx];\n              })\n            ) {\n              this.invalidBuildMessage = `Too many points assigned in talent (${color[1]} tree)`;\n              this.invalidModalFlag = true;\n              break;\n            } else {\n              this.state[color[1]] = talents;\n            }\n          }\n\n          // Check that the talent build has not overspent points\n          if (this.calcPointsRemaining() < 0) {\n            this.invalidBuildMessage = `Number of spent talent points exceeds maximum`;\n            this.invalidModalFlag = true;\n          }\n        }\n\n        if (this.invalidModalFlag) {\n          this.state = this.getEmptyState();\n          this.updateURL('clear');\n        } else {\n          this.updateURL('update');\n        }\n        break;\n      default:\n        // Incorrect number of url params\n        this.invalidBuildMessage = `Incorrect number of build parameters (length: ${urlParams.length}, expected: 5)`;\n        this.invalidModalFlag = true;\n        this.state = this.getEmptyState();\n        this.updateURL('clear');\n    }\n  }\n\n  /**\n   * Get empty state values for new application instance. Also checks\n   * local storage for saved settings\n   *\n   * @returns {object} Object containing blank state values\n   * @memberof App\n   */\n  getEmptyState() {\n    treeData = loadTreeData(dataVersion);\n\n    const isShownInfoPanel = JSON.parse(\n      localStorage.getItem('isShownInfoPanel')\n    );\n    const isShownValues = JSON.parse(localStorage.getItem('isShownValues'));\n    const isShownTotals = JSON.parse(localStorage.getItem('isShownTotals'));\n    const isSpeedMode = JSON.parse(localStorage.getItem('isSpeedMode'));\n    const isShownMouseXY = JSON.parse(localStorage.getItem('isShownMouseXY'));\n    const isShownTalentID = JSON.parse(localStorage.getItem('isShownTalentID'));\n\n    return {\n      dataVersion: dataVersion,\n      commander: '',\n      red: [],\n      yellow: [],\n      blue: [],\n      nodeSize: localStorage.getItem('nodeSize') || 'M',\n      isShownInfoPanel: isShownInfoPanel === null ? true : isShownInfoPanel,\n      isShownValues: isShownValues === null ? true : isShownValues,\n      isShownTotals: isShownTotals === null ? true : isShownTotals,\n      isSpeedMode: isSpeedMode === null ? false : isSpeedMode,\n      isShownMouseXY: isShownMouseXY === null ? false : isShownMouseXY,\n      isShownTalentID: isShownTalentID === null ? false : isShownTalentID\n    };\n  }\n\n  /**\n   * Set app state to empty and update the current URL\n   *\n   * @memberof App\n   */\n  setEmptyState() {\n    this.setState(this.getEmptyState(), () => {\n      this.updateURL('clear');\n    });\n  }\n\n  /**\n   * Update the current URL\n   *\n   * @param {string} method {update | clear} Should the new URL be updated\n   * with the new state or cleared (new app state)?\n   * @memberof App\n   */\n  updateURL(method) {\n    let queryString;\n\n    switch (method) {\n      case 'update':\n        queryString =\n          '?' +\n          [\n            this.state.dataVersion,\n            Commanders[this.state.commander].id,\n            encode(this.state.red.join('')),\n            encode(this.state.yellow.join('')),\n            encode(this.state.blue.join(''))\n          ].join(';');\n\n        setTitle(\n          this.state.commander,\n          this.state.red,\n          this.state.yellow,\n          this.state.blue\n        );\n        break;\n      case 'clear':\n        queryString = '/';\n        break;\n      default:\n        break;\n    }\n    window.history.replaceState('', '', queryString);\n  }\n\n  /**\n   * Set blank state object for the newly selected commander,\n   * followed by `this.updateURL()`\n   *\n   * @param {string} commander Name of the commander being changed to\n   * @memberof App\n   */\n  changeCommander(commander) {\n    if (this.state.dataVersion !== dataVersion) {\n      treeData = loadTreeData(dataVersion);\n    }\n\n    const zeroTalents = this.createZeroTalents(commander);\n    this.setState(\n      { dataVersion: dataVersion, commander: commander, ...zeroTalents },\n      () => {\n        this.updateURL('update');\n        this.treePanelRef.drawLines();\n\n        ReactGA.event({\n          category: 'Navigation',\n          action: 'Change commander',\n          label: commander\n        });\n      }\n    );\n\n    if (!isTouchDevice()) {\n      this.treePanelRef.resetPanZoom();\n    }\n  }\n\n  /**\n   * Create a new/blank state object for a commander. The individual talent\n   * tree arrays will be filled with an appropriate number of `0`\n   *\n   * @param {string} commander Name of commander to create empty talents for\n   * @returns {object} Object containing `0` arrays for each tree color\n   * @memberof App\n   */\n  createZeroTalents(commander) {\n    const numRed = Object.keys(treeData[Commanders[commander]['red']]).length;\n    const numYellow = Object.keys(treeData[Commanders[commander]['yellow']])\n      .length;\n    const numBlue = Object.keys(treeData[Commanders[commander]['blue']]).length;\n\n    const zeroTalents = {\n      red: Array(numRed).fill(0),\n      yellow: Array(numYellow).fill(0),\n      blue: Array(numBlue).fill(0)\n    };\n\n    return zeroTalents;\n  }\n\n  /**\n   * Set all tree node values to `0` for the currently selected commander\n   *\n   * @memberof App\n   */\n  resetTalents() {\n    ReactGA.event({\n      category: 'App',\n      action: 'Reset build'\n    });\n    this.changeCommander(this.state.commander);\n  }\n\n  /**\n   * Change the value of a single talent node. Followed by `this.updateURL()`\n   *\n   * @param {string} color Color of the tree the node belongs to\n   * @param {number} idx Index of the node in the tree/color array.\n   * @param {string} how {increase | decrease} Should node value be increased\n   *  or decreased?\n   * @memberof App\n   */\n  changeTalentValue(color, idx, how) {\n    let newArr = this.state[color];\n    if (how === 'increase') {\n      newArr[idx - 1] += 1;\n    } else if (how === 'decrease') {\n      newArr[idx - 1] -= 1;\n    }\n    this.setState({ [color]: newArr }, () => this.updateURL('update'));\n  }\n\n  /**\n   * Get the maximum number of available points for each talent\n   *\n   * @param {string} commander Name of the commander\n   * @param {string} color Color of the tree to get max values for\n   * @returns {Number[]} Array of maximum available points for each talent in the tree\n   * @memberof App\n   */\n  createMaxValueArray(commander, color) {\n    let maxArray = [];\n\n    Object.keys(treeData[Commanders[commander][color]]).forEach(id => {\n      maxArray.push(\n        getMaxTalentCount(treeData[Commanders[commander][color]][id]['values'])\n      );\n    });\n\n    return maxArray;\n  }\n\n  /**\n   * Calculate the total number of talent points spent. This is just a sum\n   * of all the color/tree array values\n   *\n   * @param {string} color Color of the tree to sum. Omitting this param sums\n   * across all trees\n   * @returns {number} Total number of talent points spent\n   * @memberof App\n   */\n  calcPointsSpent(color = 'total') {\n    let points;\n\n    if (color === 'total') {\n      points = [...this.state.red, ...this.state.yellow, ...this.state.blue];\n    } else {\n      points = [...this.state[color]];\n    }\n\n    return sumArray(points);\n  }\n\n  /**\n   * Calculate number of remaining talent points available to be spent\n   *\n   * @returns {number} Number of remaining talent points\n   * @memberof App\n   */\n  calcPointsRemaining() {\n    return maxPoints - this.calcPointsSpent();\n  }\n\n  /**\n   * Toggle display of info panel\n   *\n   * @memberof App\n   */\n  toggleInfoPanel() {\n    this.setState(\n      prevState => ({\n        isShownInfoPanel: !prevState.isShownInfoPanel\n      }),\n      () => {\n        this.treePanelRef.repaint();\n        localStorage.setItem('isShownInfoPanel', this.state.isShownInfoPanel);\n      }\n    );\n\n    ReactGA.event({\n      category: 'Settings',\n      action: 'Toggle info panel'\n    });\n  }\n\n  /**\n   * Toggle display of total number of points spent in each tree\n   *\n   * @memberof App\n   */\n  toggleTotalDisplay() {\n    this.setState(\n      prevState => ({\n        isShownTotals: !prevState.isShownTotals\n      }),\n      () => {\n        localStorage.setItem('isShownTotals', this.state.isShownTotals);\n      }\n    );\n\n    ReactGA.event({\n      category: 'Settings',\n      action: 'Toggle tree totals'\n    });\n  }\n\n  /**\n   * Toggle display of node values\n   *\n   * @memberof App\n   */\n  toggleValueDisplay() {\n    this.setState(\n      prevState => ({\n        isShownValues: !prevState.isShownValues\n      }),\n      () => {\n        localStorage.setItem('isShownValues', this.state.isShownValues);\n      }\n    );\n\n    ReactGA.event({\n      category: 'Settings',\n      action: 'Toggle node values'\n    });\n  }\n\n  /**\n   * Toggle node size\n   *\n   * @param {string} size Desired node size\n   * @memberof App\n   */\n  toggleNodeSize(size) {\n    this.setState({ nodeSize: size }, () => {\n      this.treePanelRef.repaint();\n      localStorage.setItem('nodeSize', this.state.nodeSize);\n    });\n\n    ReactGA.event({\n      category: 'Settings',\n      action: 'Toggle node size',\n      label: size\n    });\n  }\n\n  /**\n   * Toggle speed mode\n   *\n   * @memberof App\n   */\n  toggleSpeedMode() {\n    this.setState(\n      prevState => ({\n        isSpeedMode: !prevState.isSpeedMode\n      }),\n      () => {\n        this.treePanelRef.drawLines();\n        localStorage.setItem('isSpeedMode', this.state.isSpeedMode);\n      }\n    );\n\n    ReactGA.event({\n      category: 'Settings',\n      action: 'Toggle speed mode'\n    });\n  }\n\n  /**\n   * Toggle mouse XY position display\n   *\n   * @memberof App\n   */\n  toggleMouseXY() {\n    this.setState(\n      prevState => ({\n        isShownMouseXY: !prevState.isShownMouseXY\n      }),\n      () => {\n        this.treePanelRef.toggleMouseListeners();\n        localStorage.setItem('isShownMouseXY', this.state.isShownMouseXY);\n      }\n    );\n  }\n\n  /**\n   * Toggle tooltip talent ID\n   *\n   * @memberof App\n   */\n  toggleTalentID() {\n    this.setState(\n      prevState => ({\n        isShownTalentID: !prevState.isShownTalentID\n      }),\n      () => {\n        localStorage.setItem('isShownTalentID', this.state.isShownTalentID);\n      }\n    );\n  }\n\n  /**\n   * Toggle commander select dropdown. Uses a ref to the navbar\n   *\n   * @memberof App\n   */\n  toggleSelect() {\n    this.navBarRef.toggleSelect();\n  }\n\n  render() {\n    return (\n      <div id=\"app\">\n        {this.invalidModalFlag && (\n          <InvalidBuildModal message={this.invalidBuildMessage} />\n        )}\n\n        <ErrorBoundary>\n          <NavBar\n            ref={component => (this.navBarRef = component)}\n            toggleInfoPanel={this.toggleInfoPanel}\n            toggleTotalDisplay={this.toggleTotalDisplay}\n            toggleValueDisplay={this.toggleValueDisplay}\n            toggleNodeSize={this.toggleNodeSize}\n            toggleSpeedMode={this.toggleSpeedMode}\n            toggleMouseXY={this.toggleMouseXY}\n            toggleTalentID={this.toggleTalentID}\n            changeCommander={this.changeCommander}\n            calcPointsSpent={this.calcPointsSpent}\n            resetTalents={this.resetTalents}\n            commander={this.state.commander}\n            nodeSize={this.state.nodeSize}\n            isShownInfoPanel={this.state.isShownInfoPanel}\n            isShownValues={this.state.isShownValues}\n            isShownTotals={this.state.isShownTotals}\n            isSpeedMode={this.state.isSpeedMode}\n            isShownMouseXY={this.state.isShownMouseXY}\n            isShownTalentID={this.state.isShownTalentID}\n          />\n        </ErrorBoundary>\n\n        <div id=\"main-container\">\n          <Suspense\n            fallback={\n              <div id=\"spinner\">\n                <Spinner size=\"lg\" animation=\"border\" variant=\"light\" />\n                <br />\n                <span className=\"sr-only\">Loading...</span>\n              </div>\n            }\n          >\n            <ErrorBoundary>\n              <InfoPanel\n                ref={component => (this.infoPanelRef = component)}\n                calcPointsSpent={this.calcPointsSpent}\n                calcPointsRemaining={this.calcPointsRemaining}\n                treeData={treeData}\n                commander={this.state.commander}\n                red={this.state.red}\n                yellow={this.state.yellow}\n                blue={this.state.blue}\n                isShownInfoPanel={this.state.isShownInfoPanel}\n              />\n            </ErrorBoundary>\n\n            <ErrorBoundary>\n              <TreePanel\n                ref={component => (this.treePanelRef = component)}\n                toggleSelect={this.toggleSelect}\n                changeCommander={this.changeCommander}\n                resetTalents={this.resetTalents}\n                changeTalentValue={this.changeTalentValue}\n                calcPointsSpent={this.calcPointsSpent}\n                calcPointsRemaining={this.calcPointsRemaining}\n                treeData={treeData}\n                dataVersion={this.state.dataVersion}\n                commander={this.state.commander}\n                red={this.state.red}\n                yellow={this.state.yellow}\n                blue={this.state.blue}\n                nodeSize={this.state.nodeSize}\n                isShownValues={this.state.isShownValues}\n                isShownTotals={this.state.isShownTotals}\n                isSpeedMode={this.state.isSpeedMode}\n                isShownMouseXY={this.state.isShownMouseXY}\n                isShownTalentID={this.state.isShownTalentID}\n              />\n            </ErrorBoundary>\n          </Suspense>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport ReactGA from 'react-ga';\nimport * as serviceWorker from './serviceWorker';\nimport App from './App';\n\nReactGA.initialize('UA-114296077-2');\nReactGA.pageview('/');\n\nconst url = window.location.search;\nReactDOM.render(<App url={url} />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}