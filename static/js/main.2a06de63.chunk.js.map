{"version":3,"sources":["utils.js","Error.js","values.js","data sync /^/v.*/Attack/.json$","data sync /^/v.*/Archer/.json$","data sync /^/v.*/Cavalry/.json$","data sync /^/v.*/Conquering/.json$","data sync /^/v.*/Defense/.json$","data sync /^/v.*/Garrison/.json$","data sync /^/v.*/Gathering/.json$","data sync /^/v.*/Infantry/.json$","data sync /^/v.*/Integration/.json$","data sync /^/v.*/Leadership/.json$","data sync /^/v.*/Mobility/.json$","data sync /^/v.*/Peacekeeping/.json$","data sync /^/v.*/Skill/.json$","data sync /^/v.*/Support/.json$","data sync /^/v.*/Versatility/.json$","serviceWorker.js","NavBarButtons.js","NavBarSettings.js","NavBarCommander.js","Modals.js","NavBar.js","SummaryPanel.js","StatsPanel.js","StatsTalentsPanel.js","SidePanel.js","data/AllTrees.js","App.js","index.js"],"names":["sumArray","arr","reduce","partial","a","isMultidimensional","filter","Array","isArray","length","getMaxTalentCount","talentValues","replaceTalentText","text","replacementIdx","newText","i","re","RegExp","replace","getTreeName","color","commander","commanderData","Commanders","setTitle","r","y","b","sep","document","title","createSummaryString","rSpent","ySpent","bSpent","name","shortName","encode","match","map","v","valuesToLetters","hasOwnProperty","join","decode","encoded","split","k","lettersToValues","ErrorBoundary","props","state","error","errorInfo","this","setState","style","whiteSpace","toString","componentStack","children","Component","maxPoints","mobileBreakpoint","c","d","e","f","g","h","j","l","m","n","o","p","q","s","t","u","w","x","z","webpackContext","req","id","webpackContextResolve","__webpack_require__","Error","code","keys","Object","resolve","module","exports","Boolean","window","location","hostname","NavBarButtons","className","data-testid","type","disabled","calcPointsSpent","onClick","resetTalents","icon","faTrashAlt","showShare","faShareAlt","NavBarSettings","Dropdown","alignRight","as","NavItem","Toggle","NavLink","faCog","Menu","Form","Group","Header","Check","label","checked","isShownSidePanel","onChange","toggleSidePanel","isShownValues","toggleValueDisplay","isShownTotals","toggleTotalDisplay","Divider","ToggleButtonGroup","size","value","nodeSize","val","toggleNodeSize","ToggleButton","variant","process","NavBarCommander","isOpen","toggleSelect","bind","prevState","commanderList","sort","legendaryCommanders","epicCommanders","forEach","selectItem","Item","key","changeCommander","alt","src","tier","push","show","onToggle","faUser","createSelectItems","InvalidBuildModal","modal","toggle","Modal","centered","onHide","closeButton","faExclamationTriangle","Body","message","Footer","Button","AboutModal","faInfoCircle","href","repository","releases","target","rel","version","dataVersion","author","url","bugs","report","ShareModal","input","getElementById","readOnly","select","execCommand","innerHTML","ReactGA","event","category","action","faLink","defaultValue","copyURL","faCopy","EmailShareButton","EmailIcon","round","RedditShareButton","RedditIcon","TwitterShareButton","TwitterIcon","WhatsappShareButton","WhatsappIcon","PocketShareButton","PocketIcon","NavBar","navOpen","toggleNav","navBarCommanderRef","aboutModalRef","shareModalRef","Fragment","ref","component","Navbar","bg","Brand","minDeviceWidth","cursor","showAbout","Nav","toggleMouseXY","toggleTalentID","isShownMouseXY","isShownTalentID","SummaryPanel","calcPointsRemaining","StatsPanel","stat","statValue","nodes","some","values","idx","talentInfo","treeData","stats","calcStats","StatsTalentsPanel","isShownStatsTalents","toggleStatsTalents","talents","Collapse","in","calcStatsTalents","SidePanel","orientation","red","yellow","blue","loadTreeData","Attack","require","Archer","Cavalry","Conquering","Defense","Garrison","Gathering","Infantry","Integration","Leadership","Mobility","Peacekeeping","Skill","Support","Versatility","TreePanel","React","lazy","App","invalidModalFlag","invalidBuildMessage","changeTalentValue","urlParams","slice","getEmptyState","updateURL","urlDataVersion","comID","parseInt","commanderName","find","createZeroTalents","Number","maxArray","createMaxValueArray","el","JSON","parse","localStorage","getItem","method","queryString","history","replaceState","zeroTalents","treePanelRef","drawLines","resetPanZoom","numRed","numYellow","numBlue","fill","how","newArr","points","repaint","setItem","toggleMouseListeners","navBarRef","fallback","Spinner","animation","sidePanelRef","initialize","pageview","search","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"03KAAA,yQAWO,SAASA,EAASC,GACvB,OAAOA,EAAIC,QAAO,SAACC,EAASC,GAAV,OAAgBD,EAAUC,IAAG,GA6B1C,SAASC,EAAmBJ,GACjC,OAA4C,IAArCA,EAAIK,OAAOC,MAAMC,SAASC,OAS5B,SAASC,EAAkBC,GAQhC,OANKN,EAAmBM,GAIhBA,EAAa,GAAGF,OAHhBE,EAAaF,OAgBhB,SAASG,EAAkBC,EAAMF,EAAcG,GACpD,IAAIC,EAAUF,EAEd,GAAIR,EAAmBM,GACrB,IAAK,IAAIK,EAAI,EAAGA,EAAIL,EAAaF,OAAQO,IAAK,CAC5C,IAAIC,EAAK,IAAIC,OAAJ,gBAAoBF,EAAI,EAAxB,OAAgC,KACzCD,EAAUA,EAAQI,QAAQF,EAAIN,EAAaK,GAAGF,SAGhDC,EAAUA,EAAQI,QAAQ,WAAYR,EAAaG,IAGrD,OAAOC,EAWF,SAASK,EAAYC,EAAOC,GACjC,IAAMC,EAAgBC,EAAWF,GACjC,GAAIC,EACF,OAAOA,EAAcF,GAalB,SAASI,EAASH,EAAWI,EAAGC,EAAGC,GAAe,IAAZC,EAAW,uDAAL,IACjDC,SAASC,MAAT,UAAoBC,EAAoBV,EAAWI,EAAGC,EAAGC,EAAGC,GAA5D,cAAsEE,KAajE,SAASC,EAAoBV,EAAWI,EAAGC,EAAGC,GAAe,IAAZC,EAAW,uDAAL,IACtDI,EAASjC,EAAS0B,GAClBQ,EAASlC,EAAS2B,GAClBQ,EAASnC,EAAS4B,GAClBQ,EAAOZ,EAAWF,GAAWe,WAAaf,EAChD,MAAM,GAAN,OAAUc,EAAV,aAAmBH,GAAnB,OAA4BJ,GAA5B,OAAkCK,GAAlC,OAA2CL,GAA3C,OAAiDM,EAAjD,KASK,SAASG,EAAOzB,GAQrB,OAPgBA,EACb0B,MAAM,UACNC,KAAI,SAAAC,GACH,OAAOC,IAAgBC,eAAeF,GAAKC,IAAgBD,GAAKA,KAEjEG,KAAK,IAWH,SAASC,EAAOC,GAQrB,OAPgBA,EACbC,MAAM,IACNP,KAAI,SAAAQ,GACH,OAAOC,IAAgBN,eAAeK,GAAKC,IAAgBD,GAAKA,KAEjEJ,KAAK,M,gHC9JJM,E,YACJ,WAAYC,GAAQ,IAAD,8BACjB,4CAAMA,KACDC,MAAQ,CAAEC,MAAO,KAAMC,UAAW,MAFtB,E,+EAKDD,EAAOC,GAEvBC,KAAKC,SAAS,CACZH,MAAOA,EACPC,UAAWA,M,+BAKb,OAAIC,KAAKH,MAAME,UAGX,6BACE,gDACA,6BAASG,MAAO,CAAEC,WAAY,aAC3BH,KAAKH,MAAMC,OAASE,KAAKH,MAAMC,MAAMM,WACtC,6BACCJ,KAAKH,MAAME,UAAUM,iBAMvBL,KAAKJ,MAAMU,a,GA7BMC,aAiCbZ,O,iCCnCf,wIACO,IAAMa,EAAY,GAGZC,EAAmB,KAGnBtB,EAAkB,CAC7B,KAAM,IACN,KAAM,IACN,KAAM,IACN,KAAM,IACN,KAAM,IACN,GAAM,IACN,GAAM,IACN,GAAM,IACN,GAAM,IACN,GAAM,IACN,GAAM,IACN,GAAM,IACN,GAAM,IACN,GAAM,IACN,GAAM,IACN,GAAM,IACN,GAAM,IACN,GAAM,IACN,GAAM,IACN,GAAM,IACN,GAAM,IACN,GAAM,IACN,GAAM,IACN,GAAM,IACN,GAAM,IACN,GAAM,KAIKO,EAAkB,CAC7B7C,EAAG,KACHwB,EAAG,KACHqC,EAAG,KACHC,EAAG,KACHC,EAAG,KACHC,EAAG,KACHC,EAAG,KACHC,EAAG,KACHtD,EAAG,KACHuD,EAAG,KACHvB,EAAG,KACHwB,EAAG,KACHC,EAAG,KACHC,EAAG,KACHC,EAAG,KACHC,EAAG,KACHC,EAAG,KACHnD,EAAG,KACHoD,EAAG,KACHC,EAAG,KACHC,EAAG,KACHvC,EAAG,KACHwC,EAAG,KACHC,EAAG,KACHvD,EAAG,KACHwD,EAAG,O,8VC/DL,IAAI3C,EAAM,CACT,mBAAoB,KAIrB,SAAS4C,EAAeC,GACvB,IAAIC,EAAKC,EAAsBF,GAC/B,OAAOG,EAAoBF,GAE5B,SAASC,EAAsBF,GAC9B,IAAIG,EAAoBb,EAAEnC,EAAK6C,GAAM,CACpC,IAAIlB,EAAI,IAAIsB,MAAM,uBAAyBJ,EAAM,KAEjD,MADAlB,EAAEuB,KAAO,mBACHvB,EAEP,OAAO3B,EAAI6C,GAEZD,EAAeO,KAAO,WACrB,OAAOC,OAAOD,KAAKnD,IAEpB4C,EAAeS,QAAUN,EACzBO,EAAOC,QAAUX,EACjBA,EAAeE,GAAK,K,kqICtBpB,IAAI9C,EAAM,CACT,mBAAoB,KAIrB,SAAS4C,EAAeC,GACvB,IAAIC,EAAKC,EAAsBF,GAC/B,OAAOG,EAAoBF,GAE5B,SAASC,EAAsBF,GAC9B,IAAIG,EAAoBb,EAAEnC,EAAK6C,GAAM,CACpC,IAAIlB,EAAI,IAAIsB,MAAM,uBAAyBJ,EAAM,KAEjD,MADAlB,EAAEuB,KAAO,mBACHvB,EAEP,OAAO3B,EAAI6C,GAEZD,EAAeO,KAAO,WACrB,OAAOC,OAAOD,KAAKnD,IAEpB4C,EAAeS,QAAUN,EACzBO,EAAOC,QAAUX,EACjBA,EAAeE,GAAK,K,8pICtBpB,IAAI9C,EAAM,CACT,oBAAqB,KAItB,SAAS4C,EAAeC,GACvB,IAAIC,EAAKC,EAAsBF,GAC/B,OAAOG,EAAoBF,GAE5B,SAASC,EAAsBF,GAC9B,IAAIG,EAAoBb,EAAEnC,EAAK6C,GAAM,CACpC,IAAIlB,EAAI,IAAIsB,MAAM,uBAAyBJ,EAAM,KAEjD,MADAlB,EAAEuB,KAAO,mBACHvB,EAEP,OAAO3B,EAAI6C,GAEZD,EAAeO,KAAO,WACrB,OAAOC,OAAOD,KAAKnD,IAEpB4C,EAAeS,QAAUN,EACzBO,EAAOC,QAAUX,EACjBA,EAAeE,GAAK,K,+hICtBpB,IAAI9C,EAAM,CACT,uBAAwB,KAIzB,SAAS4C,EAAeC,GACvB,IAAIC,EAAKC,EAAsBF,GAC/B,OAAOG,EAAoBF,GAE5B,SAASC,EAAsBF,GAC9B,IAAIG,EAAoBb,EAAEnC,EAAK6C,GAAM,CACpC,IAAIlB,EAAI,IAAIsB,MAAM,uBAAyBJ,EAAM,KAEjD,MADAlB,EAAEuB,KAAO,mBACHvB,EAEP,OAAO3B,EAAI6C,GAEZD,EAAeO,KAAO,WACrB,OAAOC,OAAOD,KAAKnD,IAEpB4C,EAAeS,QAAUN,EACzBO,EAAOC,QAAUX,EACjBA,EAAeE,GAAK,K,k8HCtBpB,IAAI9C,EAAM,CACT,oBAAqB,KAItB,SAAS4C,EAAeC,GACvB,IAAIC,EAAKC,EAAsBF,GAC/B,OAAOG,EAAoBF,GAE5B,SAASC,EAAsBF,GAC9B,IAAIG,EAAoBb,EAAEnC,EAAK6C,GAAM,CACpC,IAAIlB,EAAI,IAAIsB,MAAM,uBAAyBJ,EAAM,KAEjD,MADAlB,EAAEuB,KAAO,mBACHvB,EAEP,OAAO3B,EAAI6C,GAEZD,EAAeO,KAAO,WACrB,OAAOC,OAAOD,KAAKnD,IAEpB4C,EAAeS,QAAUN,EACzBO,EAAOC,QAAUX,EACjBA,EAAeE,GAAK,K,u/HCtBpB,IAAI9C,EAAM,CACT,qBAAsB,KAIvB,SAAS4C,EAAeC,GACvB,IAAIC,EAAKC,EAAsBF,GAC/B,OAAOG,EAAoBF,GAE5B,SAASC,EAAsBF,GAC9B,IAAIG,EAAoBb,EAAEnC,EAAK6C,GAAM,CACpC,IAAIlB,EAAI,IAAIsB,MAAM,uBAAyBJ,EAAM,KAEjD,MADAlB,EAAEuB,KAAO,mBACHvB,EAEP,OAAO3B,EAAI6C,GAEZD,EAAeO,KAAO,WACrB,OAAOC,OAAOD,KAAKnD,IAEpB4C,EAAeS,QAAUN,EACzBO,EAAOC,QAAUX,EACjBA,EAAeE,GAAK,K,ovJCtBpB,IAAI9C,EAAM,CACT,sBAAuB,KAIxB,SAAS4C,EAAeC,GACvB,IAAIC,EAAKC,EAAsBF,GAC/B,OAAOG,EAAoBF,GAE5B,SAASC,EAAsBF,GAC9B,IAAIG,EAAoBb,EAAEnC,EAAK6C,GAAM,CACpC,IAAIlB,EAAI,IAAIsB,MAAM,uBAAyBJ,EAAM,KAEjD,MADAlB,EAAEuB,KAAO,mBACHvB,EAEP,OAAO3B,EAAI6C,GAEZD,EAAeO,KAAO,WACrB,OAAOC,OAAOD,KAAKnD,IAEpB4C,EAAeS,QAAUN,EACzBO,EAAOC,QAAUX,EACjBA,EAAeE,GAAK,K,0wICtBpB,IAAI9C,EAAM,CACT,qBAAsB,KAIvB,SAAS4C,EAAeC,GACvB,IAAIC,EAAKC,EAAsBF,GAC/B,OAAOG,EAAoBF,GAE5B,SAASC,EAAsBF,GAC9B,IAAIG,EAAoBb,EAAEnC,EAAK6C,GAAM,CACpC,IAAIlB,EAAI,IAAIsB,MAAM,uBAAyBJ,EAAM,KAEjD,MADAlB,EAAEuB,KAAO,mBACHvB,EAEP,OAAO3B,EAAI6C,GAEZD,EAAeO,KAAO,WACrB,OAAOC,OAAOD,KAAKnD,IAEpB4C,EAAeS,QAAUN,EACzBO,EAAOC,QAAUX,EACjBA,EAAeE,GAAK,K,unICtBpB,IAAI9C,EAAM,CACT,wBAAyB,KAI1B,SAAS4C,EAAeC,GACvB,IAAIC,EAAKC,EAAsBF,GAC/B,OAAOG,EAAoBF,GAE5B,SAASC,EAAsBF,GAC9B,IAAIG,EAAoBb,EAAEnC,EAAK6C,GAAM,CACpC,IAAIlB,EAAI,IAAIsB,MAAM,uBAAyBJ,EAAM,KAEjD,MADAlB,EAAEuB,KAAO,mBACHvB,EAEP,OAAO3B,EAAI6C,GAEZD,EAAeO,KAAO,WACrB,OAAOC,OAAOD,KAAKnD,IAEpB4C,EAAeS,QAAUN,EACzBO,EAAOC,QAAUX,EACjBA,EAAeE,GAAK,K,spICtBpB,IAAI9C,EAAM,CACT,uBAAwB,KAIzB,SAAS4C,EAAeC,GACvB,IAAIC,EAAKC,EAAsBF,GAC/B,OAAOG,EAAoBF,GAE5B,SAASC,EAAsBF,GAC9B,IAAIG,EAAoBb,EAAEnC,EAAK6C,GAAM,CACpC,IAAIlB,EAAI,IAAIsB,MAAM,uBAAyBJ,EAAM,KAEjD,MADAlB,EAAEuB,KAAO,mBACHvB,EAEP,OAAO3B,EAAI6C,GAEZD,EAAeO,KAAO,WACrB,OAAOC,OAAOD,KAAKnD,IAEpB4C,EAAeS,QAAUN,EACzBO,EAAOC,QAAUX,EACjBA,EAAeE,GAAK,K,87HCtBpB,IAAI9C,EAAM,CACT,qBAAsB,KAIvB,SAAS4C,EAAeC,GACvB,IAAIC,EAAKC,EAAsBF,GAC/B,OAAOG,EAAoBF,GAE5B,SAASC,EAAsBF,GAC9B,IAAIG,EAAoBb,EAAEnC,EAAK6C,GAAM,CACpC,IAAIlB,EAAI,IAAIsB,MAAM,uBAAyBJ,EAAM,KAEjD,MADAlB,EAAEuB,KAAO,mBACHvB,EAEP,OAAO3B,EAAI6C,GAEZD,EAAeO,KAAO,WACrB,OAAOC,OAAOD,KAAKnD,IAEpB4C,EAAeS,QAAUN,EACzBO,EAAOC,QAAUX,EACjBA,EAAeE,GAAK,K,k7ICtBpB,IAAI9C,EAAM,CACT,yBAA0B,KAI3B,SAAS4C,EAAeC,GACvB,IAAIC,EAAKC,EAAsBF,GAC/B,OAAOG,EAAoBF,GAE5B,SAASC,EAAsBF,GAC9B,IAAIG,EAAoBb,EAAEnC,EAAK6C,GAAM,CACpC,IAAIlB,EAAI,IAAIsB,MAAM,uBAAyBJ,EAAM,KAEjD,MADAlB,EAAEuB,KAAO,mBACHvB,EAEP,OAAO3B,EAAI6C,GAEZD,EAAeO,KAAO,WACrB,OAAOC,OAAOD,KAAKnD,IAEpB4C,EAAeS,QAAUN,EACzBO,EAAOC,QAAUX,EACjBA,EAAeE,GAAK,K,6mJCtBpB,IAAI9C,EAAM,CACT,kBAAmB,KAIpB,SAAS4C,EAAeC,GACvB,IAAIC,EAAKC,EAAsBF,GAC/B,OAAOG,EAAoBF,GAE5B,SAASC,EAAsBF,GAC9B,IAAIG,EAAoBb,EAAEnC,EAAK6C,GAAM,CACpC,IAAIlB,EAAI,IAAIsB,MAAM,uBAAyBJ,EAAM,KAEjD,MADAlB,EAAEuB,KAAO,mBACHvB,EAEP,OAAO3B,EAAI6C,GAEZD,EAAeO,KAAO,WACrB,OAAOC,OAAOD,KAAKnD,IAEpB4C,EAAeS,QAAUN,EACzBO,EAAOC,QAAUX,EACjBA,EAAeE,GAAK,K,m9HCtBpB,IAAI9C,EAAM,CACT,oBAAqB,KAItB,SAAS4C,EAAeC,GACvB,IAAIC,EAAKC,EAAsBF,GAC/B,OAAOG,EAAoBF,GAE5B,SAASC,EAAsBF,GAC9B,IAAIG,EAAoBb,EAAEnC,EAAK6C,GAAM,CACpC,IAAIlB,EAAI,IAAIsB,MAAM,uBAAyBJ,EAAM,KAEjD,MADAlB,EAAEuB,KAAO,mBACHvB,EAEP,OAAO3B,EAAI6C,GAEZD,EAAeO,KAAO,WACrB,OAAOC,OAAOD,KAAKnD,IAEpB4C,EAAeS,QAAUN,EACzBO,EAAOC,QAAUX,EACjBA,EAAeE,GAAK,K,u3ICtBpB,IAAI9C,EAAM,CACT,wBAAyB,KAI1B,SAAS4C,EAAeC,GACvB,IAAIC,EAAKC,EAAsBF,GAC/B,OAAOG,EAAoBF,GAE5B,SAASC,EAAsBF,GAC9B,IAAIG,EAAoBb,EAAEnC,EAAK6C,GAAM,CACpC,IAAIlB,EAAI,IAAIsB,MAAM,uBAAyBJ,EAAM,KAEjD,MADAlB,EAAEuB,KAAO,mBACHvB,EAEP,OAAO3B,EAAI6C,GAEZD,EAAeO,KAAO,WACrB,OAAOC,OAAOD,KAAKnD,IAEpB4C,EAAeS,QAAUN,EACzBO,EAAOC,QAAUX,EACjBA,EAAeE,GAAK,K,8xICVAU,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAAS5D,MACvB,2D,6IC8BS6D,G,wLAnCH,IAAD,OACP,OACE,0BAAMC,UAAU,eACd,4BACEf,GAAG,eACHgB,cAAY,eACZC,KAAK,SACLF,UAAU,wBACVG,WACEjD,KAAKJ,MAAM7B,UAAYiC,KAAKJ,MAAMsD,mBAEpCC,QAASnD,KAAKJ,MAAMwD,cAEpB,kBAAC,IAAD,CAAiBC,KAAMC,MACvB,0BAAMR,UAAU,mBAAhB,UAGF,4BACEf,GAAG,eACHgB,cAAY,eACZC,KAAK,SACLC,WACEjD,KAAKJ,MAAM7B,UAAYiC,KAAKJ,MAAMsD,mBAEpCJ,UAAU,yBACVK,QAAS,kBAAM,EAAKvD,MAAM2D,cAE1B,kBAAC,IAAD,CAAiBF,KAAMG,MACvB,0BAAMV,UAAU,mBAAhB,e,GA7BkBvC,c,iDCgHbkD,G,wLAzGH,IAAD,OACP,OACE,kBAACC,EAAA,EAAD,CAAUC,YAAU,EAACC,GAAIC,IAAS9B,GAAG,mBACnC,kBAAC2B,EAAA,EAASI,OAAV,CAAiBF,GAAIG,IAAShB,cAAY,mBACxC,kBAAC,IAAD,CAAiBM,KAAMW,MACvB,0BAAMlB,UAAU,mBAAhB,aAGF,kBAACY,EAAA,EAASO,KAAV,KACE,kBAACC,EAAA,EAAD,KACE,kBAACA,EAAA,EAAKC,MAAN,CAAYpC,GAAG,kBACb,kBAAC2B,EAAA,EAASU,OAAV,gBACA,kBAACF,EAAA,EAAKG,MAAN,CACErB,KAAK,SACLjB,GAAG,sBACHgB,cAAY,sBACZuB,MAAM,aACNC,QAASvE,KAAKJ,MAAM4E,iBACpBC,SAAU,SAAA7D,GAAC,OAAI,EAAKhB,MAAM8E,qBAE5B,kBAACR,EAAA,EAAKG,MAAN,CACErB,KAAK,SACLjB,GAAG,kBACHgB,cAAY,kBACZuB,MAAM,cACNC,QAASvE,KAAKJ,MAAM+E,cACpBF,SAAU,SAAA7D,GAAC,OAAI,EAAKhB,MAAMgF,wBAE5B,kBAACV,EAAA,EAAKG,MAAN,CACErB,KAAK,SACLjB,GAAG,kBACHgB,cAAY,kBACZuB,MAAM,cACNC,QAASvE,KAAKJ,MAAMiF,cACpBJ,SAAU,SAAA7D,GAAC,OAAI,EAAKhB,MAAMkF,wBAG5B,kBAACpB,EAAA,EAASqB,QAAV,MAEA,kBAACrB,EAAA,EAASU,OAAV,kBACA,yBAAKtB,UAAU,sBACb,kBAACkC,EAAA,EAAD,CACEnG,KAAK,OACLoG,KAAK,KACLC,MAAOlF,KAAKJ,MAAMuF,SAClBV,SAAU,SAAAW,GACR,EAAKxF,MAAMyF,eAAeD,KAG5B,kBAACE,EAAA,EAAD,CACEtC,KAAK,QACLnE,KAAK,QACLqG,MAAM,IACNK,QAAQ,mBAJV,KAQA,kBAACD,EAAA,EAAD,CACEtC,KAAK,QACLnE,KAAK,QACLqG,MAAM,IACNK,QAAQ,mBAJV,KAQA,kBAACD,EAAA,EAAD,CACEtC,KAAK,QACLnE,KAAK,QACLqG,MAAM,IACNK,QAAQ,mBAJV,QAWHC,U,GA7EcjF,c,OCoGdkF,G,mBArGb,WAAY7F,GAAQ,IAAD,8BACjB,4CAAMA,KACDC,MAAQ,CACX6F,QAAQ,EAAK9F,MAAM7B,WAIrB,EAAK4H,aAAe,EAAKA,aAAaC,KAAlB,gBAPH,E,4EAgBjB5F,KAAKC,UAAS,SAAA4F,GAAS,MAAK,CAC1BH,QAASG,EAAUH,a,0CAUF,IAAD,OACZI,EAAgBzD,OAAOD,KAAKnE,GAAY8H,OAC1CC,EAAsB,GACtBC,EAAiB,GA0BrB,OAxBAH,EAAcI,SAAQ,SAAAxF,GACpB,IAAIyF,EACF,kBAACzC,EAAA,EAAS0C,KAAV,CACErD,cAAY,YACZsD,IAAK3F,EACLyC,QAAS,WACP,EAAKvD,MAAM0G,gBAAgB5F,KAG7B,yBACEoC,UAAU,wBACVyD,IAAK7F,EACL8F,IAAG,4BAAuB9F,EAAvB,UAEJzC,EAAWyC,GAAX,UAA6BzC,EAAWyC,GAAX,UAA6BA,GAIpC,cAAvBzC,EAAWyC,GAAG+F,KAChBT,EAAoBU,KAAKP,GACO,SAAvBlI,EAAWyC,GAAG+F,MACvBR,EAAeS,KAAKP,MAGlB,CACJ,kBAACzC,EAAA,EAASU,OAAV,CAAiBiC,IAAI,oBAArB,cADF,OAEKL,EAFL,CAGE,kBAACtC,EAAA,EAASqB,QAAV,CAAkBsB,IAAI,SACtB,kBAAC3C,EAAA,EAASU,OAAV,CAAiBiC,IAAI,eAArB,SACGJ,K,+BAKL,OACE,kBAACvC,EAAA,EAAD,CACEC,YAAU,EACVC,GAAIC,IACJ8C,KAAM3G,KAAKH,MAAM6F,OACjBkB,SAAU5G,KAAK2F,cAEf,kBAACjC,EAAA,EAASI,OAAV,CAAiBF,GAAIG,IAAShB,cAAY,oBACvC/C,KAAKJ,MAAM7B,UACV,yBACEgF,cAAY,wBACZD,UAAU,wBACVyD,IAAKvG,KAAKJ,MAAM7B,UAChByI,IAAG,4BAAuBxG,KAAKJ,MAAM7B,UAAlC,UAGL,kBAAC,IAAD,CAAiBsF,KAAMwD,MAEzB,0BAAM/D,UAAU,mBACb9C,KAAKJ,MAAM7B,UACRE,EAAW+B,KAAKJ,MAAM7B,WAAtB,UACEE,EAAW+B,KAAKJ,MAAM7B,WAAtB,UACAiC,KAAKJ,MAAM7B,UACb,eAIR,kBAAC2F,EAAA,EAASO,KAAV,CAAelC,GAAG,yBACf/B,KAAK8G,0B,GA/FcvG,c,kHCyBjBwG,G,OAAb,YACE,WAAYnH,GAAQ,IAAD,8BACjB,4CAAMA,KACDC,MAAQ,CACXmH,OAAO,GAGT,EAAKC,OAAS,EAAKA,OAAOrB,KAAZ,gBANG,EADrB,sEAWI5F,KAAKC,UAAS,SAAA4F,GAAS,MAAK,CAC1BmB,OAAQnB,EAAUmB,YAZxB,+BAiBI,OACE,kBAACE,EAAA,EAAD,CAAOC,UAAQ,EAACR,KAAM3G,KAAKH,MAAMmH,MAAOI,OAAQpH,KAAKiH,QACnD,kBAACC,EAAA,EAAM9C,OAAP,CAAciD,aAAW,GACvB,8BACE,kBAAC,IAAD,CACEhE,KAAMiE,IACNxE,UAAU,gBAJhB,wBASA,kBAACoE,EAAA,EAAMK,KAAP,KACE,6IAIA,uBAAGxE,cAAY,sBACb,sCADF,IACkB/C,KAAKJ,MAAM4H,UAG/B,kBAACN,EAAA,EAAMO,OAAP,KACE,kBAACC,EAAA,EAAD,CAAQ5J,MAAM,UAAUqF,QAASnD,KAAKiH,QAAtC,eAtCV,GAAuC1G,cAqD1BoH,EAAb,YACE,WAAY/H,GAAQ,IAAD,8BACjB,4CAAMA,KACDC,MAAQ,CACXmH,OAAO,GAGT,EAAKC,OAAS,EAAKA,OAAOrB,KAAZ,gBANG,EADrB,sEAWI5F,KAAKC,UAAS,SAAA4F,GAAS,MAAK,CAC1BmB,OAAQnB,EAAUmB,YAZxB,+BAiBI,OACE,kBAACE,EAAA,EAAD,CAAOC,UAAQ,EAACR,KAAM3G,KAAKH,MAAMmH,MAAOI,OAAQpH,KAAKiH,QACnD,kBAACC,EAAA,EAAM9C,OAAP,CAAciD,aAAW,GACvB,8BACE,kBAAC,IAAD,CAAiBhE,KAAMuE,IAAc9E,UAAU,gBAEhDtE,KAGH,kBAAC0I,EAAA,EAAMK,KAAP,KACE,6BACE,yBACExF,GAAG,iBACHyE,IAAI,cACJD,IAAI,qBAJR,kEAQA,6BACA,6BACE,0BAAMzD,UAAU,eAAhB,gBAAkD,IAClD,uBACE+E,KAAMC,IAAWC,SACjBC,OAAO,SACPC,IAAI,uBAEHC,MAGL,6BACE,0BAAMpF,UAAU,eAAhB,iBADF,IACsDqF,KAEtD,6BACE,0BAAMrF,UAAU,eAAhB,YAA8C,IAC9C,uBAAG+E,KAAMO,IAAOC,IAAKL,OAAO,SAASC,IAAI,uBACtCG,IAAOvJ,OAGZ,6BACE,0BAAMiE,UAAU,eAAhB,SAA2C,IAC3C,uBAAG+E,KAAMC,IAAWO,IAAKL,OAAO,SAASC,IAAI,uBAA7C,WAIF,6BACE,0BAAMnF,UAAU,eAAhB,iBAAmD,IACnD,uBAAG+E,KAAMS,IAAKC,OAAQP,OAAO,SAASC,IAAI,uBAA1C,WAIF,6BACE,0BAAMnF,UAAU,eAAhB,wBAA0D,IAC1D,uBACE+E,KAAK,uCACLG,OAAO,SACPC,IAAI,uBAEJ,yBACElG,GAAG,SACHyE,IAAI,0DACJD,IAAI,uBAMZ,kBAACW,EAAA,EAAMO,OAAP,KACE,kBAACC,EAAA,EAAD,CAAQ5J,MAAM,UAAUqF,QAASnD,KAAKiH,QAAtC,eApFV,GAAgC1G,aAmGnBiI,EAAb,YACE,WAAY5I,GAAQ,IAAD,8BACjB,4CAAMA,KACDC,MAAQ,CACXmH,OAAO,GAGT,EAAKC,OAAS,EAAKA,OAAOrB,KAAZ,gBANG,EADrB,sEAWI5F,KAAKC,UAAS,SAAA4F,GAAS,MAAK,CAC1BmB,OAAQnB,EAAUmB,YAZxB,gCAiBI,IAAMyB,EAAQlK,SAASmK,eAAe,OACtCD,EAAME,UAAW,EACjBF,EAAMG,SACNrK,SAASsK,YAAY,QACrBtK,SAASmK,eAAe,cAAcI,UAAY,SAClDC,IAAQC,MAAM,CACZC,SAAU,QACVC,OAAQ,eAxBd,+BA6BI,OACE,kBAAChC,EAAA,EAAD,CAAOC,UAAQ,EAACR,KAAM3G,KAAKH,MAAMmH,MAAOI,OAAQpH,KAAKiH,QACnD,kBAACC,EAAA,EAAM9C,OAAP,CAAciD,aAAW,GACvB,8BACE,kBAAC,IAAD,CAAiBhE,KAAMG,IAAYV,UAAU,gBAFjD,sBAOA,kBAACoE,EAAA,EAAMK,KAAP,KACE,yBAAKzE,UAAU,qBAAf,6CAIA,yBAAKA,UAAU,oBACb,yBAAKA,UAAU,uBACb,0BAAMA,UAAU,oBACd,kBAAC,IAAD,CAAiBO,KAAM8F,QAG3B,2BACEpH,GAAG,MACHiB,KAAK,OACLF,UAAU,eACVsG,aAAc1G,OAAOC,SAASkF,OAEhC,yBAAK/E,UAAU,sBACb,4BACEf,GAAG,aACHe,UAAU,kBACVE,KAAK,SACLG,QAASnD,KAAKqJ,SAEd,kBAAC,IAAD,CAAiBhG,KAAMiG,SAK7B,6BAEA,yBAAKxG,UAAU,qBAAf,0BAEA,yBAAKf,GAAG,sBACN,kBAACwH,EAAA,EAAD,CAAkBlB,IAAK3F,OAAOC,SAASkF,MACrC,kBAAC2B,EAAA,EAAD,CAAWvE,KAAM,GAAIwE,OAAK,KAE5B,kBAACC,EAAA,EAAD,CAAmBrB,IAAK3F,OAAOC,SAASkF,MACtC,kBAAC8B,EAAA,EAAD,CAAY1E,KAAM,GAAIwE,OAAK,KAE7B,kBAACG,EAAA,EAAD,CAAoBvB,IAAK3F,OAAOC,SAASkF,MACvC,kBAACgC,EAAA,EAAD,CAAa5E,KAAM,GAAIwE,OAAK,KAE9B,kBAACK,EAAA,EAAD,CAAqBzB,IAAK3F,OAAOC,SAASkF,MACxC,kBAACkC,EAAA,EAAD,CAAc9E,KAAM,GAAIwE,OAAK,KAE/B,kBAACO,EAAA,EAAD,CAAmB3B,IAAK3F,OAAOC,SAASkF,MACtC,kBAACoC,EAAA,EAAD,CAAYhF,KAAM,GAAIwE,OAAK,OAKjC,kBAACvC,EAAA,EAAMO,OAAP,KACE,kBAACC,EAAA,EAAD,CAAQ5J,MAAM,UAAUqF,QAASnD,KAAKiH,QAAtC,eA3FV,GAAgC1G,aClDjB2J,G,mBAzHb,WAAYtK,GAAQ,IAAD,8BACjB,4CAAMA,KACDC,MAAQ,CACXsK,SAAS,GAIX,EAAKC,UAAY,EAAKA,UAAUxE,KAAf,gBACjB,EAAKD,aAAe,EAAKA,aAAaC,KAAlB,gBACpB,EAAKrC,UAAY,EAAKA,UAAUqC,KAAf,gBATA,E,yEAkBjB5F,KAAKC,UAAS,SAAA4F,GAAS,MAAK,CAC1BsE,SAAUtE,EAAUsE,c,qCAUtBnK,KAAKqK,mBAAmB1E,iB,kCASxB3F,KAAKsK,cAAcrD,SACnB8B,IAAQC,MAAM,CACZC,SAAU,MACVC,OAAQ,uB,kCAUVlJ,KAAKuK,cAActD,SACnB8B,IAAQC,MAAM,CACZC,SAAU,MACVC,OAAQ,uB,+BAIF,IAAD,OACP,OACE,kBAAC,IAAMsB,SAAP,KACE,kBAAC,EAAD,CAAYC,IAAK,SAAAC,GAAS,OAAK,EAAKJ,cAAgBI,KACpD,kBAAC,EAAD,CAAYD,IAAK,SAAAC,GAAS,OAAK,EAAKH,cAAgBG,KAEpD,kBAACC,EAAA,EAAD,CAAQC,GAAG,QAAQrF,QAAQ,SACzB,kBAACoF,EAAA,EAAOE,MAAR,CAAchD,KAAK,KACjB,yBACE9F,GAAG,eACHyE,IAAI,cACJD,IAAI,sBAIR,kBAAC,IAAD,CAAYuE,eAAgB,KAC1B,kBAACH,EAAA,EAAOE,MAAR,CAAchD,KAAK,KAAKrJ,MAG1B,kBAACmM,EAAA,EAAOE,MAAR,CACE9I,GAAG,WACHe,UAAU,UACV5C,MAAO,CAAE6K,OAAQ,WACjB5H,QAAS,kBAAM,EAAK6H,WAAU,KAE9B,kBAAC,IAAD,CAAiB3H,KAAMuE,OAGzB,kBAACqD,EAAA,EAAD,CAAKnI,UAAU,WACb,kBAAC,EAAD,CACEI,gBAAiBlD,KAAKJ,MAAMsD,gBAC5BE,aAAcpD,KAAKJ,MAAMwD,aACzBG,UAAWvD,KAAKuD,UAChBxF,UAAWiC,KAAKJ,MAAM7B,YAGxB,kBAAC,EAAD,CACE2G,gBAAiB1E,KAAKJ,MAAM8E,gBAC5BI,mBAAoB9E,KAAKJ,MAAMkF,mBAC/BF,mBAAoB5E,KAAKJ,MAAMgF,mBAC/BS,eAAgBrF,KAAKJ,MAAMyF,eAC3B6F,cAAelL,KAAKJ,MAAMsL,cAC1BC,eAAgBnL,KAAKJ,MAAMuL,eAC3B3G,iBAAkBxE,KAAKJ,MAAM4E,iBAC7BG,cAAe3E,KAAKJ,MAAM+E,cAC1BE,cAAe7E,KAAKJ,MAAMiF,cAC1BuG,eAAgBpL,KAAKJ,MAAMwL,eAC3BC,gBAAiBrL,KAAKJ,MAAMyL,gBAC5BlG,SAAUnF,KAAKJ,MAAMuF,WAGvB,kBAAC,EAAD,CACEsF,IAAK,SAAAC,GAAS,OAAK,EAAKL,mBAAqBK,GAC7CpE,gBAAiBtG,KAAKJ,MAAM0G,gBAC5BvI,UAAWiC,KAAKJ,MAAM7B,mB,GAjHfwC,c,QC2BN+K,G,wLAlCX,OACE,yBAAKvJ,GAAG,gBAAgBe,UAAU,YAChC,yBACE0D,IAAG,4BAAuBxG,KAAKJ,MAAM7B,UAAlC,QACHwI,IAAKvG,KAAKJ,MAAM7B,YAGlB,4BAAKiC,KAAKJ,MAAM7B,UAAYiC,KAAKJ,MAAM7B,UAAY,WACnD,4BACGiC,KAAKJ,MAAM7B,WAAaE,EAAW+B,KAAKJ,MAAM7B,WAAWS,OAE3DwB,KAAKJ,MAAM7B,WACV,yBAAKgE,GAAG,mCACN,uBAAGe,UAAU,gCACVjF,YAAY,MAAOmC,KAAKJ,MAAM7B,YAEjC,uBAAG+E,UAAU,mCACVjF,YAAY,SAAUmC,KAAKJ,MAAM7B,YAEpC,uBAAG+E,UAAU,iCACVjF,YAAY,OAAQmC,KAAKJ,MAAM7B,aAKtC,yBAAKgE,GAAG,yBACN,gDAAsB/B,KAAKJ,MAAM2L,uBACjC,4CAAkBvL,KAAKJ,MAAMsD,yB,GA7BZ3C,cC+CZiL,I,yLAtCHC,GAAO,IAAD,OACR1N,EAAYiC,KAAKJ,MAAM7B,UACzB2N,EAAY,EAkBhB,MAhBA,CAAC,MAAO,SAAU,QAAQxF,SAAQ,SAAApI,GAChC,IAAM6N,EAAQ,EAAK/L,MAAM9B,GAErB6N,EAAMC,MAAK,SAAAC,GAAM,OAAe,IAAXA,MACvBF,EAAMzF,SAAQ,SAAChB,EAAO4G,GACpB,IAAMC,EAAa,EAAKnM,MAAMoM,SAAS/N,EAAWF,GAAWD,IAC3DgO,EAAM,GAGJ5G,EAAQ,GAAK6G,EAAWE,QAAUR,IACpCC,GAAaK,EAAWF,OAAO3G,EAAQ,UAMxCwG,I,+BAIP,OACE,yBAAK3J,GAAG,cAAce,UAAU,YAC9B,qCACA,yBAAKf,GAAG,qBACN,sCAAY/B,KAAKkM,UAAU,UAA3B,KACA,uCAAalM,KAAKkM,UAAU,WAA5B,KACA,sCAAYlM,KAAKkM,UAAU,UAA3B,KACA,2CAAiBlM,KAAKkM,UAAU,eAAhC,W,GAvCe3L,c,SC8FV4L,I,mBA5Fb,WAAYvM,GAAQ,IAAD,8BACjB,4CAAMA,KACDC,MAAQ,CACXuM,qBAAqB,GAIvB,EAAKC,mBAAqB,EAAKA,mBAAmBzG,KAAxB,gBAPT,E,kFAgBjB5F,KAAKC,UAAS,SAAA4F,GAAS,MAAK,CAC1BuG,qBAAsBvG,EAAUuG,wBAGlCrD,IAAQC,MAAM,CACZC,SAAU,MACVC,OAAQ,2B,yCAYQ,IAAD,OACXnL,EAAYiC,KAAKJ,MAAM7B,UACzBuO,EAAU,GAsCd,MApCA,CAAC,MAAO,SAAU,QAAQpG,SAAQ,SAAApI,GAChC,IAAM6N,EAAQ,EAAK/L,MAAM9B,GAErB6N,EAAMC,MAAK,SAAAC,GAAM,OAAe,IAAXA,MACvBF,EAAMzF,SAAQ,SAAChB,EAAO4G,GACpB,IAAMC,EAAa,EAAKnM,MAAMoM,SAAS/N,EAAWF,GAAWD,IAC3DgO,EAAM,GAGJ5G,EAAQ,IAAM6G,EAAWE,OAC3BK,EAAQ5F,KACN,yBAAKL,IAAK0F,EAAWlN,KAAMiE,UAAS,sBAClC,yBAAKA,UAAU,uBACb,0BAAMA,UAAS,kCAA6BhF,KAD9C,UAGMiO,EAAWlN,KAHjB,aAG0BqG,EAH1B,YAGmC/H,YAC/B4O,EAAWF,QAJf,MAQA,kBAACU,GAAA,EAAD,CAAUC,GAAI,EAAK3M,MAAMuM,qBACvB,yBAAKtJ,UAAU,sBACZzF,YACC0O,EAAWzO,KACXyO,EAAWF,OACX3G,EAAQ,aAWnBoH,I,+BAIP,OACE,yBAAKvK,GAAG,gBAAgBe,UAAU,WAAWK,QAASnD,KAAKqM,oBACzD,2CACe,IACb,0BAAMvJ,UAAU,wBACb9C,KAAKH,MAAMuM,oBAAsB,aAAe,aAGrD,yBAAKrJ,cAAY,iBAAiB/C,KAAKyM,yB,GAvFflM,c,SC0DjBmM,I,wLArDX,OACE,yBACE3K,GAAG,aACHgB,cAAY,aACZD,UACE9C,KAAKJ,MAAM4E,iBAAmB,kBAAoB,qBAGpD,kBAACtC,GAAA,EAAD,KACE,yBAAKH,GAAG,2BACN,kBAAC,EAAD,CACEhE,UAAWiC,KAAKJ,MAAM7B,UACtBwN,oBAAqBvL,KAAKJ,MAAM2L,oBAChCrI,gBAAiBlD,KAAKJ,MAAMsD,kBAE9B,kBAAC,IAAD,CAAYyJ,YAAY,YACtB,kBAAC,GAAD,CACE5O,UAAWiC,KAAKJ,MAAM7B,UACtBiO,SAAUhM,KAAKJ,MAAMoM,SACrBY,IAAK5M,KAAKJ,MAAMgN,IAChBC,OAAQ7M,KAAKJ,MAAMiN,OACnBC,KAAM9M,KAAKJ,MAAMkN,UAMzB,kBAAC,IAAD,CAAYH,YAAY,aACtB,kBAACzK,GAAA,EAAD,KACE,kBAAC,GAAD,CACEnE,UAAWiC,KAAKJ,MAAM7B,UACtBiO,SAAUhM,KAAKJ,MAAMoM,SACrBY,IAAK5M,KAAKJ,MAAMgN,IAChBC,OAAQ7M,KAAKJ,MAAMiN,OACnBC,KAAM9M,KAAKJ,MAAMkN,QAIrB,kBAAC5K,GAAA,EAAD,KACE,kBAAC,GAAD,CACEnE,UAAWiC,KAAKJ,MAAM7B,UACtBiO,SAAUhM,KAAKJ,MAAMoM,SACrBY,IAAK5M,KAAKJ,MAAMgN,IAChBC,OAAQ7M,KAAKJ,MAAMiN,OACnBC,KAAM9M,KAAKJ,MAAMkN,c,GA9CPvM,cCUTwM,ICVXf,GDUWe,GA1Bf,SAAsB7E,GAuBpB,MAtBiB,CACf8E,OAAQC,OAAQ,aAAM/E,EAAP,iBACfgF,OAAQD,OAAQ,aAAM/E,EAAP,iBACfiF,QAASF,OAAQ,aAAM/E,EAAP,kBAChBkF,WAAYH,OAAQ,aAAM/E,EAAP,qBACnBmF,QAASJ,OAAQ,aAAM/E,EAAP,kBAChBoF,SAAUL,OAAQ,aAAM/E,EAAP,mBACjBqF,UAAWN,OAAQ,aAAM/E,EAAP,oBAClBsF,SAAUP,OAAQ,aAAM/E,EAAP,mBACjBuF,YAAaR,OAAQ,aAAM/E,EAAP,sBACpBwF,WAAYT,OAAQ,aAAM/E,EAAP,qBACnByF,SAAUV,OAAQ,aAAM/E,EAAP,mBACjB0F,aAAcX,OAAQ,aAAM/E,EAAP,uBACrB2F,MAAOZ,OAAQ,aAAM/E,EAAP,gBACd4F,QAASb,OAAQ,aAAM/E,EAAP,kBAChB6F,YAAad,OAAQ,aAAM/E,EAAP,wB,SCDlB8F,I,cAAYC,IAAMC,MAAK,kBAAM,wDAqiBpBC,G,YAxhBb,WAAYvO,GAAQ,IAAD,uBACjB,4CAAMA,KACDwO,kBAAmB,EACxB,EAAKC,oBAAsB,GAG3B,EAAK3J,gBAAkB,EAAKA,gBAAgBkB,KAArB,gBACvB,EAAKd,mBAAqB,EAAKA,mBAAmBc,KAAxB,gBAC1B,EAAKhB,mBAAqB,EAAKA,mBAAmBgB,KAAxB,gBAC1B,EAAKP,eAAiB,EAAKA,eAAeO,KAApB,gBACtB,EAAKsF,cAAgB,EAAKA,cAActF,KAAnB,gBACrB,EAAKuF,eAAiB,EAAKA,eAAevF,KAApB,gBACtB,EAAKD,aAAe,EAAKA,aAAaC,KAAlB,gBACpB,EAAKU,gBAAkB,EAAKA,gBAAgBV,KAArB,gBACvB,EAAKxC,aAAe,EAAKA,aAAawC,KAAlB,gBACpB,EAAK0I,kBAAoB,EAAKA,kBAAkB1I,KAAvB,gBACzB,EAAK1C,gBAAkB,EAAKA,gBAAgB0C,KAArB,gBACvB,EAAK2F,oBAAsB,EAAKA,oBAAoB3F,KAAzB,gBAG3B,IAAM2I,EAAY,EAAK3O,MAAMyI,IAAImG,MAAM,GAAGhP,MAAM,KAEhD,OAAQ+O,EAAUrR,QAChB,KAAK,EACH,EAAK2C,MAAQ,EAAK4O,gBAClB,EAAKC,UAAU,SACf,MACF,KAAK,EAEH,EAAK7O,MAAQ,EAAK4O,gBAFpB,kBAGmDF,EAHnD,GAGOI,EAHP,KAGuBC,EAHvB,KAG8BhC,EAH9B,KAGmCC,EAHnC,KAG2CC,EAH3C,KAIE6B,EAAiBE,SAASF,GAE1B,IAAMG,EAAgBzM,OAAOD,KAAKnE,GAAY8Q,MAC5C,SAAA1I,GAAG,OAAIpI,EAAWoI,GAAX,KAA0BuI,KAInC,GAAID,EAAiBxG,IACnB,EAAKkG,oBAAsB,8BAC3B,EAAKD,kBAAmB,OACnB,GAAKU,EAGL,CACL9C,GAAWe,GAAa4B,GACxB,EAAK9O,MAAL,eACK,EAAKA,MADV,CAEEsI,YAAawG,EACb5Q,UAAW+Q,GACR,EAAKE,kBAAkBF,IAS5B,IANA,IATK,aAeA,IAAIhR,EAAK,KAERwO,EAAUhN,YAAOxB,EAAM,IACxB0B,MAAM,IACNP,IAAIgQ,QACDC,EAAW,EAAKC,oBACpB,EAAKtP,MAAM9B,UACXD,EAAM,IAGR,OAAIwO,EAAQpP,SAAW,EAAK2C,MAAM/B,EAAM,IAAIZ,QAE1C,EAAKmR,oBAAL,uCAA2DvQ,EAAM,GAAjE,UACA,EAAKsQ,kBAAmB,EACxB,SAGA9B,EAAQV,MAAK,SAASwD,EAAItD,GACxB,OAAOsD,EAAKF,EAASpD,OAGvB,EAAKuC,oBAAL,8CAAkEvQ,EAAM,GAAxE,UACA,EAAKsQ,kBAAmB,EACxB,cAEA,EAAKvO,MAAM/B,EAAM,IAAMwO,IAzB3B,MANmB,CACjB,CAACM,EAAK,OACN,CAACC,EAAQ,UACT,CAACC,EAAM,SAGT,eAA8B,kBAuB1B,MAOA,EAAKvB,sBAAwB,IAC/B,EAAK8C,oBAAL,gDACA,EAAKD,kBAAmB,QAjD1B,EAAKC,oBAAsB,uBAC3B,EAAKD,kBAAmB,EAoDtB,EAAKA,kBACP,EAAKvO,MAAQ,EAAK4O,gBAClB,EAAKC,UAAU,UAEf,EAAKA,UAAU,UAEjB,MACF,QAEE,EAAKL,oBAAL,wDAA4EE,EAAUrR,OAAtF,kBACA,EAAKkR,kBAAmB,EACxB,EAAKvO,MAAQ,EAAK4O,gBAClB,EAAKC,UAAU,SA3GF,S,6EAuHjB1C,GAAWe,GAAa5E,KAExB,IAAM3D,EAAmB6K,KAAKC,MAC5BC,aAAaC,QAAQ,qBAEjB7K,EAAgB0K,KAAKC,MAAMC,aAAaC,QAAQ,kBAChD3K,EAAgBwK,KAAKC,MAAMC,aAAaC,QAAQ,kBAChDpE,EAAiBiE,KAAKC,MAAMC,aAAaC,QAAQ,mBACjDnE,EAAkBgE,KAAKC,MAAMC,aAAaC,QAAQ,oBAExD,MAAO,CACLrH,YAAaA,IACbpK,UAAW,GACX6O,IAAK,GACLC,OAAQ,GACRC,KAAM,GACN3H,SAAUoK,aAAaC,QAAQ,aAAe,IAC9ChL,iBAAuC,OAArBA,GAAmCA,EACrDG,cAAiC,OAAlBA,GAAgCA,EAC/CE,cAAiC,OAAlBA,GAAgCA,EAC/CuG,eAAmC,OAAnBA,GAAkCA,EAClDC,gBAAqC,OAApBA,GAAmCA,K,sCASvC,IAAD,OACdrL,KAAKC,SAASD,KAAKyO,iBAAiB,WAClC,EAAKC,UAAU,c,gCAWTe,GACR,IAAIC,EAEJ,OAAQD,GACN,IAAK,SACHC,EACE,IACA,CACE1P,KAAKH,MAAMsI,YACXlK,EAAW+B,KAAKH,MAAM9B,WAAWgE,GACjChD,YAAOiB,KAAKH,MAAM+M,IAAIvN,KAAK,KAC3BN,YAAOiB,KAAKH,MAAMgN,OAAOxN,KAAK,KAC9BN,YAAOiB,KAAKH,MAAMiN,KAAKzN,KAAK,MAC5BA,KAAK,KAETnB,YACE8B,KAAKH,MAAM9B,UACXiC,KAAKH,MAAM+M,IACX5M,KAAKH,MAAMgN,OACX7M,KAAKH,MAAMiN,MAEb,MACF,IAAK,QACH4C,EAAc,IAKlBhN,OAAOiN,QAAQC,aAAa,GAAI,GAAIF,K,sCAUtB3R,GAAY,IAAD,OACrBiC,KAAKH,MAAMsI,cAAgBA,MAC7B6D,GAAWe,GAAa5E,MAG1B,IAAM0H,EAAc7P,KAAKgP,kBAAkBjR,GAC3CiC,KAAKC,SAAL,aACIkI,YAAaA,IAAapK,UAAWA,GAAc8R,IACrD,WACE,EAAKnB,UAAU,UACf,EAAKoB,aAAaC,YAElBhH,IAAQC,MAAM,CACZC,SAAU,aACVC,OAAQ,mBACR5E,MAAOvG,OAKbiC,KAAK8P,aAAaE,iB,wCAWFjS,GAChB,IAAMkS,EAAS5N,OAAOD,KAAK4J,GAAS/N,EAAWF,GAAX,MAA+Bb,OAC7DgT,EAAY7N,OAAOD,KAAK4J,GAAS/N,EAAWF,GAAX,SACpCb,OACGiT,EAAU9N,OAAOD,KAAK4J,GAAS/N,EAAWF,GAAX,OAAgCb,OAQrE,MANoB,CAClB0P,IAAK5P,MAAMiT,GAAQG,KAAK,GACxBvD,OAAQ7P,MAAMkT,GAAWE,KAAK,GAC9BtD,KAAM9P,MAAMmT,GAASC,KAAK,M,qCAY5BrH,IAAQC,MAAM,CACZC,SAAU,MACVC,OAAQ,gBAEVlJ,KAAKsG,gBAAgBtG,KAAKH,MAAM9B,a,wCAYhBD,EAAOgO,EAAKuE,GAAM,IAAD,OAC7BC,EAAStQ,KAAKH,MAAM/B,GACZ,aAARuS,EACFC,EAAOxE,EAAM,IAAM,EACF,aAARuE,IACTC,EAAOxE,EAAM,IAAM,GAErB9L,KAAKC,SAAL,eAAiBnC,EAAQwS,IAAU,kBAAM,EAAK5B,UAAU,e,0CAWtC3Q,EAAWD,GAC7B,IAAIoR,EAAW,GAQf,OANA7M,OAAOD,KAAK4J,GAAS/N,EAAWF,GAAWD,KAASoI,SAAQ,SAAAnE,GAC1DmN,EAASxI,KACPvJ,YAAkB6O,GAAS/N,EAAWF,GAAWD,IAAQiE,GAAvC,YAIfmN,I,wCAYyB,IAC5BqB,EADUzS,EAAiB,uDAAT,QAStB,OALEyS,EADY,UAAVzS,EACI,sBAAOkC,KAAKH,MAAM+M,KAAlB,YAA0B5M,KAAKH,MAAMgN,QAArC,YAAgD7M,KAAKH,MAAMiN,OAE3D,YAAO9M,KAAKH,MAAM/B,IAGnBrB,YAAS8T,K,4CAUhB,OAAO/P,KAAYR,KAAKkD,oB,wCAQP,IAAD,OAChBlD,KAAKC,UACH,SAAA4F,GAAS,MAAK,CACZrB,kBAAmBqB,EAAUrB,qBAE/B,WACE,EAAKsL,aAAaU,UAClBjB,aAAakB,QAAQ,mBAAoB,EAAK5Q,MAAM2E,qBAIxDuE,IAAQC,MAAM,CACZC,SAAU,WACVC,OAAQ,wB,2CASU,IAAD,OACnBlJ,KAAKC,UACH,SAAA4F,GAAS,MAAK,CACZhB,eAAgBgB,EAAUhB,kBAE5B,WACE0K,aAAakB,QAAQ,gBAAiB,EAAK5Q,MAAMgF,kBAIrDkE,IAAQC,MAAM,CACZC,SAAU,WACVC,OAAQ,yB,2CASU,IAAD,OACnBlJ,KAAKC,UACH,SAAA4F,GAAS,MAAK,CACZlB,eAAgBkB,EAAUlB,kBAE5B,WACE4K,aAAakB,QAAQ,gBAAiB,EAAK5Q,MAAM8E,kBAIrDoE,IAAQC,MAAM,CACZC,SAAU,WACVC,OAAQ,yB,qCAUGjE,GAAO,IAAD,OACnBjF,KAAKC,SAAS,CAAEkF,SAAUF,IAAQ,WAChC,EAAK6K,aAAaU,UAClBjB,aAAakB,QAAQ,WAAY,EAAK5Q,MAAMsF,aAG9C4D,IAAQC,MAAM,CACZC,SAAU,WACVC,OAAQ,mBACR5E,MAAOW,M,sCASM,IAAD,OACdjF,KAAKC,UACH,SAAA4F,GAAS,MAAK,CACZuF,gBAAiBvF,EAAUuF,mBAE7B,WACE,EAAK0E,aAAaY,uBAClBnB,aAAakB,QAAQ,iBAAkB,EAAK5Q,MAAMuL,qB,uCAUtC,IAAD,OACfpL,KAAKC,UACH,SAAA4F,GAAS,MAAK,CACZwF,iBAAkBxF,EAAUwF,oBAE9B,WACEkE,aAAakB,QAAQ,kBAAmB,EAAK5Q,MAAMwL,sB,qCAWvDrL,KAAK2Q,UAAUhL,iB,+BAGP,IAAD,OACP,OACE,yBAAK5D,GAAG,OACL/B,KAAKoO,kBACJ,kBAAC,EAAD,CAAmB5G,QAASxH,KAAKqO,sBAGnC,kBAACnM,GAAA,EAAD,KACE,kBAAC,EAAD,CACEuI,IAAK,SAAAC,GAAS,OAAK,EAAKiG,UAAYjG,GACpChG,gBAAiB1E,KAAK0E,gBACtBI,mBAAoB9E,KAAK8E,mBACzBF,mBAAoB5E,KAAK4E,mBACzBS,eAAgBrF,KAAKqF,eACrB6F,cAAelL,KAAKkL,cACpBC,eAAgBnL,KAAKmL,eACrB7E,gBAAiBtG,KAAKsG,gBACtBpD,gBAAiBlD,KAAKkD,gBACtBE,aAAcpD,KAAKoD,aACnBrF,UAAWiC,KAAKH,MAAM9B,UACtBoH,SAAUnF,KAAKH,MAAMsF,SACrBX,iBAAkBxE,KAAKH,MAAM2E,iBAC7BG,cAAe3E,KAAKH,MAAM8E,cAC1BE,cAAe7E,KAAKH,MAAMgF,cAC1BuG,eAAgBpL,KAAKH,MAAMuL,eAC3BC,gBAAiBrL,KAAKH,MAAMwL,mBAIhC,yBAAKtJ,GAAG,kBACN,kBAAC,WAAD,CACE6O,SACE,yBAAK7O,GAAG,WACN,kBAAC8O,EAAA,EAAD,CAAS5L,KAAK,KAAK6L,UAAU,SAASvL,QAAQ,WAC9C,6BACA,0BAAMzC,UAAU,WAAhB,gBAIJ,kBAACZ,GAAA,EAAD,KACE,kBAAC,GAAD,CACEuI,IAAK,SAAAC,GAAS,OAAK,EAAKqG,aAAerG,GACvCxH,gBAAiBlD,KAAKkD,gBACtBqI,oBAAqBvL,KAAKuL,oBAC1BS,SAAUA,GACVjO,UAAWiC,KAAKH,MAAM9B,UACtB6O,IAAK5M,KAAKH,MAAM+M,IAChBC,OAAQ7M,KAAKH,MAAMgN,OACnBC,KAAM9M,KAAKH,MAAMiN,KACjBtI,iBAAkBxE,KAAKH,MAAM2E,oBAIjC,kBAACtC,GAAA,EAAD,KACE,kBAAC8L,GAAD,CACEvD,IAAK,SAAAC,GAAS,OAAK,EAAKoF,aAAepF,GACvC/E,aAAc3F,KAAK2F,aACnBW,gBAAiBtG,KAAKsG,gBACtBlD,aAAcpD,KAAKoD,aACnBkL,kBAAmBtO,KAAKsO,kBACxBpL,gBAAiBlD,KAAKkD,gBACtBqI,oBAAqBvL,KAAKuL,oBAC1BS,SAAUA,GACV7D,YAAanI,KAAKH,MAAMsI,YACxBpK,UAAWiC,KAAKH,MAAM9B,UACtB6O,IAAK5M,KAAKH,MAAM+M,IAChBC,OAAQ7M,KAAKH,MAAMgN,OACnBC,KAAM9M,KAAKH,MAAMiN,KACjB3H,SAAUnF,KAAKH,MAAMsF,SACrBR,cAAe3E,KAAKH,MAAM8E,cAC1BE,cAAe7E,KAAKH,MAAMgF,cAC1BuG,eAAgBpL,KAAKH,MAAMuL,eAC3BC,gBAAiBrL,KAAKH,MAAMwL,0B,GA/gB1B9K,aCtBlBwI,IAAQiI,WAAW,kBACnBjI,IAAQkI,SAAS,KAEjB,IAAM5I,GAAM3F,OAAOC,SAASuO,OAC5BC,IAASC,OAAO,kBAAC,GAAD,CAAK/I,IAAKA,KAAS9J,SAASmK,eAAe,SZuHrD,kBAAmB2I,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.2a06de63.chunk.js","sourcesContent":["import { valuesToLetters, lettersToValues } from './values';\r\nimport Commanders from './data/commanders.json';\r\nimport { title } from '../package.json';\r\n\r\n/**\r\n * Sum all values of an array\r\n *\r\n * @export\r\n * @param {Number[]} arr Array to calculate sum of\r\n * @returns {Number} Sum of the array\r\n */\r\nexport function sumArray(arr) {\r\n  return arr.reduce((partial, a) => partial + a, 0);\r\n}\r\n\r\n/**\r\n * Check if two arrays are equal\r\n *\r\n * @export\r\n * @param {array} a First array\r\n * @param {array} b Second array\r\n * @returns {boolean} Are the two arrays equal?\r\n */\r\nexport function arraysEqual(a, b) {\r\n  if (a === b) return true;\r\n  if (a == null || b == null) return false;\r\n  // eslint-disable-next-line\r\n  if (a.length != b.length) return false;\r\n\r\n  for (var i = 0; i < a.length; ++i) {\r\n    if (a[i] !== b[i]) return false;\r\n  }\r\n  return true;\r\n}\r\n\r\n/**\r\n * Check if array is nested/multidimensional\r\n *\r\n * @param {Array} arr array to check for nesting\r\n * @returns {Boolean} Boolean indicating whether array is multidimensional\r\n */\r\nexport function isMultidimensional(arr) {\r\n  return arr.filter(Array.isArray).length !== 0;\r\n}\r\n\r\n/**\r\n * Get maximum number of spendable points for a talent\r\n *\r\n * @param {Array} talentValues array of values for a given talent\r\n * @returns {Number} Number of maximum spendable points\r\n */\r\nexport function getMaxTalentCount(talentValues) {\r\n  let max;\r\n  if (!isMultidimensional(talentValues)) {\r\n    max = talentValues.length;\r\n  } else {\r\n    // All multidimensional arrays should be same length (checked by unit test)\r\n    max = talentValues[0].length;\r\n  }\r\n  return max;\r\n}\r\n\r\n/**\r\n * Replace talent text placeholders (e.g. `${1}`) with selected values\r\n *\r\n * @param {string} text Full talent text\r\n * @param {Array} talentValues Array (or multidimensional array) of values for the talent\r\n * @param {Number} replacementIdx Index of the value to use as replacement\r\n * @returns {string} Talent text with placeholders replaced\r\n */\r\nexport function replaceTalentText(text, talentValues, replacementIdx) {\r\n  let newText = text;\r\n\r\n  if (isMultidimensional(talentValues)) {\r\n    for (let i = 0; i < talentValues.length; i++) {\r\n      let re = new RegExp(`\\\\$\\\\{${i + 1}\\\\}`, 'g');\r\n      newText = newText.replace(re, talentValues[i][replacementIdx]);\r\n    }\r\n  } else {\r\n    newText = newText.replace(/\\$\\{1\\}/g, talentValues[replacementIdx]);\r\n  }\r\n\r\n  return newText;\r\n}\r\n\r\n/**\r\n * Get the full name of a talent tree (e.g. Skill, Garrison). The name\r\n * depends on the tree color and the selected commander\r\n *\r\n * @param {string} color Color of the tree to retrieve the name for\r\n * @param {string} commander Name of the commander\r\n * @returns {string} full tree name\r\n */\r\nexport function getTreeName(color, commander) {\r\n  const commanderData = Commanders[commander];\r\n  if (commanderData) {\r\n    return commanderData[color];\r\n  }\r\n}\r\n\r\n/**\r\n * Set the window title with commander name and talents spent in each tree\r\n *\r\n * @param {string} commander Full name of the commander\r\n * @param {Number[]} r Array of red tree values\r\n * @param {Number[]} y Array of yellow tree values\r\n * @param {Number[]} b Array of blue tree values\r\n * @param {string} [sep='/'] Separator to use between point totals\r\n */\r\nexport function setTitle(commander, r, y, b, sep = '/') {\r\n  document.title = `${createSummaryString(commander, r, y, b, sep)} | ${title}`;\r\n}\r\n\r\n/**\r\n * Create a string with commander name and talents spent in each tree\r\n *\r\n * @param {string} commander Full name of the commander\r\n * @param {Number[]} r Array of red tree values\r\n * @param {Number[]} y Array of yellow tree values\r\n * @param {Number[]} b Array of blue tree values\r\n * @param {string} [sep='/'] Separator to use between point totals\r\n * @returns {string} String summarizing the commander and points spent\r\n */\r\nexport function createSummaryString(commander, r, y, b, sep = '/') {\r\n  const rSpent = sumArray(r);\r\n  const ySpent = sumArray(y);\r\n  const bSpent = sumArray(b);\r\n  const name = Commanders[commander].shortName || commander;\r\n  return `${name} (${rSpent}${sep}${ySpent}${sep}${bSpent})`;\r\n}\r\n\r\n/**\r\n * Encode/compress the passed text\r\n *\r\n * @param {string} text Text to be encoded/compressed\r\n * @returns {string} Encoded/compressed version of the text\r\n */\r\nexport function encode(text) {\r\n  const encoded = text\r\n    .match(/(..?)/g)\r\n    .map(v => {\r\n      return valuesToLetters.hasOwnProperty(v) ? valuesToLetters[v] : v;\r\n    })\r\n    .join('');\r\n\r\n  return encoded;\r\n}\r\n\r\n/**\r\n * Decode encoded text\r\n *\r\n * @param {string} encoded Encoded form of the text\r\n * @returns {string} Decoded string\r\n */\r\nexport function decode(encoded) {\r\n  const decoded = encoded\r\n    .split('')\r\n    .map(k => {\r\n      return lettersToValues.hasOwnProperty(k) ? lettersToValues[k] : k;\r\n    })\r\n    .join('');\r\n\r\n  return decoded;\r\n}\r\n\r\nexport default {\r\n  sumArray,\r\n  arraysEqual,\r\n  isMultidimensional,\r\n  getMaxTalentCount,\r\n  replaceTalentText,\r\n  setTitle,\r\n  createSummaryString,\r\n  encode,\r\n  decode\r\n};\r\n","import React, { Component } from 'react';\r\n\r\nclass ErrorBoundary extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { error: null, errorInfo: null };\r\n  }\r\n\r\n  componentDidCatch(error, errorInfo) {\r\n    // Catch errors in any components below and re-render with error\r\n    this.setState({\r\n      error: error,\r\n      errorInfo: errorInfo\r\n    });\r\n  }\r\n\r\n  render() {\r\n    if (this.state.errorInfo) {\r\n      // Error path\r\n      return (\r\n        <div>\r\n          <h3>Something broke!</h3>\r\n          <details style={{ whiteSpace: 'pre-wrap' }}>\r\n            {this.state.error && this.state.error.toString()}\r\n            <br />\r\n            {this.state.errorInfo.componentStack}\r\n          </details>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    return this.props.children;\r\n  }\r\n}\r\n\r\nexport default ErrorBoundary;\r\n","/** Maximum number of talent points available in the game */\r\nexport const maxPoints = 74;\r\n\r\n// Max width of mobile/tablet devices (px)\r\nexport const mobileBreakpoint = 1366;\r\n\r\n/** Mapping value pairs to letters for encoding */\r\nexport const valuesToLetters = {\r\n  '00': 'a',\r\n  '01': 'b',\r\n  '02': 'c',\r\n  '03': 'd',\r\n  '04': 'e',\r\n  '10': 'f',\r\n  '11': 'g',\r\n  '12': 'h',\r\n  '13': 'i',\r\n  '14': 'j',\r\n  '20': 'k',\r\n  '21': 'l',\r\n  '22': 'm',\r\n  '23': 'n',\r\n  '24': 'o',\r\n  '30': 'p',\r\n  '31': 'q',\r\n  '32': 'r',\r\n  '33': 's',\r\n  '34': 't',\r\n  '35': 'u',\r\n  '40': 'v',\r\n  '41': 'w',\r\n  '42': 'x',\r\n  '43': 'y',\r\n  '44': 'z'\r\n};\r\n\r\n/** Mapping letters to value pairs for decoding */\r\nexport const lettersToValues = {\r\n  a: '00',\r\n  b: '01',\r\n  c: '02',\r\n  d: '03',\r\n  e: '04',\r\n  f: '10',\r\n  g: '11',\r\n  h: '12',\r\n  i: '13',\r\n  j: '14',\r\n  k: '20',\r\n  l: '21',\r\n  m: '22',\r\n  n: '23',\r\n  o: '24',\r\n  p: '30',\r\n  q: '31',\r\n  r: '32',\r\n  s: '33',\r\n  t: '34',\r\n  u: '35',\r\n  v: '40',\r\n  w: '41',\r\n  x: '42',\r\n  y: '43',\r\n  z: '44'\r\n};\r\n","var map = {\n\t\"./v1/Attack.json\": 198\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 197;","var map = {\n\t\"./v1/Archer.json\": 200\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 199;","var map = {\n\t\"./v1/Cavalry.json\": 202\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 201;","var map = {\n\t\"./v1/Conquering.json\": 204\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 203;","var map = {\n\t\"./v1/Defense.json\": 206\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 205;","var map = {\n\t\"./v1/Garrison.json\": 208\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 207;","var map = {\n\t\"./v1/Gathering.json\": 210\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 209;","var map = {\n\t\"./v1/Infantry.json\": 212\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 211;","var map = {\n\t\"./v1/Integration.json\": 214\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 213;","var map = {\n\t\"./v1/Leadership.json\": 216\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 215;","var map = {\n\t\"./v1/Mobility.json\": 218\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 217;","var map = {\n\t\"./v1/Peacekeeping.json\": 220\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 219;","var map = {\n\t\"./v1/Skill.json\": 222\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 221;","var map = {\n\t\"./v1/Support.json\": 224\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 223;","var map = {\n\t\"./v1/Versatility.json\": 226\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 225;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React, { Component } from 'react';\r\nimport { faTrashAlt, faShareAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nimport './styles/NavBarButtons.css';\r\n\r\n/**\r\n * Nav bar component containing main buttons\r\n *\r\n * @class NavBarButtons\r\n * @extends {Component}\r\n */\r\nclass NavBarButtons extends Component {\r\n  render() {\r\n    return (\r\n      <form className=\"form-inline\">\r\n        <button\r\n          id=\"button-reset\"\r\n          data-testid=\"button-reset\"\r\n          type=\"button\"\r\n          className=\"btn btn-sm btn-danger\"\r\n          disabled={\r\n            this.props.commander | this.props.calcPointsSpent() ? false : true\r\n          }\r\n          onClick={this.props.resetTalents}\r\n        >\r\n          <FontAwesomeIcon icon={faTrashAlt} />\r\n          <span className=\"nav-button-text\">Reset</span>\r\n        </button>\r\n\r\n        <button\r\n          id=\"button-share\"\r\n          data-testid=\"button-share\"\r\n          type=\"button\"\r\n          disabled={\r\n            this.props.commander | this.props.calcPointsSpent() ? false : true\r\n          }\r\n          className=\"btn btn-sm btn-success\"\r\n          onClick={() => this.props.showShare()}\r\n        >\r\n          <FontAwesomeIcon icon={faShareAlt} />\r\n          <span className=\"nav-button-text\">Share</span>\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NavBarButtons;\r\n","import React, { Component } from 'react';\r\nimport Dropdown from 'react-bootstrap/Dropdown';\r\nimport NavItem from 'react-bootstrap/NavItem';\r\nimport NavLink from 'react-bootstrap/NavLink';\r\nimport Form from 'react-bootstrap/Form';\r\nimport ToggleButton from 'react-bootstrap/ToggleButton';\r\nimport ToggleButtonGroup from 'react-bootstrap/ToggleButtonGroup';\r\nimport { faCog } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nimport './styles/NavBarSettings.css';\r\n\r\n/**\r\n * Nav bar component containing drop down menu item for settings\r\n *\r\n * @class NavBarSettings\r\n * @extends {Component}\r\n */\r\nclass NavBarSettings extends Component {\r\n  render() {\r\n    return (\r\n      <Dropdown alignRight as={NavItem} id=\"select-settings\">\r\n        <Dropdown.Toggle as={NavLink} data-testid=\"select-settings\">\r\n          <FontAwesomeIcon icon={faCog} />\r\n          <span className=\"nav-button-text\">Settings</span>\r\n        </Dropdown.Toggle>\r\n\r\n        <Dropdown.Menu>\r\n          <Form>\r\n            <Form.Group id=\"settings-group\">\r\n              <Dropdown.Header>Display</Dropdown.Header>\r\n              <Form.Check\r\n                type=\"switch\"\r\n                id=\"settings-side-panel\"\r\n                data-testid=\"settings-side-panel\"\r\n                label=\"Side panel\"\r\n                checked={this.props.isShownSidePanel}\r\n                onChange={e => this.props.toggleSidePanel()}\r\n              />\r\n              <Form.Check\r\n                type=\"switch\"\r\n                id=\"settings-values\"\r\n                data-testid=\"settings-values\"\r\n                label=\"Node values\"\r\n                checked={this.props.isShownValues}\r\n                onChange={e => this.props.toggleValueDisplay()}\r\n              />\r\n              <Form.Check\r\n                type=\"switch\"\r\n                id=\"settings-totals\"\r\n                data-testid=\"settings-totals\"\r\n                label=\"Total spent\"\r\n                checked={this.props.isShownTotals}\r\n                onChange={e => this.props.toggleTotalDisplay()}\r\n              />\r\n\r\n              <Dropdown.Divider />\r\n\r\n              <Dropdown.Header>Node Size</Dropdown.Header>\r\n              <div className=\"d-flex flex-column\">\r\n                <ToggleButtonGroup\r\n                  name=\"size\"\r\n                  size=\"sm\"\r\n                  value={this.props.nodeSize}\r\n                  onChange={val => {\r\n                    this.props.toggleNodeSize(val);\r\n                  }}\r\n                >\r\n                  <ToggleButton\r\n                    type=\"radio\"\r\n                    name=\"radio\"\r\n                    value=\"S\"\r\n                    variant=\"outline-primary\"\r\n                  >\r\n                    S\r\n                  </ToggleButton>\r\n                  <ToggleButton\r\n                    type=\"radio\"\r\n                    name=\"radio\"\r\n                    value=\"M\"\r\n                    variant=\"outline-primary\"\r\n                  >\r\n                    M\r\n                  </ToggleButton>\r\n                  <ToggleButton\r\n                    type=\"radio\"\r\n                    name=\"radio\"\r\n                    value=\"L\"\r\n                    variant=\"outline-primary\"\r\n                  >\r\n                    L\r\n                  </ToggleButton>\r\n                </ToggleButtonGroup>\r\n              </div>\r\n\r\n              {process.env.NODE_ENV === 'development' && (\r\n                <React.Fragment>\r\n                  <Dropdown.Divider />\r\n                  <Dropdown.Header>Dev Mode</Dropdown.Header>\r\n                  <Form.Check\r\n                    type=\"switch\"\r\n                    id=\"settings-mouse\"\r\n                    data-testid=\"settings-mouse\"\r\n                    label=\"Show mouse XY\"\r\n                    checked={this.props.isShownMouseXY}\r\n                    onChange={e => this.props.toggleMouseXY()}\r\n                  />\r\n                  <Form.Check\r\n                    type=\"switch\"\r\n                    id=\"settings-talentID\"\r\n                    label=\"Show talent ID\"\r\n                    checked={this.props.isShownTalentID}\r\n                    onChange={e => this.props.toggleTalentID()}\r\n                  />\r\n                </React.Fragment>\r\n              )}\r\n            </Form.Group>\r\n          </Form>\r\n        </Dropdown.Menu>\r\n      </Dropdown>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NavBarSettings;\r\n","import React, { Component } from 'react';\r\nimport Dropdown from 'react-bootstrap/Dropdown';\r\nimport NavItem from 'react-bootstrap/NavItem';\r\nimport NavLink from 'react-bootstrap/NavLink';\r\nimport { faUser } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nimport Commanders from './data/commanders.json';\r\nimport './styles/NavBarCommander.css';\r\n\r\n/**\r\n * Nav bar component containing commander drop down\r\n *\r\n * @class NavBarCommander\r\n * @extends {Component}\r\n */\r\nclass NavBarCommander extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isOpen: this.props.commander ? false : true\r\n    };\r\n\r\n    // Context bindings\r\n    this.toggleSelect = this.toggleSelect.bind(this);\r\n  }\r\n\r\n  /**\r\n   * Toggle open state of the commander select dropdown\r\n   *\r\n   * @memberof NavBarCommander\r\n   */\r\n  toggleSelect() {\r\n    this.setState(prevState => ({\r\n      isOpen: !prevState.isOpen\r\n    }));\r\n  }\r\n\r\n  /**\r\n   * Create a list of all available commanders (sorted)\r\n   *\r\n   * @returns {Dropdown.Item[]} Array of Dropdown items for all commanders\r\n   * @memberof NavBarCommander\r\n   */\r\n  createSelectItems() {\r\n    const commanderList = Object.keys(Commanders).sort();\r\n    let legendaryCommanders = [];\r\n    let epicCommanders = [];\r\n\r\n    commanderList.forEach(c => {\r\n      let selectItem = (\r\n        <Dropdown.Item\r\n          data-testid=\"menu-item\"\r\n          key={c}\r\n          onClick={() => {\r\n            this.props.changeCommander(c);\r\n          }}\r\n        >\r\n          <img\r\n            className=\"select-commander-icon\"\r\n            alt={c}\r\n            src={`images/commanders/${c}.png`}\r\n          ></img>\r\n          {Commanders[c]['shortName'] ? Commanders[c]['shortName'] : c}\r\n        </Dropdown.Item>\r\n      );\r\n\r\n      if (Commanders[c].tier === 'Legendary') {\r\n        legendaryCommanders.push(selectItem);\r\n      } else if (Commanders[c].tier === 'Epic') {\r\n        epicCommanders.push(selectItem);\r\n      }\r\n    });\r\n    return [\r\n      <Dropdown.Header key=\"header-legendary\">Legendary</Dropdown.Header>,\r\n      ...legendaryCommanders,\r\n      <Dropdown.Divider key=\"div1\" />,\r\n      <Dropdown.Header key=\"header-epic\">Epic</Dropdown.Header>,\r\n      ...epicCommanders\r\n    ];\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Dropdown\r\n        alignRight\r\n        as={NavItem}\r\n        show={this.state.isOpen}\r\n        onToggle={this.toggleSelect}\r\n      >\r\n        <Dropdown.Toggle as={NavLink} data-testid=\"select-commander\">\r\n          {this.props.commander ? (\r\n            <img\r\n              data-testid=\"select-commander-icon\"\r\n              className=\"select-commander-icon\"\r\n              alt={this.props.commander}\r\n              src={`images/commanders/${this.props.commander}.png`}\r\n            ></img>\r\n          ) : (\r\n            <FontAwesomeIcon icon={faUser} />\r\n          )}\r\n          <span className=\"nav-button-text\">\r\n            {this.props.commander\r\n              ? Commanders[this.props.commander]['shortName']\r\n                ? Commanders[this.props.commander]['shortName']\r\n                : this.props.commander\r\n              : ' Commander'}\r\n          </span>\r\n        </Dropdown.Toggle>\r\n\r\n        <Dropdown.Menu id=\"select-commander-menu\">\r\n          {this.createSelectItems()}\r\n        </Dropdown.Menu>\r\n      </Dropdown>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NavBarCommander;\r\n","import React, { Component } from 'react';\r\nimport ReactGA from 'react-ga';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport {\r\n  faExclamationTriangle,\r\n  faInfoCircle,\r\n  faShareAlt,\r\n  faLink,\r\n  faCopy\r\n} from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport {\r\n  TwitterShareButton,\r\n  WhatsappShareButton,\r\n  RedditShareButton,\r\n  PocketShareButton,\r\n  EmailShareButton,\r\n  TwitterIcon,\r\n  WhatsappIcon,\r\n  RedditIcon,\r\n  PocketIcon,\r\n  EmailIcon\r\n} from 'react-share';\r\n\r\nimport {\r\n  title,\r\n  author,\r\n  repository,\r\n  bugs,\r\n  version,\r\n  dataVersion\r\n} from '../package.json';\r\nimport './styles/Modals.css';\r\n\r\n/**\r\n * Modal displaying warning about an invalid build retrived from URL\r\n *\r\n * @class InvalidBuildModal\r\n * @extends {Component}\r\n */\r\nexport class InvalidBuildModal extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      modal: true\r\n    };\r\n\r\n    this.toggle = this.toggle.bind(this);\r\n  }\r\n\r\n  toggle() {\r\n    this.setState(prevState => ({\r\n      modal: !prevState.modal\r\n    }));\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Modal centered show={this.state.modal} onHide={this.toggle}>\r\n        <Modal.Header closeButton>\r\n          <span>\r\n            <FontAwesomeIcon\r\n              icon={faExclamationTriangle}\r\n              className=\"modal-icon\"\r\n            />\r\n          </span>\r\n          Invalid Talent Build\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <p>\r\n            The talent build you're trying to view is invalid. Please make sure\r\n            you've copied and pasted the correct link.\r\n          </p>\r\n          <p data-testid=\"invalid-modal-body\">\r\n            <b>Reason:</b> {this.props.message}\r\n          </p>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button color=\"primary\" onClick={this.toggle}>\r\n            Close\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    );\r\n  }\r\n}\r\n\r\n/**\r\n * Modal displaying information about the application\r\n *\r\n * @class AboutModal\r\n * @extends {Component}\r\n */\r\nexport class AboutModal extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      modal: false\r\n    };\r\n\r\n    this.toggle = this.toggle.bind(this);\r\n  }\r\n\r\n  toggle() {\r\n    this.setState(prevState => ({\r\n      modal: !prevState.modal\r\n    }));\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Modal centered show={this.state.modal} onHide={this.toggle}>\r\n        <Modal.Header closeButton>\r\n          <span>\r\n            <FontAwesomeIcon icon={faInfoCircle} className=\"modal-icon\" />\r\n          </span>\r\n          {title}\r\n        </Modal.Header>\r\n\r\n        <Modal.Body>\r\n          <div>\r\n            <img\r\n              id=\"modal-app-icon\"\r\n              src=\"logo192.jpg\"\r\n              alt=\"RoK Talents Logo\"\r\n            ></img>\r\n            Talent builder for Rise of Kingdoms. Best viewed on PC/laptop.\r\n          </div>\r\n          <br />\r\n          <div>\r\n            <span className=\"about-label\">App version:</span>{' '}\r\n            <a\r\n              href={repository.releases}\r\n              target=\"_blank\"\r\n              rel=\"noopener noreferrer\"\r\n            >\r\n              {version}\r\n            </a>\r\n          </div>\r\n          <div>\r\n            <span className=\"about-label\">Data version:</span> {dataVersion}\r\n          </div>\r\n          <div>\r\n            <span className=\"about-label\">Creator:</span>{' '}\r\n            <a href={author.url} target=\"_blank\" rel=\"noopener noreferrer\">\r\n              {author.name}\r\n            </a>\r\n          </div>\r\n          <div>\r\n            <span className=\"about-label\">Code:</span>{' '}\r\n            <a href={repository.url} target=\"_blank\" rel=\"noopener noreferrer\">\r\n              GitHub\r\n            </a>\r\n          </div>\r\n          <div>\r\n            <span className=\"about-label\">Report a bug:</span>{' '}\r\n            <a href={bugs.report} target=\"_blank\" rel=\"noopener noreferrer\">\r\n              Report\r\n            </a>\r\n          </div>\r\n          <div>\r\n            <span className=\"about-label\">Support development:</span>{' '}\r\n            <a\r\n              href=\"https://www.buymeacoffee.com/simonho\"\r\n              target=\"_blank\"\r\n              rel=\"noopener noreferrer\"\r\n            >\r\n              <img\r\n                id=\"coffee\"\r\n                src=\"https://cdn.buymeacoffee.com/buttons/default-orange.png\"\r\n                alt=\"Buy Me A Coffee\"\r\n              ></img>\r\n            </a>\r\n          </div>\r\n        </Modal.Body>\r\n\r\n        <Modal.Footer>\r\n          <Button color=\"success\" onClick={this.toggle}>\r\n            Close\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    );\r\n  }\r\n}\r\n\r\n/**\r\n * Modal displaying sharing options for talent build\r\n *\r\n * @class ShareModal\r\n * @extends {Component}\r\n */\r\nexport class ShareModal extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      modal: false\r\n    };\r\n\r\n    this.toggle = this.toggle.bind(this);\r\n  }\r\n\r\n  toggle() {\r\n    this.setState(prevState => ({\r\n      modal: !prevState.modal\r\n    }));\r\n  }\r\n\r\n  copyURL() {\r\n    const input = document.getElementById('url');\r\n    input.readOnly = true;\r\n    input.select();\r\n    document.execCommand('copy');\r\n    document.getElementById('copyButton').innerHTML = '\\u2713';\r\n    ReactGA.event({\r\n      category: 'Share',\r\n      action: 'Copy URL'\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Modal centered show={this.state.modal} onHide={this.toggle}>\r\n        <Modal.Header closeButton>\r\n          <span>\r\n            <FontAwesomeIcon icon={faShareAlt} className=\"modal-icon\" />\r\n          </span>\r\n          Share Talent Build\r\n        </Modal.Header>\r\n\r\n        <Modal.Body>\r\n          <div className=\"share-modal-label\">\r\n            Copy talent build link to your clipboard:\r\n          </div>\r\n\r\n          <div className=\"input-group mb-3\">\r\n            <div className=\"input-group-prepend\">\r\n              <span className=\"input-group-text\">\r\n                <FontAwesomeIcon icon={faLink} />\r\n              </span>\r\n            </div>\r\n            <input\r\n              id=\"url\"\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              defaultValue={window.location.href}\r\n            ></input>\r\n            <div className=\"input-group-append\">\r\n              <button\r\n                id=\"copyButton\"\r\n                className=\"btn btn-success\"\r\n                type=\"button\"\r\n                onClick={this.copyURL}\r\n              >\r\n                <FontAwesomeIcon icon={faCopy} />\r\n              </button>\r\n            </div>\r\n          </div>\r\n\r\n          <hr />\r\n\r\n          <div className=\"share-modal-label\">Share to social media:</div>\r\n\r\n          <div id=\"share-modal-social\">\r\n            <EmailShareButton url={window.location.href}>\r\n              <EmailIcon size={32} round />\r\n            </EmailShareButton>\r\n            <RedditShareButton url={window.location.href}>\r\n              <RedditIcon size={32} round />\r\n            </RedditShareButton>\r\n            <TwitterShareButton url={window.location.href}>\r\n              <TwitterIcon size={32} round />\r\n            </TwitterShareButton>\r\n            <WhatsappShareButton url={window.location.href}>\r\n              <WhatsappIcon size={32} round />\r\n            </WhatsappShareButton>\r\n            <PocketShareButton url={window.location.href}>\r\n              <PocketIcon size={32} round />\r\n            </PocketShareButton>\r\n          </div>\r\n        </Modal.Body>\r\n\r\n        <Modal.Footer>\r\n          <Button color=\"primary\" onClick={this.toggle}>\r\n            Close\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    );\r\n  }\r\n}\r\n\r\nexport default { InvalidBuildModal, AboutModal, ShareModal };\r\n","import React, { Component } from 'react';\r\nimport ReactGA from 'react-ga';\r\nimport MediaQuery from 'react-responsive';\r\nimport Navbar from 'react-bootstrap/Navbar';\r\nimport Nav from 'react-bootstrap/Nav';\r\nimport NavBarButtons from './NavBarButtons';\r\nimport NavBarSettings from './NavBarSettings';\r\nimport NavBarCommander from './NavBarCommander';\r\nimport { AboutModal, ShareModal } from './Modals';\r\nimport { faInfoCircle } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nimport { title } from '../package.json';\r\nimport './styles/NavBar.css';\r\n\r\n/**\r\n * Nav bar component containing main application buttons/controls\r\n *\r\n * @class NavBar\r\n * @extends {Component}\r\n */\r\nclass NavBar extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      navOpen: false\r\n    };\r\n\r\n    // Context bindings\r\n    this.toggleNav = this.toggleNav.bind(this);\r\n    this.toggleSelect = this.toggleSelect.bind(this);\r\n    this.showShare = this.showShare.bind(this);\r\n  }\r\n\r\n  /**\r\n   * Toggle visibility of the nav bar collapse/expand menu icon\r\n   *\r\n   * @memberof NavBar\r\n   */\r\n  toggleNav() {\r\n    this.setState(prevState => ({\r\n      navOpen: !prevState.navOpen\r\n    }));\r\n  }\r\n\r\n  /**\r\n   * Toggle open state of the commander select dropdown\r\n   *\r\n   * @memberof NavBar\r\n   */\r\n  toggleSelect() {\r\n    this.navBarCommanderRef.toggleSelect();\r\n  }\r\n\r\n  /**\r\n   * Control visibility of the \"About\" modal\r\n   *\r\n   * @memberof NavBar\r\n   */\r\n  showAbout() {\r\n    this.aboutModalRef.toggle();\r\n    ReactGA.event({\r\n      category: 'App',\r\n      action: 'View about modal'\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Control visibility of the \"Share\" modal\r\n   *\r\n   * @memberof NavBar\r\n   */\r\n  showShare() {\r\n    this.shareModalRef.toggle();\r\n    ReactGA.event({\r\n      category: 'App',\r\n      action: 'View share modal'\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <AboutModal ref={component => (this.aboutModalRef = component)} />\r\n        <ShareModal ref={component => (this.shareModalRef = component)} />\r\n\r\n        <Navbar bg=\"light\" variant=\"light\">\r\n          <Navbar.Brand href=\"/\">\r\n            <img\r\n              id=\"nav-app-icon\"\r\n              src=\"logo192.jpg\"\r\n              alt=\"RoK Talents Logo\"\r\n            ></img>\r\n          </Navbar.Brand>\r\n\r\n          <MediaQuery minDeviceWidth={380}>\r\n            <Navbar.Brand href=\"/\">{title}</Navbar.Brand>\r\n          </MediaQuery>\r\n\r\n          <Navbar.Brand\r\n            id=\"nav-icon\"\r\n            className=\"mr-auto\"\r\n            style={{ cursor: 'pointer' }}\r\n            onClick={() => this.showAbout(true)}\r\n          >\r\n            <FontAwesomeIcon icon={faInfoCircle} />\r\n          </Navbar.Brand>\r\n\r\n          <Nav className=\"ml-auto\">\r\n            <NavBarButtons\r\n              calcPointsSpent={this.props.calcPointsSpent}\r\n              resetTalents={this.props.resetTalents}\r\n              showShare={this.showShare}\r\n              commander={this.props.commander}\r\n            />\r\n\r\n            <NavBarSettings\r\n              toggleSidePanel={this.props.toggleSidePanel}\r\n              toggleTotalDisplay={this.props.toggleTotalDisplay}\r\n              toggleValueDisplay={this.props.toggleValueDisplay}\r\n              toggleNodeSize={this.props.toggleNodeSize}\r\n              toggleMouseXY={this.props.toggleMouseXY}\r\n              toggleTalentID={this.props.toggleTalentID}\r\n              isShownSidePanel={this.props.isShownSidePanel}\r\n              isShownValues={this.props.isShownValues}\r\n              isShownTotals={this.props.isShownTotals}\r\n              isShownMouseXY={this.props.isShownMouseXY}\r\n              isShownTalentID={this.props.isShownTalentID}\r\n              nodeSize={this.props.nodeSize}\r\n            />\r\n\r\n            <NavBarCommander\r\n              ref={component => (this.navBarCommanderRef = component)}\r\n              changeCommander={this.props.changeCommander}\r\n              commander={this.props.commander}\r\n            />\r\n          </Nav>\r\n        </Navbar>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NavBar;\r\n","import React, { Component } from 'react';\r\nimport { getTreeName } from './utils';\r\n\r\nimport Commanders from './data/commanders.json';\r\nimport './styles/SummaryPanel.css';\r\n\r\n/**\r\n * Summary panel component displaying commander info\r\n *\r\n * @class SummaryPanel\r\n * @extends {Component}\r\n */\r\nclass SummaryPanel extends Component {\r\n  render() {\r\n    return (\r\n      <div id=\"summary-panel\" className=\"info-box\">\r\n        <img\r\n          src={`images/commanders/${this.props.commander}.png`}\r\n          alt={this.props.commander}\r\n        ></img>\r\n\r\n        <h1>{this.props.commander ? this.props.commander : 'Summary'}</h1>\r\n        <h3>\r\n          {this.props.commander && Commanders[this.props.commander].title}\r\n        </h3>\r\n        {this.props.commander && (\r\n          <div id=\"summary-panel-talents-container\">\r\n            <p className=\"summary-panel-talents bg-red\">\r\n              {getTreeName('red', this.props.commander)}\r\n            </p>\r\n            <p className=\"summary-panel-talents bg-yellow\">\r\n              {getTreeName('yellow', this.props.commander)}\r\n            </p>\r\n            <p className=\"summary-panel-talents bg-blue\">\r\n              {getTreeName('blue', this.props.commander)}\r\n            </p>\r\n          </div>\r\n        )}\r\n\r\n        <div id=\"summary-panel-summary\">\r\n          <p>Points remaining: {this.props.calcPointsRemaining()}</p>\r\n          <p>Points spent: {this.props.calcPointsSpent()}</p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SummaryPanel;\r\n","import React, { Component } from 'react';\r\n\r\nimport Commanders from './data/commanders.json';\r\nimport './styles/StatsPanel.css';\r\n\r\n//FIXME: calcStats is inefficient. Iterate once over everything (instead of once for each stat)\r\n\r\n/**\r\n * Stats panel component displaying stats about the current talent build\r\n *\r\n * @class StatsPanel\r\n * @extends {Component}\r\n */\r\nclass StatsPanel extends Component {\r\n  /**\r\n   * Calculate the total value of a given stat (e.g. attack, health)\r\n   *\r\n   * @param {string} stat Name of the stat to be calculated (e.g. Defense)\r\n   * @returns {number} Calculated value of the stat\r\n   * @memberof StatsPanel\r\n   */\r\n  calcStats(stat) {\r\n    const commander = this.props.commander;\r\n    let statValue = 0;\r\n\r\n    ['red', 'yellow', 'blue'].forEach(color => {\r\n      const nodes = this.props[color];\r\n\r\n      if (nodes.some(values => values !== 0)) {\r\n        nodes.forEach((value, idx) => {\r\n          const talentInfo = this.props.treeData[Commanders[commander][color]][\r\n            idx + 1\r\n          ];\r\n\r\n          if (value > 0 && talentInfo.stats === stat) {\r\n            statValue += talentInfo.values[value - 1];\r\n          }\r\n        });\r\n      }\r\n    });\r\n\r\n    return statValue;\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div id=\"stats-panel\" className=\"info-box\">\r\n        <h2>Stats</h2>\r\n        <div id=\"stats-panel-stats\">\r\n          <p>Attack: {this.calcStats('Attack')}%</p>\r\n          <p>Defense: {this.calcStats('Defense')}%</p>\r\n          <p>Health: {this.calcStats('Health')}%</p>\r\n          <p>March Speed: {this.calcStats('March Speed')}%</p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default StatsPanel;\r\n","import React, { Component } from 'react';\r\nimport ReactGA from 'react-ga';\r\nimport Collapse from 'react-bootstrap/Collapse';\r\nimport { getMaxTalentCount, replaceTalentText } from './utils';\r\n\r\nimport Commanders from './data/commanders.json';\r\nimport './styles/StatsTalentsPanel.css';\r\n\r\n/**\r\n * Stats talents panel component containing selected main talents\r\n *\r\n * @class StatsTalentsPanel\r\n * @extends {Component}\r\n */\r\nclass StatsTalentsPanel extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isShownStatsTalents: false\r\n    };\r\n\r\n    // Context bindings\r\n    this.toggleStatsTalents = this.toggleStatsTalents.bind(this);\r\n  }\r\n\r\n  /**\r\n   * Toggles visibility of the main talents descriptions\r\n   *\r\n   * @memberof StatsTalentsPanel\r\n   */\r\n  toggleStatsTalents() {\r\n    this.setState(prevState => ({\r\n      isShownStatsTalents: !prevState.isShownStatsTalents\r\n    }));\r\n\r\n    ReactGA.event({\r\n      category: 'App',\r\n      action: 'Toggle stats talents'\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Calculate an array of the bonus stats that don't belong in any of\r\n   * the base state categories\r\n   *\r\n   * @param {string} stat Name of the stat to be calculated (e.g. Defense)\r\n   * @returns {String[]} Array of all selected main talents\r\n   * @memberof StatsTalentsPanel\r\n   */\r\n  calcStatsTalents() {\r\n    const commander = this.props.commander;\r\n    let talents = [];\r\n\r\n    ['red', 'yellow', 'blue'].forEach(color => {\r\n      const nodes = this.props[color];\r\n\r\n      if (nodes.some(values => values !== 0)) {\r\n        nodes.forEach((value, idx) => {\r\n          const talentInfo = this.props.treeData[Commanders[commander][color]][\r\n            idx + 1\r\n          ];\r\n\r\n          if (value > 0 && !talentInfo.stats) {\r\n            talents.push(\r\n              <div key={talentInfo.name} className={`stats-talents-main`}>\r\n                <div className=\"stats-talents-title\">\r\n                  <span className={`stats-talents-bullet bg-${color}`}></span>\r\n\r\n                  {`${talentInfo.name} (${value}/${getMaxTalentCount(\r\n                    talentInfo.values\r\n                  )})`}\r\n                </div>\r\n\r\n                <Collapse in={this.state.isShownStatsTalents}>\r\n                  <div className=\"stats-talents-text\">\r\n                    {replaceTalentText(\r\n                      talentInfo.text,\r\n                      talentInfo.values,\r\n                      value - 1\r\n                    )}\r\n                  </div>\r\n                </Collapse>\r\n              </div>\r\n            );\r\n          }\r\n        });\r\n      }\r\n    });\r\n\r\n    return talents;\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div id=\"stats-talents\" className=\"info-box\" onClick={this.toggleStatsTalents}>\r\n        <h2>\r\n          Main Talents{' '}\r\n          <span className=\"stats-talents-expand\">\r\n            {this.state.isShownStatsTalents ? '(collapse)' : '(expand)'}\r\n          </span>\r\n        </h2>\r\n        <div data-testid=\"stats-talents\">{this.calcStatsTalents()}</div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default StatsTalentsPanel;\r\n","import React, { Component } from 'react';\r\nimport MediaQuery from 'react-responsive';\r\nimport SummaryPanel from './SummaryPanel';\r\nimport StatsPanel from './StatsPanel';\r\nimport StatsTalentsPanel from './StatsTalentsPanel';\r\nimport ErrorBoundary from './Error';\r\n\r\nimport './styles/SidePanel.css';\r\n\r\n//TODO: dynamic/responsive typography\r\n\r\n/**\r\n * Side panel component displaying stats about the current talent build\r\n *\r\n * @class SidePanel\r\n * @extends {Component}\r\n */\r\nclass SidePanel extends Component {\r\n  render() {\r\n    return (\r\n      <div\r\n        id=\"side-panel\"\r\n        data-testid=\"side-panel\"\r\n        className={\r\n          this.props.isShownSidePanel ? 'side-panel-open' : 'side-panel-closed'\r\n        }\r\n      >\r\n        <ErrorBoundary>\r\n          <div id=\"summary-panel-container\">\r\n            <SummaryPanel\r\n              commander={this.props.commander}\r\n              calcPointsRemaining={this.props.calcPointsRemaining}\r\n              calcPointsSpent={this.props.calcPointsSpent}\r\n            />\r\n            <MediaQuery orientation=\"portrait\">\r\n              <StatsPanel\r\n                commander={this.props.commander}\r\n                treeData={this.props.treeData}\r\n                red={this.props.red}\r\n                yellow={this.props.yellow}\r\n                blue={this.props.blue}\r\n              />\r\n            </MediaQuery>\r\n          </div>\r\n        </ErrorBoundary>\r\n\r\n        <MediaQuery orientation=\"landscape\">\r\n          <ErrorBoundary>\r\n            <StatsPanel\r\n              commander={this.props.commander}\r\n              treeData={this.props.treeData}\r\n              red={this.props.red}\r\n              yellow={this.props.yellow}\r\n              blue={this.props.blue}\r\n            />\r\n          </ErrorBoundary>\r\n\r\n          <ErrorBoundary>\r\n            <StatsTalentsPanel\r\n              commander={this.props.commander}\r\n              treeData={this.props.treeData}\r\n              red={this.props.red}\r\n              yellow={this.props.yellow}\r\n              blue={this.props.blue}\r\n            />\r\n          </ErrorBoundary>\r\n        </MediaQuery>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SidePanel;\r\n","// Utility to map data files to object\r\nfunction loadTreeData(version) {\r\n  const treeData = {\r\n    Attack: require(`./v${version}/Attack.json`),\r\n    Archer: require(`./v${version}/Archer.json`),\r\n    Cavalry: require(`./v${version}/Cavalry.json`),\r\n    Conquering: require(`./v${version}/Conquering.json`),\r\n    Defense: require(`./v${version}/Defense.json`),\r\n    Garrison: require(`./v${version}/Garrison.json`),\r\n    Gathering: require(`./v${version}/Gathering.json`),\r\n    Infantry: require(`./v${version}/Infantry.json`),\r\n    Integration: require(`./v${version}/Integration.json`),\r\n    Leadership: require(`./v${version}/Leadership.json`),\r\n    Mobility: require(`./v${version}/Mobility.json`),\r\n    Peacekeeping: require(`./v${version}/Peacekeeping.json`),\r\n    Skill: require(`./v${version}/Skill.json`),\r\n    Support: require(`./v${version}/Support.json`),\r\n    Versatility: require(`./v${version}/Versatility.json`)\r\n  };\r\n\r\n  if (process.env.NODE_ENV === 'development') {\r\n    console.info(`Info: Loading game data version ${version}`);\r\n  }\r\n\r\n  return treeData;\r\n}\r\n\r\nexport default loadTreeData;\r\n","import React, { Component, Suspense } from 'react';\r\nimport ReactGA from 'react-ga';\r\nimport Spinner from 'react-bootstrap/Spinner';\r\nimport NavBar from './NavBar';\r\nimport SidePanel from './SidePanel';\r\nimport { InvalidBuildModal } from './Modals';\r\nimport ErrorBoundary from './Error';\r\nimport loadTreeData from './data/AllTrees';\r\nimport Commanders from './data/commanders.json';\r\nimport { sumArray, getMaxTalentCount, setTitle, encode, decode } from './utils';\r\nimport { maxPoints } from './values';\r\nimport { dataVersion } from '../package.json';\r\n\r\nimport './styles/App.css';\r\nimport './styles/fonts.css';\r\n\r\nconst TreePanel = React.lazy(() => import('./TreePanel'));\r\nlet treeData;\r\n\r\n//TODO: shouldComponentUpdate pass\r\n//FIXME: only updateurl/encode if that particular tree has changed\r\n\r\n/**\r\n * Main application component. Contains high level logic for managing application state\r\n *\r\n * @class App\r\n * @extends {Component}\r\n */\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.invalidModalFlag = false;\r\n    this.invalidBuildMessage = '';\r\n\r\n    // Context bindings\r\n    this.toggleSidePanel = this.toggleSidePanel.bind(this);\r\n    this.toggleTotalDisplay = this.toggleTotalDisplay.bind(this);\r\n    this.toggleValueDisplay = this.toggleValueDisplay.bind(this);\r\n    this.toggleNodeSize = this.toggleNodeSize.bind(this);\r\n    this.toggleMouseXY = this.toggleMouseXY.bind(this);\r\n    this.toggleTalentID = this.toggleTalentID.bind(this);\r\n    this.toggleSelect = this.toggleSelect.bind(this);\r\n    this.changeCommander = this.changeCommander.bind(this);\r\n    this.resetTalents = this.resetTalents.bind(this);\r\n    this.changeTalentValue = this.changeTalentValue.bind(this);\r\n    this.calcPointsSpent = this.calcPointsSpent.bind(this);\r\n    this.calcPointsRemaining = this.calcPointsRemaining.bind(this);\r\n\r\n    // Set initial state from query string\r\n    const urlParams = this.props.url.slice(1).split(';');\r\n\r\n    switch (urlParams.length) {\r\n      case 1: // blank url\r\n        this.state = this.getEmptyState();\r\n        this.updateURL('clear');\r\n        break;\r\n      case 5: // complete url\r\n        //FIXME: this loads treeData twice if url is valid\r\n        this.state = this.getEmptyState();\r\n        let [urlDataVersion, comID, red, yellow, blue] = urlParams;\r\n        urlDataVersion = parseInt(urlDataVersion);\r\n\r\n        const commanderName = Object.keys(Commanders).find(\r\n          key => Commanders[key]['id'] === comID\r\n        );\r\n\r\n        // Check for invalid build\r\n        if (urlDataVersion > dataVersion) {\r\n          this.invalidBuildMessage = 'Incorrect game data version';\r\n          this.invalidModalFlag = true;\r\n        } else if (!commanderName) {\r\n          this.invalidBuildMessage = 'Unknown commander ID';\r\n          this.invalidModalFlag = true;\r\n        } else {\r\n          treeData = loadTreeData(urlDataVersion);\r\n          this.state = {\r\n            ...this.state,\r\n            dataVersion: urlDataVersion,\r\n            commander: commanderName,\r\n            ...this.createZeroTalents(commanderName)\r\n          };\r\n\r\n          const colorPairs = [\r\n            [red, 'red'],\r\n            [yellow, 'yellow'],\r\n            [blue, 'blue']\r\n          ];\r\n\r\n          for (let color of colorPairs) {\r\n            // Decode and split talent string into array\r\n            let talents = decode(color[0])\r\n              .split('')\r\n              .map(Number);\r\n            const maxArray = this.createMaxValueArray(\r\n              this.state.commander,\r\n              color[1]\r\n            );\r\n\r\n            if (talents.length !== this.state[color[1]].length) {\r\n              // Check talent array is correct length\r\n              this.invalidBuildMessage = `Incorrect number of talents (${color[1]} tree)`;\r\n              this.invalidModalFlag = true;\r\n              break;\r\n            } else if (\r\n              // Check spent values are not too large\r\n              talents.some(function(el, idx) {\r\n                return el > maxArray[idx];\r\n              })\r\n            ) {\r\n              this.invalidBuildMessage = `Too many points assigned in talent (${color[1]} tree)`;\r\n              this.invalidModalFlag = true;\r\n              break;\r\n            } else {\r\n              this.state[color[1]] = talents;\r\n            }\r\n          }\r\n\r\n          // Check that the talent build has not overspent points\r\n          if (this.calcPointsRemaining() < 0) {\r\n            this.invalidBuildMessage = `Number of spent talent points exceeds maximum`;\r\n            this.invalidModalFlag = true;\r\n          }\r\n        }\r\n\r\n        if (this.invalidModalFlag) {\r\n          this.state = this.getEmptyState();\r\n          this.updateURL('clear');\r\n        } else {\r\n          this.updateURL('update');\r\n        }\r\n        break;\r\n      default:\r\n        // Incorrect number of url params\r\n        this.invalidBuildMessage = `Incorrect number of build parameters (length: ${urlParams.length}, expected: 5)`;\r\n        this.invalidModalFlag = true;\r\n        this.state = this.getEmptyState();\r\n        this.updateURL('clear');\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Get empty state values for new application instance. Also checks\r\n   * local storage for saved settings\r\n   *\r\n   * @returns {object} Object containing blank state values\r\n   * @memberof App\r\n   */\r\n  getEmptyState() {\r\n    treeData = loadTreeData(dataVersion);\r\n\r\n    const isShownSidePanel = JSON.parse(\r\n      localStorage.getItem('isShownSidePanel')\r\n    );\r\n    const isShownValues = JSON.parse(localStorage.getItem('isShownValues'));\r\n    const isShownTotals = JSON.parse(localStorage.getItem('isShownTotals'));\r\n    const isShownMouseXY = JSON.parse(localStorage.getItem('isShownMouseXY'));\r\n    const isShownTalentID = JSON.parse(localStorage.getItem('isShownTalentID'));\r\n\r\n    return {\r\n      dataVersion: dataVersion,\r\n      commander: '',\r\n      red: [],\r\n      yellow: [],\r\n      blue: [],\r\n      nodeSize: localStorage.getItem('nodeSize') || 'M',\r\n      isShownSidePanel: isShownSidePanel === null ? true : isShownSidePanel,\r\n      isShownValues: isShownValues === null ? true : isShownValues,\r\n      isShownTotals: isShownTotals === null ? true : isShownTotals,\r\n      isShownMouseXY: isShownMouseXY === null ? false : isShownMouseXY,\r\n      isShownTalentID: isShownTalentID === null ? false : isShownTalentID\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Set app state to empty and update the current URL\r\n   *\r\n   * @memberof App\r\n   */\r\n  setEmptyState() {\r\n    this.setState(this.getEmptyState(), () => {\r\n      this.updateURL('clear');\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Update the current URL\r\n   *\r\n   * @param {string} method {update | clear} Should the new URL be updated\r\n   * with the new state or cleared (new app state)?\r\n   * @memberof App\r\n   */\r\n  updateURL(method) {\r\n    let queryString;\r\n\r\n    switch (method) {\r\n      case 'update':\r\n        queryString =\r\n          '?' +\r\n          [\r\n            this.state.dataVersion,\r\n            Commanders[this.state.commander].id,\r\n            encode(this.state.red.join('')),\r\n            encode(this.state.yellow.join('')),\r\n            encode(this.state.blue.join(''))\r\n          ].join(';');\r\n\r\n        setTitle(\r\n          this.state.commander,\r\n          this.state.red,\r\n          this.state.yellow,\r\n          this.state.blue\r\n        );\r\n        break;\r\n      case 'clear':\r\n        queryString = '/';\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n    window.history.replaceState('', '', queryString);\r\n  }\r\n\r\n  /**\r\n   * Set blank state object for the newly selected commander,\r\n   * followed by `this.updateURL()`\r\n   *\r\n   * @param {string} commander Name of the commander being changed to\r\n   * @memberof App\r\n   */\r\n  changeCommander(commander) {\r\n    if (this.state.dataVersion !== dataVersion) {\r\n      treeData = loadTreeData(dataVersion);\r\n    }\r\n\r\n    const zeroTalents = this.createZeroTalents(commander);\r\n    this.setState(\r\n      { dataVersion: dataVersion, commander: commander, ...zeroTalents },\r\n      () => {\r\n        this.updateURL('update');\r\n        this.treePanelRef.drawLines();\r\n\r\n        ReactGA.event({\r\n          category: 'Navigation',\r\n          action: 'Change commander',\r\n          label: commander\r\n        });\r\n      }\r\n    );\r\n\r\n    this.treePanelRef.resetPanZoom();\r\n  }\r\n\r\n  /**\r\n   * Create a new/blank state object for a commander. The individual talent\r\n   * tree arrays will be filled with an appropriate number of `0`\r\n   *\r\n   * @param {string} commander Name of commander to create empty talents for\r\n   * @returns {object} Object containing `0` arrays for each tree color\r\n   * @memberof App\r\n   */\r\n  createZeroTalents(commander) {\r\n    const numRed = Object.keys(treeData[Commanders[commander]['red']]).length;\r\n    const numYellow = Object.keys(treeData[Commanders[commander]['yellow']])\r\n      .length;\r\n    const numBlue = Object.keys(treeData[Commanders[commander]['blue']]).length;\r\n\r\n    const zeroTalents = {\r\n      red: Array(numRed).fill(0),\r\n      yellow: Array(numYellow).fill(0),\r\n      blue: Array(numBlue).fill(0)\r\n    };\r\n\r\n    return zeroTalents;\r\n  }\r\n\r\n  /**\r\n   * Set all tree node values to `0` for the currently selected commander\r\n   *\r\n   * @memberof App\r\n   */\r\n  resetTalents() {\r\n    ReactGA.event({\r\n      category: 'App',\r\n      action: 'Reset build'\r\n    });\r\n    this.changeCommander(this.state.commander);\r\n  }\r\n\r\n  /**\r\n   * Change the value of a single talent node. Followed by `this.updateURL()`\r\n   *\r\n   * @param {string} color Color of the tree the node belongs to\r\n   * @param {number} idx Index of the node in the tree/color array.\r\n   * @param {string} how {increase | decrease} Should node value be increased\r\n   *  or decreased?\r\n   * @memberof App\r\n   */\r\n  changeTalentValue(color, idx, how) {\r\n    let newArr = this.state[color];\r\n    if (how === 'increase') {\r\n      newArr[idx - 1] += 1;\r\n    } else if (how === 'decrease') {\r\n      newArr[idx - 1] -= 1;\r\n    }\r\n    this.setState({ [color]: newArr }, () => this.updateURL('update'));\r\n  }\r\n\r\n  /**\r\n   * Get the maximum number of available points for each talent\r\n   *\r\n   * @param {string} commander Name of the commander\r\n   * @param {string} color Color of the tree to get max values for\r\n   * @returns {Number[]} Array of maximum available points for each talent in the tree\r\n   * @memberof App\r\n   */\r\n  createMaxValueArray(commander, color) {\r\n    let maxArray = [];\r\n\r\n    Object.keys(treeData[Commanders[commander][color]]).forEach(id => {\r\n      maxArray.push(\r\n        getMaxTalentCount(treeData[Commanders[commander][color]][id]['values'])\r\n      );\r\n    });\r\n\r\n    return maxArray;\r\n  }\r\n\r\n  /**\r\n   * Calculate the total number of talent points spent. This is just a sum\r\n   * of all the color/tree array values\r\n   *\r\n   * @param {string} color Color of the tree to sum. Omitting this param sums\r\n   * across all trees\r\n   * @returns {number} Total number of talent points spent\r\n   * @memberof App\r\n   */\r\n  calcPointsSpent(color = 'total') {\r\n    let points;\r\n\r\n    if (color === 'total') {\r\n      points = [...this.state.red, ...this.state.yellow, ...this.state.blue];\r\n    } else {\r\n      points = [...this.state[color]];\r\n    }\r\n\r\n    return sumArray(points);\r\n  }\r\n\r\n  /**\r\n   * Calculate number of remaining talent points available to be spent\r\n   *\r\n   * @returns {number} Number of remaining talent points\r\n   * @memberof App\r\n   */\r\n  calcPointsRemaining() {\r\n    return maxPoints - this.calcPointsSpent();\r\n  }\r\n\r\n  /**\r\n   * Toggle display of side panel\r\n   *\r\n   * @memberof App\r\n   */\r\n  toggleSidePanel() {\r\n    this.setState(\r\n      prevState => ({\r\n        isShownSidePanel: !prevState.isShownSidePanel\r\n      }),\r\n      () => {\r\n        this.treePanelRef.repaint();\r\n        localStorage.setItem('isShownSidePanel', this.state.isShownSidePanel);\r\n      }\r\n    );\r\n\r\n    ReactGA.event({\r\n      category: 'Settings',\r\n      action: 'Toggle side panel'\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Toggle display of total number of points spent in each tree\r\n   *\r\n   * @memberof App\r\n   */\r\n  toggleTotalDisplay() {\r\n    this.setState(\r\n      prevState => ({\r\n        isShownTotals: !prevState.isShownTotals\r\n      }),\r\n      () => {\r\n        localStorage.setItem('isShownTotals', this.state.isShownTotals);\r\n      }\r\n    );\r\n\r\n    ReactGA.event({\r\n      category: 'Settings',\r\n      action: 'Toggle tree totals'\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Toggle display of node values\r\n   *\r\n   * @memberof App\r\n   */\r\n  toggleValueDisplay() {\r\n    this.setState(\r\n      prevState => ({\r\n        isShownValues: !prevState.isShownValues\r\n      }),\r\n      () => {\r\n        localStorage.setItem('isShownValues', this.state.isShownValues);\r\n      }\r\n    );\r\n\r\n    ReactGA.event({\r\n      category: 'Settings',\r\n      action: 'Toggle node values'\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Toggle node size\r\n   *\r\n   * @param {string} size Desired node size\r\n   * @memberof App\r\n   */\r\n  toggleNodeSize(size) {\r\n    this.setState({ nodeSize: size }, () => {\r\n      this.treePanelRef.repaint();\r\n      localStorage.setItem('nodeSize', this.state.nodeSize);\r\n    });\r\n\r\n    ReactGA.event({\r\n      category: 'Settings',\r\n      action: 'Toggle node size',\r\n      label: size\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Toggle mouse XY position display\r\n   *\r\n   * @memberof App\r\n   */\r\n  toggleMouseXY() {\r\n    this.setState(\r\n      prevState => ({\r\n        isShownMouseXY: !prevState.isShownMouseXY\r\n      }),\r\n      () => {\r\n        this.treePanelRef.toggleMouseListeners();\r\n        localStorage.setItem('isShownMouseXY', this.state.isShownMouseXY);\r\n      }\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Toggle tooltip talent ID\r\n   *\r\n   * @memberof App\r\n   */\r\n  toggleTalentID() {\r\n    this.setState(\r\n      prevState => ({\r\n        isShownTalentID: !prevState.isShownTalentID\r\n      }),\r\n      () => {\r\n        localStorage.setItem('isShownTalentID', this.state.isShownTalentID);\r\n      }\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Toggle commander select dropdown. Uses a ref to the navbar\r\n   *\r\n   * @memberof App\r\n   */\r\n  toggleSelect() {\r\n    this.navBarRef.toggleSelect();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div id=\"app\">\r\n        {this.invalidModalFlag && (\r\n          <InvalidBuildModal message={this.invalidBuildMessage} />\r\n        )}\r\n\r\n        <ErrorBoundary>\r\n          <NavBar\r\n            ref={component => (this.navBarRef = component)}\r\n            toggleSidePanel={this.toggleSidePanel}\r\n            toggleTotalDisplay={this.toggleTotalDisplay}\r\n            toggleValueDisplay={this.toggleValueDisplay}\r\n            toggleNodeSize={this.toggleNodeSize}\r\n            toggleMouseXY={this.toggleMouseXY}\r\n            toggleTalentID={this.toggleTalentID}\r\n            changeCommander={this.changeCommander}\r\n            calcPointsSpent={this.calcPointsSpent}\r\n            resetTalents={this.resetTalents}\r\n            commander={this.state.commander}\r\n            nodeSize={this.state.nodeSize}\r\n            isShownSidePanel={this.state.isShownSidePanel}\r\n            isShownValues={this.state.isShownValues}\r\n            isShownTotals={this.state.isShownTotals}\r\n            isShownMouseXY={this.state.isShownMouseXY}\r\n            isShownTalentID={this.state.isShownTalentID}\r\n          />\r\n        </ErrorBoundary>\r\n\r\n        <div id=\"main-container\">\r\n          <Suspense\r\n            fallback={\r\n              <div id=\"spinner\">\r\n                <Spinner size=\"lg\" animation=\"border\" variant=\"status\" />\r\n                <br />\r\n                <span className=\"sr-only\">Loading...</span>\r\n              </div>\r\n            }\r\n          >\r\n            <ErrorBoundary>\r\n              <SidePanel\r\n                ref={component => (this.sidePanelRef = component)}\r\n                calcPointsSpent={this.calcPointsSpent}\r\n                calcPointsRemaining={this.calcPointsRemaining}\r\n                treeData={treeData}\r\n                commander={this.state.commander}\r\n                red={this.state.red}\r\n                yellow={this.state.yellow}\r\n                blue={this.state.blue}\r\n                isShownSidePanel={this.state.isShownSidePanel}\r\n              />\r\n            </ErrorBoundary>\r\n\r\n            <ErrorBoundary>\r\n              <TreePanel\r\n                ref={component => (this.treePanelRef = component)}\r\n                toggleSelect={this.toggleSelect}\r\n                changeCommander={this.changeCommander}\r\n                resetTalents={this.resetTalents}\r\n                changeTalentValue={this.changeTalentValue}\r\n                calcPointsSpent={this.calcPointsSpent}\r\n                calcPointsRemaining={this.calcPointsRemaining}\r\n                treeData={treeData}\r\n                dataVersion={this.state.dataVersion}\r\n                commander={this.state.commander}\r\n                red={this.state.red}\r\n                yellow={this.state.yellow}\r\n                blue={this.state.blue}\r\n                nodeSize={this.state.nodeSize}\r\n                isShownValues={this.state.isShownValues}\r\n                isShownTotals={this.state.isShownTotals}\r\n                isShownMouseXY={this.state.isShownMouseXY}\r\n                isShownTalentID={this.state.isShownTalentID}\r\n              />\r\n            </ErrorBoundary>\r\n          </Suspense>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport ReactGA from 'react-ga';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport App from './App';\r\n\r\nReactGA.initialize('UA-114296077-2');\r\nReactGA.pageview('/');\r\n\r\nconst url = window.location.search;\r\nReactDOM.render(<App url={url} />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}