{"version":3,"sources":["utils.js","data sync /^/.//v.*//Attack/.json$","data sync /^/.//v.*//Archer/.json$","data sync /^/.//v.*//Cavalry/.json$","data sync /^/.//v.*//Conquering/.json$","data sync /^/.//v.*//Defense/.json$","data sync /^/.//v.*//Garrison/.json$","data sync /^/.//v.*//Gathering/.json$","data sync /^/.//v.*//Infantry/.json$","data sync /^/.//v.*//Integration/.json$","data sync /^/.//v.*//Leadership/.json$","data sync /^/.//v.*//Mobility/.json$","data sync /^/.//v.*//Peacekeeping/.json$","data sync /^/.//v.*//Skill/.json$","data sync /^/.//v.*//Support/.json$","data sync /^/.//v.*//Versatility/.json$","serviceWorker.js","GuidedTour.js","NavBarButtons.js","Tooltips.js","NavBarSettings.js","NavBarCommander.js","Modals.js","NavBar.js","SummaryPanel.js","StatsPanel.js","StatsTalentsPanel.js","InfoPanel.js","data/AllTrees.js","App.js","index.js","Error.js","values.js"],"names":["sumArray","arr","reduce","partial","a","isMultidimensional","filter","Array","isArray","length","getMaxTalentCount","talentValues","replaceTalentText","text","replacementIdx","newText","i","re","RegExp","replace","getTreeName","color","commander","commanderData","Commanders","setTitle","r","y","b","sep","newTitle","createSummaryString","title","document","rSpent","ySpent","bSpent","name","shortName","isTouchDevice","window","matchMedia","matches","isNewUser","localStorage","getItem","JSON","parse","setItem","encode","match","map","v","valuesToLetters","hasOwnProperty","join","decode","encoded","split","k","lettersToValues","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","Boolean","location","hostname","GuidedTour","props","restartTour","setState","run","stepIndex","handleJoyrideCallback","data","action","index","status","type","STATUS","FINISHED","SKIPPED","includes","ACTIONS","CLOSE","EVENTS","STEP_AFTER","TARGET_NOT_FOUND","PREV","state","steps","content","target","placement","disableBeacon","locale","last","this","callback","continuous","showProgress","showSkipButton","disableOverlayClose","styles","options","primaryColor","overlayColor","Component","NavBarButtons","className","data-testid","disabled","calcPointsSpent","onClick","showReset","icon","faTrashAlt","showShare","faShareAlt","HelpTooltip","OverlayTrigger","flip","trigger","overlay","Tooltip","tooltip","faQuestionCircle","NavBarSettings","nextProps","nextState","isShownInfoPanel","isShownValues","isShownTotals","isSpeedMode","isShownMouseXY","isShownTalentID","nodeSize","Dropdown","alignRight","as","NavItem","Toggle","NavLink","faCog","Menu","Form","Group","Header","Check","label","checked","onChange","toggleInfoPanel","toggleValueDisplay","toggleTotalDisplay","Divider","ToggleButtonGroup","size","value","val","toggleNodeSize","ToggleButton","variant","toggleSpeedMode","process","NavBarCommander","isOpen","toggleSelect","bind","prevState","commanderList","sort","legendaryCommanders","epicCommanders","forEach","c","selectItem","Item","key","changeCommander","alt","src","tier","push","show","onToggle","createSelectItems","InvalidBuildModal","modal","toggle","Modal","centered","onHide","closeButton","faExclamationTriangle","Body","message","Footer","Button","AboutModal","faInfoCircle","Tabs","defaultActiveKey","Tab","eventKey","version","href","author","url","rel","contributors","toggleTour","ResetModal","resetTalents","ShareModal","input","getElementById","readOnly","select","execCommand","innerHTML","ReactGA","event","category","faLink","defaultValue","copyURL","faCopy","EmailShareButton","EmailIcon","round","RedditShareButton","RedditIcon","TwitterShareButton","TwitterIcon","WhatsappShareButton","WhatsappIcon","PocketShareButton","PocketIcon","NavBar","navOpen","toggleNav","navBarCommanderRef","aboutModalRef","resetModalRef","shareModalRef","Fragment","ref","component","Navbar","Brand","minDeviceWidth","style","cursor","showAbout","Nav","toggleMouseXY","toggleTalentID","SummaryPanel","calcPointsRemaining","StatsPanel","allStats","stats","getAllStats","StatsTalentsPanel","isShownStatsTalents","toggleStatsTalents","talents","nodes","some","values","idx","talentInfo","treeData","Collapse","in","mainTalents","calcStatsTalents","InfoPanel","orientation","red","yellow","blue","loadTreeData","Attack","require","Archer","Cavalry","Conquering","Defense","Garrison","Gathering","Infantry","Integration","Leadership","Mobility","Peacekeeping","Skill","Support","Versatility","TreePanel","React","lazy","App","invalidModalFlag","invalidBuildMessage","changeTalentValue","urlParams","slice","getEmptyState","dataVersion","updateURL","urlDataVersion","comID","parseInt","commanderName","find","createZeroTalents","Number","maxArray","createMaxValueArray","el","treeName","talentData","stat","j","getEmptyStats","Health","method","queryString","history","replaceState","zeroTalents","treePanelRef","drawLines","resetPanZoom","numRed","numYellow","numBlue","fill","valueIdx","how","talent","multiStat","newArr","newStats","curStat","points","maxPoints","repaint","toggleMouseListeners","navBarRef","tourRef","fallback","Spinner","animation","infoPanelRef","initialize","pageview","search","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister","ErrorBoundary","error","errorInfo","whiteSpace","toString","componentStack","children","d","f","g","h","l","m","n","p","q","s","t","u","w","x","z"],"mappings":"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","file":"static/js/main.5ee3a90f.chunk.js","sourcesContent":["import { valuesToLetters, lettersToValues } from './values';\nimport Commanders from './data/commanders.json';\nimport { title } from '../package.json';\n\n/**\n * Sum all values of an array\n *\n * @export\n * @param {Number[]} arr Array to calculate sum of\n * @returns {Number} Sum of the array\n */\nexport function sumArray(arr) {\n  return arr.reduce((partial, a) => partial + a, 0);\n}\n\n/**\n * Check if two arrays are equal\n *\n * @export\n * @param {array} a First array\n * @param {array} b Second array\n * @returns {boolean} Are the two arrays equal?\n */\nexport function arraysEqual(a, b) {\n  if (a === b) return true;\n  if (a == null || b == null) return false;\n  // eslint-disable-next-line\n  if (a.length != b.length) return false;\n\n  for (var i = 0; i < a.length; ++i) {\n    if (a[i] !== b[i]) return false;\n  }\n  return true;\n}\n\n/**\n * Check if array is nested/multidimensional\n *\n * @param {Array} arr array to check for nesting\n * @returns {Boolean} Boolean indicating whether array is multidimensional\n */\nexport function isMultidimensional(arr) {\n  return arr.filter(Array.isArray).length !== 0;\n}\n\n/**\n * Get maximum number of spendable points for a talent\n *\n * @param {Array} talentValues array of values for a given talent\n * @returns {Number} Number of maximum spendable points\n */\nexport function getMaxTalentCount(talentValues) {\n  let max;\n  if (!isMultidimensional(talentValues)) {\n    max = talentValues.length;\n  } else {\n    // All multidimensional arrays should be same length (checked by unit test)\n    max = talentValues[0].length;\n  }\n  return max;\n}\n\n/**\n * Replace talent text placeholders (e.g. `${1}`) with selected values\n *\n * @param {string} text Full talent text\n * @param {Array} talentValues Array (or multidimensional array) of values for the talent\n * @param {Number} replacementIdx Index of the value to use as replacement\n * @returns {string} Talent text with placeholders replaced\n */\nexport function replaceTalentText(text, talentValues, replacementIdx) {\n  let newText = text;\n\n  if (isMultidimensional(talentValues)) {\n    for (let i = 0; i < talentValues.length; i++) {\n      let re = new RegExp(`\\\\$\\\\{${i + 1}\\\\}`, 'g');\n      newText = newText.replace(re, talentValues[i][replacementIdx]);\n    }\n  } else {\n    newText = newText.replace(/\\$\\{1\\}/g, talentValues[replacementIdx]);\n  }\n\n  return newText;\n}\n\n/**\n * Get the full name of a talent tree (e.g. Skill, Garrison). The name\n * depends on the tree color and the selected commander\n *\n * @param {string} color Color of the tree to retrieve the name for\n * @param {string} commander Name of the commander\n * @returns {string} full tree name\n */\nexport function getTreeName(color, commander) {\n  const commanderData = Commanders[commander];\n  if (commanderData) {\n    return commanderData[color];\n  }\n}\n\n/**\n * Set the window title with commander name and talents spent in each tree\n *\n * @param {string} commander Full name of the commander\n * @param {Number[]} r Array of red tree values\n * @param {Number[]} y Array of yellow tree values\n * @param {Number[]} b Array of blue tree values\n * @param {string} [sep='/'] Separator to use between point totals\n */\nexport function setTitle(commander, r, y, b, sep = '/') {\n  const newTitle = `${createSummaryString(commander, r, y, b, sep)} | ${title}`;\n  document.title = newTitle;\n}\n\n/**\n * Create a string with commander name and talents spent in each tree\n *\n * @param {string} commander Full name of the commander\n * @param {Number[]} r Array of red tree values\n * @param {Number[]} y Array of yellow tree values\n * @param {Number[]} b Array of blue tree values\n * @param {string} [sep='/'] Separator to use between point totals\n * @returns {string} String summarizing the commander and points spent\n */\nexport function createSummaryString(commander, r, y, b, sep = '/') {\n  const rSpent = sumArray(r);\n  const ySpent = sumArray(y);\n  const bSpent = sumArray(b);\n  const name = Commanders[commander].shortName || commander;\n  return `${name} (${rSpent}${sep}${ySpent}${sep}${bSpent})`;\n}\n/**\n * Detect if device is touch enabled\n *\n * @returns {Boolean} Whether device is touch or not\n */\nexport function isTouchDevice() {\n  if (window.matchMedia('(pointer: coarse)').matches) {\n    return true;\n  } else {\n    return false;\n  }\n}\n\n/**\n * Check whether user is new or returning\n *\n * @returns {Boolean} Whether user is new or returning\n */\nexport function isNewUser() {\n  if (\n    !localStorage.getItem('isNewUser') ||\n    JSON.parse(localStorage.getItem('isNewUser') === true)\n  ) {\n    localStorage.setItem('isNewUser', false);\n    return true;\n  } else {\n    return false;\n  }\n}\n\n/**\n * Encode/compress the passed text\n *\n * @param {string} text Text to be encoded/compressed\n * @returns {string} Encoded/compressed version of the text\n */\nexport function encode(text) {\n  const encoded = text\n    .match(/(..?)/g)\n    .map(v => {\n      return valuesToLetters.hasOwnProperty(v) ? valuesToLetters[v] : v;\n    })\n    .join('');\n\n  return encoded;\n}\n\n/**\n * Decode encoded text\n *\n * @param {string} encoded Encoded form of the text\n * @returns {string} Decoded string\n */\nexport function decode(encoded) {\n  const decoded = encoded\n    .split('')\n    .map(k => {\n      return lettersToValues.hasOwnProperty(k) ? lettersToValues[k] : k;\n    })\n    .join('');\n\n  return decoded;\n}\n\nexport default {\n  sumArray,\n  arraysEqual,\n  isMultidimensional,\n  getMaxTalentCount,\n  replaceTalentText,\n  setTitle,\n  createSummaryString,\n  isTouchDevice,\n  isNewUser,\n  encode,\n  decode\n};\n","var map = {\n\t\"./v1/Attack.json\": 220\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 219;","var map = {\n\t\"./v1/Archer.json\": 222\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 221;","var map = {\n\t\"./v1/Cavalry.json\": 224\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 223;","var map = {\n\t\"./v1/Conquering.json\": 226\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 225;","var map = {\n\t\"./v1/Defense.json\": 228\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 227;","var map = {\n\t\"./v1/Garrison.json\": 230\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 229;","var map = {\n\t\"./v1/Gathering.json\": 232\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 231;","var map = {\n\t\"./v1/Infantry.json\": 234\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 233;","var map = {\n\t\"./v1/Integration.json\": 236\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 235;","var map = {\n\t\"./v1/Leadership.json\": 238\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 237;","var map = {\n\t\"./v1/Mobility.json\": 240\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 239;","var map = {\n\t\"./v1/Peacekeeping.json\": 242\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 241;","var map = {\n\t\"./v1/Skill.json\": 244\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 243;","var map = {\n\t\"./v1/Support.json\": 246\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 245;","var map = {\n\t\"./v1/Versatility.json\": 248\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 247;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React, { Component } from 'react';\nimport Joyride, { ACTIONS, EVENTS, STATUS } from 'react-joyride';\nimport { isNewUser } from './utils';\n\n/**\n * Component containing the guided tour for app onboarding\n *\n * @class GuidedTour\n * @extends {Component}\n */\nclass GuidedTour extends Component {\n  constructor(props: Props) {\n    super(props);\n\n    this.state = {\n      run: isNewUser() ? true : false,\n      stepIndex: 0,\n      steps: [\n        {\n          content: 'Select your commander using this dropdown',\n          target: '#select-commander',\n          placement: 'auto',\n          disableBeacon: true\n        },\n        {\n          content: 'Check the number of points you have left to spend',\n          target: '#summary-panel',\n          placement: 'auto'\n        },\n        {\n          content: 'Check various stats given by your talent build',\n          target: '#stats-panel',\n          placement: 'auto'\n        },\n        {\n          content:\n            'Reset your talent build. This will delete all assigned talent points',\n          target: '#button-reset',\n          placement: 'auto'\n        },\n        {\n          content:\n            'Talent builds can be shared with a link. Click this to get your shareable link, or simply copy your current URL',\n          target: '#button-share',\n          placement: 'auto'\n        },\n        {\n          content:\n            'Change display settings, or activate additional functionality like Speed Mode',\n          target: '#select-settings'\n        },\n        {\n          content:\n            'Get additional info about the app. You can also restart the guided tour here',\n          target: '#nav-icon',\n          locale: { last: 'Finish' }\n        }\n      ]\n    };\n  }\n\n  /**\n   * Restart the guided tour by resetting the current tour step\n   *\n   * @memberof GuidedTour\n   */\n  restartTour = () => {\n    this.setState({\n      run: true,\n      stepIndex: 0\n    });\n  };\n\n  /**\n   * Handle tour events (next step, tour close etc)\n   *\n   * @memberof GuidedTour\n   */\n  handleJoyrideCallback = data => {\n    const { action, index, status, type } = data;\n\n    if ([STATUS.FINISHED, STATUS.SKIPPED].includes(status)) {\n      // Need to set our running state to false, so we can restart if we click start again.\n      this.setState({ run: false, stepIndex: 0 });\n    } else if (action === ACTIONS.CLOSE) {\n      this.setState({ run: false, stepIndex: 0 });\n    } else if (type === EVENTS.STEP_AFTER || type === EVENTS.TARGET_NOT_FOUND) {\n      // Update state to advance the tour\n      this.setState({ stepIndex: index + (action === ACTIONS.PREV ? -1 : 1) });\n    }\n  };\n\n  render() {\n    return (\n      <Joyride\n        run={this.state.run}\n        callback={this.handleJoyrideCallback}\n        stepIndex={this.state.stepIndex}\n        steps={this.state.steps}\n        continuous={true}\n        showProgress={true}\n        showSkipButton={false}\n        disableOverlayClose={true}\n        styles={{\n          options: {\n            primaryColor: 'var(--color-highlight)',\n            overlayColor: 'rgba(0, 0, 0, 0.6)'\n          }\n        }}\n      />\n    );\n  }\n}\n\nexport default GuidedTour;\n","import React, { Component } from 'react';\nimport { faTrashAlt, faShareAlt } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nimport './styles/NavBarButtons.css';\n\n/**\n * Nav bar component containing main buttons\n *\n * @class NavBarButtons\n * @extends {Component}\n */\nclass NavBarButtons extends Component {\n  render() {\n    return (\n      <form className=\"form-inline\">\n        <button\n          id=\"button-reset\"\n          data-testid=\"button-reset\"\n          type=\"button\"\n          className=\"btn btn-sm btn-danger\"\n          disabled={\n            this.props.commander | this.props.calcPointsSpent() ? false : true\n          }\n          onClick={() => this.props.showReset()}\n        >\n          <FontAwesomeIcon icon={faTrashAlt} />\n          <span className=\"nav-button-text\">Reset</span>\n        </button>\n\n        <button\n          id=\"button-share\"\n          data-testid=\"button-share\"\n          type=\"button\"\n          disabled={\n            this.props.commander | this.props.calcPointsSpent() ? false : true\n          }\n          className=\"btn btn-sm btn-success\"\n          onClick={() => this.props.showShare()}\n        >\n          <FontAwesomeIcon icon={faShareAlt} />\n          <span className=\"nav-button-text\">Share</span>\n        </button>\n      </form>\n    );\n  }\n}\n\nexport default NavBarButtons;\n","import React, { Component } from 'react';\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\nimport Tooltip from 'react-bootstrap/Tooltip';\nimport { faQuestionCircle } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nimport './styles/Tooltips.css';\n\n/**\n * Tooltip showing a hoverable 'help' tooltip\n *\n * @class HelpTooltip\n * @extends {Component}\n */\nexport class HelpTooltip extends Component {\n  render() {\n    return (\n      <OverlayTrigger\n        placement=\"top\"\n        flip={true}\n        trigger={['hover', 'click']}\n        overlay={<Tooltip className=\"help-text\">{this.props.tooltip}</Tooltip>}\n      >\n        <FontAwesomeIcon icon={faQuestionCircle} className=\"help-icon\" />\n      </OverlayTrigger>\n    );\n  }\n}\n\nexport default { HelpTooltip };\n","import React, { Component } from 'react';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport NavItem from 'react-bootstrap/NavItem';\nimport NavLink from 'react-bootstrap/NavLink';\nimport Form from 'react-bootstrap/Form';\nimport ToggleButton from 'react-bootstrap/ToggleButton';\nimport ToggleButtonGroup from 'react-bootstrap/ToggleButtonGroup';\nimport { faCog } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { HelpTooltip } from './Tooltips';\n\nimport './styles/NavBarSettings.css';\n\n/**\n * Nav bar component containing drop down menu item for settings\n *\n * @class NavBarSettings\n * @extends {Component}\n */\nclass NavBarSettings extends Component {\n  shouldComponentUpdate(nextProps, nextState) {\n    if (\n      this.props.isShownInfoPanel !== nextProps.isShownInfoPanel ||\n      this.props.isShownValues !== nextProps.isShownValues ||\n      this.props.isShownTotals !== nextProps.isShownTotals ||\n      this.props.isSpeedMode !== nextProps.isSpeedMode ||\n      this.props.isShownMouseXY !== nextProps.isShownMouseXY ||\n      this.props.isShownTalentID !== nextProps.isShownTalentID ||\n      this.props.nodeSize !== nextProps.nodeSize\n    ) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  render() {\n    return (\n      <Dropdown alignRight as={NavItem} id=\"select-settings\">\n        <Dropdown.Toggle as={NavLink} data-testid=\"select-settings\">\n          <FontAwesomeIcon icon={faCog} />\n          <span className=\"nav-button-text\">Settings</span>\n        </Dropdown.Toggle>\n\n        <Dropdown.Menu id=\"settings-menu\" className=\"nav-menu\">\n          <Form>\n            <Form.Group id=\"settings-group\">\n              <Dropdown.Header>Display</Dropdown.Header>\n              <Form.Check\n                type=\"switch\"\n                id=\"settings-info-panel\"\n                data-testid=\"settings-info-panel\"\n                label=\"Info panel\"\n                checked={this.props.isShownInfoPanel}\n                onChange={e => this.props.toggleInfoPanel()}\n              />\n              <Form.Check\n                type=\"switch\"\n                id=\"settings-values\"\n                data-testid=\"settings-values\"\n                label=\"Node values\"\n                checked={this.props.isShownValues}\n                onChange={e => this.props.toggleValueDisplay()}\n              />\n              <Form.Check\n                type=\"switch\"\n                id=\"settings-totals\"\n                data-testid=\"settings-totals\"\n                label=\"Total spent\"\n                checked={this.props.isShownTotals}\n                onChange={e => this.props.toggleTotalDisplay()}\n              />\n\n              <Dropdown.Divider />\n\n              <Dropdown.Header>Node Size</Dropdown.Header>\n              <div className=\"d-flex flex-column\">\n                <ToggleButtonGroup\n                  name=\"size\"\n                  size=\"sm\"\n                  value={this.props.nodeSize}\n                  onChange={val => {\n                    this.props.toggleNodeSize(val);\n                  }}\n                >\n                  <ToggleButton\n                    type=\"radio\"\n                    name=\"radio\"\n                    value=\"S\"\n                    variant=\"outline-primary\"\n                  >\n                    S\n                  </ToggleButton>\n                  <ToggleButton\n                    type=\"radio\"\n                    name=\"radio\"\n                    value=\"M\"\n                    variant=\"outline-primary\"\n                  >\n                    M\n                  </ToggleButton>\n                  <ToggleButton\n                    type=\"radio\"\n                    name=\"radio\"\n                    value=\"L\"\n                    variant=\"outline-primary\"\n                  >\n                    L\n                  </ToggleButton>\n                </ToggleButtonGroup>\n\n                <Dropdown.Divider />\n                <Dropdown.Header>Expert</Dropdown.Header>\n                <div className=\"help-wrapper\">\n                  <Form.Check\n                    type=\"switch\"\n                    id=\"settings-speed-mode\"\n                    label=\"Speed mode\"\n                    checked={this.props.isSpeedMode}\n                    onChange={e => this.props.toggleSpeedMode()}\n                  />\n                  <HelpTooltip\n                    tooltip=\"No tooltips. Left/right click nodes directly to assign/remove\n            points\"\n                  />\n                </div>\n              </div>\n\n              {process.env.NODE_ENV === 'development' && (\n                <React.Fragment>\n                  <Dropdown.Divider />\n                  <Dropdown.Header>Dev Mode</Dropdown.Header>\n                  <Form.Check\n                    type=\"switch\"\n                    id=\"settings-mouse\"\n                    data-testid=\"settings-mouse\"\n                    label=\"Show mouse XY\"\n                    checked={this.props.isShownMouseXY}\n                    onChange={e => this.props.toggleMouseXY()}\n                  />\n                  <Form.Check\n                    type=\"switch\"\n                    id=\"settings-talentID\"\n                    label=\"Show talent ID\"\n                    checked={this.props.isShownTalentID}\n                    onChange={e => this.props.toggleTalentID()}\n                  />\n                </React.Fragment>\n              )}\n            </Form.Group>\n          </Form>\n        </Dropdown.Menu>\n      </Dropdown>\n    );\n  }\n}\n\nexport default NavBarSettings;\n","import React, { Component } from 'react';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport NavItem from 'react-bootstrap/NavItem';\nimport NavLink from 'react-bootstrap/NavLink';\n\nimport Commanders from './data/commanders.json';\nimport './styles/NavBarCommander.css';\n\n/**\n * Nav bar component containing commander drop down\n *\n * @class NavBarCommander\n * @extends {Component}\n */\nclass NavBarCommander extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isOpen: false\n    };\n\n    // Context bindings\n    this.toggleSelect = this.toggleSelect.bind(this);\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    if (\n      this.props.commander !== nextProps.commander ||\n      this.state.isOpen !== nextState.isOpen\n    ) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  /**\n   * Toggle open state of the commander select dropdown\n   *\n   * @memberof NavBarCommander\n   */\n  toggleSelect() {\n    this.setState(prevState => ({\n      isOpen: !prevState.isOpen\n    }));\n  }\n\n  /**\n   * Create a list of all available commanders (sorted)\n   *\n   * @returns {Dropdown.Item[]} Array of Dropdown items for all commanders\n   * @memberof NavBarCommander\n   */\n  createSelectItems() {\n    const commanderList = Object.keys(Commanders).sort();\n    let legendaryCommanders = [];\n    let epicCommanders = [];\n\n    commanderList.forEach(c => {\n      let selectItem = (\n        <Dropdown.Item\n          data-testid=\"menu-item\"\n          key={c}\n          onClick={() => {\n            this.props.changeCommander(c);\n          }}\n        >\n          <img\n            className=\"select-commander-icon\"\n            alt={c}\n            src={`${process.env.PUBLIC_URL}/images/commanders/${c}.png`}\n          ></img>\n          {Commanders[c]['shortName'] ? Commanders[c]['shortName'] : c}\n        </Dropdown.Item>\n      );\n\n      if (Commanders[c].tier === 'Legendary') {\n        legendaryCommanders.push(selectItem);\n      } else if (Commanders[c].tier === 'Epic') {\n        epicCommanders.push(selectItem);\n      }\n    });\n    return [\n      <Dropdown.Header key=\"header-legendary\">Legendary</Dropdown.Header>,\n      ...legendaryCommanders,\n      <Dropdown.Divider key=\"div1\" />,\n      <Dropdown.Header key=\"header-epic\">Epic</Dropdown.Header>,\n      ...epicCommanders\n    ];\n  }\n\n  render() {\n    return (\n      <Dropdown\n        id=\"select-commander\"\n        alignRight\n        as={NavItem}\n        show={this.state.isOpen}\n        onToggle={this.toggleSelect}\n      >\n        <Dropdown.Toggle as={NavLink} data-testid=\"select-commander\">\n          {this.props.commander ? (\n            <img\n              data-testid=\"select-commander-icon\"\n              className=\"select-commander-icon select-commander-icon-header\"\n              alt={this.props.commander}\n              src={`${process.env.PUBLIC_URL}/images/commanders/${this.props.commander}.png`}\n            ></img>\n          ) : (\n            <img\n              data-testid=\"select-commander-icon\"\n              className=\"select-commander-icon select-commander-icon-header\"\n              alt=\"Unknown commander\"\n              src={`${process.env.PUBLIC_URL}/images/commanders/unknown.png`}\n            ></img>\n          )}\n          <span className=\"nav-button-text\">\n            {this.props.commander\n              ? Commanders[this.props.commander]['shortName']\n                ? Commanders[this.props.commander]['shortName']\n                : this.props.commander\n              : ' Commander'}\n          </span>\n        </Dropdown.Toggle>\n\n        <Dropdown.Menu id=\"select-commander-menu\" className=\"nav-menu\">\n          {this.createSelectItems()}\n        </Dropdown.Menu>\n      </Dropdown>\n    );\n  }\n}\n\nexport default NavBarCommander;\n","import React, { Component } from 'react';\nimport ReactGA from 'react-ga';\nimport Tabs from 'react-bootstrap/Tabs';\nimport Tab from 'react-bootstrap/Tab';\nimport Button from 'react-bootstrap/Button';\nimport Modal from 'react-bootstrap/Modal';\nimport {\n  faExclamationTriangle,\n  faInfoCircle,\n  faTrashAlt,\n  faShareAlt,\n  faLink,\n  faCopy\n} from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  TwitterShareButton,\n  WhatsappShareButton,\n  RedditShareButton,\n  PocketShareButton,\n  EmailShareButton,\n  TwitterIcon,\n  WhatsappIcon,\n  RedditIcon,\n  PocketIcon,\n  EmailIcon\n} from 'react-share';\n\nimport {\n  title,\n  author,\n  contributors,\n  // repository,\n  // bugs,\n  version\n} from '../package.json';\nimport './styles/Modals.css';\n\n/**\n * Modal displaying warning about an invalid build retrived from URL\n *\n * @class InvalidBuildModal\n * @extends {Component}\n */\nexport class InvalidBuildModal extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      modal: true\n    };\n\n    this.toggle = this.toggle.bind(this);\n  }\n\n  toggle() {\n    this.setState(prevState => ({\n      modal: !prevState.modal\n    }));\n  }\n\n  render() {\n    return (\n      <Modal centered show={this.state.modal} onHide={this.toggle}>\n        <Modal.Header closeButton>\n          <span>\n            <FontAwesomeIcon\n              icon={faExclamationTriangle}\n              className=\"modal-icon\"\n            />\n          </span>\n          Invalid Talent Build\n        </Modal.Header>\n        <Modal.Body className=\"modal-body\">\n          <div>\n            The talent build you're trying to view is invalid. Make sure you've\n            copied and pasted the link correctly.\n            <br />\n            <br />\n          </div>\n          <div data-testid=\"invalid-modal-body\">\n            <b>Reason:</b> {this.props.message}\n          </div>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"primary\" onClick={this.toggle}>\n            Close\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    );\n  }\n}\n\n/**\n * Modal displaying information about the application\n *\n * @class AboutModal\n * @extends {Component}\n */\nexport class AboutModal extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      modal: false\n    };\n\n    this.toggle = this.toggle.bind(this);\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    if (this.state.modal !== nextState.modal) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  toggle() {\n    this.setState(prevState => ({\n      modal: !prevState.modal\n    }));\n  }\n\n  render() {\n    return (\n      <Modal centered show={this.state.modal} onHide={this.toggle}>\n        <Modal.Header closeButton>\n          <span>\n            <FontAwesomeIcon icon={faInfoCircle} className=\"modal-icon\" />\n          </span>\n          {title}\n        </Modal.Header>\n\n        <Modal.Body>\n          <Tabs defaultActiveKey=\"about\" className=\"tab-title\">\n            <Tab eventKey=\"about\" title=\"About\">\n              <div>\n                <img\n                  id=\"modal-app-icon\"\n                  src={`${process.env.PUBLIC_URL}/logo192.png`}\n                  alt=\"RoK Talents Logo\"\n                ></img>\n                Talent builder for Rise of Kingdoms. Best viewed on PC/laptop.\n              </div>\n              <br />\n              <div>\n                <span className=\"about-label\">App version:</span> {version}\n              </div>\n              <div>\n                <span className=\"about-label\">Creator:</span>{' '}\n                <a href={author.url} target=\"_blank\" rel=\"noopener noreferrer\">\n                  {author.name}\n                </a>\n              </div>\n              <div>\n                <span className=\"about-label\">Contributors:</span>{' '}\n                {contributors.join(', ')}\n              </div>\n              {/* <div>\n            <span className=\"about-label\">Code:</span>{' '}\n            <a href={repository.url} target=\"_blank\" rel=\"noopener noreferrer\">\n              GitHub\n            </a>\n          </div>\n          <div>\n            <span className=\"about-label\">Report a bug:</span>{' '}\n            <a href={bugs.url} target=\"_blank\" rel=\"noopener noreferrer\">\n              Report\n            </a>\n          </div> */}\n              <div>\n                <span className=\"about-label\">Support development:</span>{' '}\n                <a\n                  href=\"https://www.buymeacoffee.com/simonho\"\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                >\n                  <img\n                    id=\"coffee\"\n                    src=\"https://cdn.buymeacoffee.com/buttons/default-orange.png\"\n                    alt=\"Buy Me A Coffee\"\n                  ></img>\n                </a>\n              </div>\n            </Tab>\n\n            <Tab eventKey=\"instructions\" title=\"Instructions\">\n              <ol>\n                <li>Choose commander in the top-right dropdown list</li>\n                <li>Assign points by clicking on talent nodes</li>\n                <li>Check your build stats in the Stats panel</li>\n                <li>\n                  Click the Share button to get a{' '}\n                  <strong>shareable link</strong> to your build\n                </li>\n              </ol>\n              <Button\n                id=\"button-tour\"\n                variant=\"success\"\n                size=\"sm\"\n                onClick={() => {\n                  this.toggle();\n                  this.props.toggleTour();\n                }}\n              >\n                Show Guided Tour\n              </Button>\n            </Tab>\n          </Tabs>\n        </Modal.Body>\n      </Modal>\n    );\n  }\n}\n\n/**\n * Modal displaying reset/delete confirmation\n *\n * @class ResetModal\n * @extends {Component}\n */\nexport class ResetModal extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      modal: false\n    };\n\n    this.toggle = this.toggle.bind(this);\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    if (this.state.modal !== nextState.modal) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  toggle() {\n    this.setState(prevState => ({\n      modal: !prevState.modal\n    }));\n  }\n\n  render() {\n    return (\n      <Modal centered show={this.state.modal} onHide={this.toggle}>\n        <Modal.Header closeButton>\n          <span>\n            <FontAwesomeIcon icon={faTrashAlt} className=\"modal-icon\" />\n          </span>\n          Reset\n        </Modal.Header>\n\n        <Modal.Body className=\"modal-body\">\n          <div>Are you sure you want to reset the talent build?</div>\n          <div>This will remove all assigned talent points.</div>\n        </Modal.Body>\n\n        <Modal.Footer>\n          <Button\n            variant=\"danger\"\n            onClick={() => {\n              this.props.resetTalents();\n              this.toggle();\n            }}\n          >\n            Reset\n          </Button>\n          <Button variant=\"secondary\" onClick={this.toggle}>\n            Cancel\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    );\n  }\n}\n\n/**\n * Modal displaying sharing options for talent build\n *\n * @class ShareModal\n * @extends {Component}\n */\nexport class ShareModal extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      modal: false\n    };\n\n    this.toggle = this.toggle.bind(this);\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    if (this.state.modal !== nextState.modal) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  toggle() {\n    this.setState(prevState => ({\n      modal: !prevState.modal\n    }));\n  }\n\n  copyURL() {\n    const input = document.getElementById('url');\n    input.readOnly = true;\n    input.select();\n    document.execCommand('copy');\n    document.getElementById('copyButton').innerHTML = '\\u2713';\n    ReactGA.event({\n      category: 'Share',\n      action: 'Copy URL'\n    });\n  }\n\n  render() {\n    return (\n      <Modal centered show={this.state.modal} onHide={this.toggle}>\n        <Modal.Header closeButton>\n          <span>\n            <FontAwesomeIcon icon={faShareAlt} className=\"modal-icon\" />\n          </span>\n          Share Talent Build\n        </Modal.Header>\n\n        <Modal.Body>\n          <div className=\"share-modal-label\">\n            Copy talent build link to your clipboard:\n          </div>\n\n          <div className=\"input-group mb-3\">\n            <div className=\"input-group-prepend\">\n              <span className=\"input-group-text\">\n                <FontAwesomeIcon icon={faLink} />\n              </span>\n            </div>\n            <input\n              id=\"url\"\n              type=\"text\"\n              className=\"form-control\"\n              defaultValue={window.location.href}\n            ></input>\n            <div className=\"input-group-append\">\n              <button\n                id=\"copyButton\"\n                className=\"btn btn-success\"\n                type=\"button\"\n                onClick={this.copyURL}\n              >\n                <FontAwesomeIcon icon={faCopy} />\n              </button>\n            </div>\n          </div>\n\n          <hr />\n\n          <div className=\"share-modal-label\">Share to social media:</div>\n\n          <div id=\"share-modal-social\">\n            <EmailShareButton url={window.location.href}>\n              <EmailIcon size={32} round />\n            </EmailShareButton>\n            <RedditShareButton url={window.location.href}>\n              <RedditIcon size={32} round />\n            </RedditShareButton>\n            <TwitterShareButton url={window.location.href}>\n              <TwitterIcon size={32} round />\n            </TwitterShareButton>\n            <WhatsappShareButton url={window.location.href}>\n              <WhatsappIcon size={32} round />\n            </WhatsappShareButton>\n            <PocketShareButton url={window.location.href}>\n              <PocketIcon size={32} round />\n            </PocketShareButton>\n          </div>\n        </Modal.Body>\n\n        <Modal.Footer>\n          <Button variant=\"primary\" onClick={this.toggle}>\n            Close\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    );\n  }\n}\n\nexport default { InvalidBuildModal, AboutModal, ResetModal, ShareModal };\n","import React, { Component } from 'react';\nimport ReactGA from 'react-ga';\nimport MediaQuery from 'react-responsive';\nimport Navbar from 'react-bootstrap/Navbar';\nimport Nav from 'react-bootstrap/Nav';\nimport NavBarButtons from './NavBarButtons';\nimport NavBarSettings from './NavBarSettings';\nimport NavBarCommander from './NavBarCommander';\nimport { AboutModal, ResetModal, ShareModal } from './Modals';\nimport { faInfoCircle } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nimport { title } from '../package.json';\nimport './styles/NavBar.css';\n\n/**\n * Nav bar component containing main application buttons/controls\n *\n * @class NavBar\n * @extends {Component}\n */\nclass NavBar extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      navOpen: false\n    };\n\n    // Context bindings\n    this.toggleNav = this.toggleNav.bind(this);\n    this.toggleSelect = this.toggleSelect.bind(this);\n    this.showReset = this.showReset.bind(this);\n    this.showShare = this.showShare.bind(this);\n  }\n\n  /**\n   * Toggle visibility of the nav bar collapse/expand menu icon\n   *\n   * @memberof NavBar\n   */\n  toggleNav() {\n    this.setState(prevState => ({\n      navOpen: !prevState.navOpen\n    }));\n  }\n\n  /**\n   * Toggle open state of the commander select dropdown\n   *\n   * @memberof NavBar\n   */\n  toggleSelect() {\n    this.navBarCommanderRef.toggleSelect();\n  }\n\n  /**\n   * Control visibility of the \"About\" modal\n   *\n   * @memberof NavBar\n   */\n  showAbout() {\n    this.aboutModalRef.toggle();\n    ReactGA.event({\n      category: 'App',\n      action: 'View about modal'\n    });\n  }\n\n  /**\n   * Control visibility of the \"Reset\" modal\n   *\n   * @memberof NavBar\n   */\n  showReset() {\n    this.resetModalRef.toggle();\n  }\n\n  /**\n   * Control visibility of the \"Share\" modal\n   *\n   * @memberof NavBar\n   */\n  showShare() {\n    this.shareModalRef.toggle();\n    ReactGA.event({\n      category: 'App',\n      action: 'View share modal'\n    });\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        <AboutModal\n          ref={component => (this.aboutModalRef = component)}\n          toggleTour={this.props.toggleTour}\n        />\n        <ResetModal\n          ref={component => (this.resetModalRef = component)}\n          resetTalents={this.props.resetTalents}\n        />\n        <ShareModal ref={component => (this.shareModalRef = component)} />\n\n        <Navbar\n          variant=\"light\"\n          className={this.props.isSpeedMode ? 'nav-speed' : 'navbar'}\n        >\n          <Navbar.Brand href=\"/\">\n            <img\n              id=\"nav-app-icon\"\n              src={`${process.env.PUBLIC_URL}/logo192.png`}\n              alt=\"RoK Talents Logo\"\n            ></img>\n          </Navbar.Brand>\n\n          <MediaQuery minDeviceWidth={380}>\n            <Navbar.Brand href=\"/\">{title}</Navbar.Brand>\n          </MediaQuery>\n\n          <Navbar.Brand\n            id=\"nav-icon\"\n            className=\"mr-auto\"\n            style={{ cursor: 'pointer' }}\n            onClick={() => this.showAbout(true)}\n          >\n            <FontAwesomeIcon icon={faInfoCircle} />\n          </Navbar.Brand>\n\n          <Nav className=\"ml-auto\">\n            <NavBarButtons\n              calcPointsSpent={this.props.calcPointsSpent}\n              showReset={this.showReset}\n              showShare={this.showShare}\n              commander={this.props.commander}\n            />\n\n            <NavBarSettings\n              toggleInfoPanel={this.props.toggleInfoPanel}\n              toggleTotalDisplay={this.props.toggleTotalDisplay}\n              toggleValueDisplay={this.props.toggleValueDisplay}\n              toggleNodeSize={this.props.toggleNodeSize}\n              toggleSpeedMode={this.props.toggleSpeedMode}\n              toggleMouseXY={this.props.toggleMouseXY}\n              toggleTalentID={this.props.toggleTalentID}\n              isShownInfoPanel={this.props.isShownInfoPanel}\n              isShownValues={this.props.isShownValues}\n              isShownTotals={this.props.isShownTotals}\n              isSpeedMode={this.props.isSpeedMode}\n              isShownMouseXY={this.props.isShownMouseXY}\n              isShownTalentID={this.props.isShownTalentID}\n              nodeSize={this.props.nodeSize}\n            />\n\n            <NavBarCommander\n              ref={component => (this.navBarCommanderRef = component)}\n              changeCommander={this.props.changeCommander}\n              commander={this.props.commander}\n            />\n          </Nav>\n        </Navbar>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default NavBar;\n","import React, { Component } from 'react';\n\nimport Commanders from './data/commanders.json';\nimport './styles/SummaryPanel.css';\n\n/**\n * Summary panel component displaying commander info\n *\n * @class SummaryPanel\n * @extends {Component}\n */\nclass SummaryPanel extends Component {\n  render() {\n    return (\n      <div id=\"summary-panel\" className=\"info-box\">\n        {this.props.commander && (\n          <img\n            src={`${process.env.PUBLIC_URL}/images/commanders/${this.props.commander}.png`}\n            alt={this.props.commander}\n          ></img>\n        )}\n\n        <h1>{this.props.commander ? this.props.commander : 'Summary'}</h1>\n        <h3>\n          {this.props.commander && Commanders[this.props.commander].title}\n        </h3>\n\n        <div id=\"summary-panel-summary\">\n          <p>Points remaining: {this.props.calcPointsRemaining()}</p>\n          <p>Points spent: {this.props.calcPointsSpent()}</p>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default SummaryPanel;\n","import React, { Component } from 'react';\nimport { HelpTooltip } from './Tooltips';\n\nimport './styles/StatsPanel.css';\n\n/**\n * Stats panel component displaying stats about the current talent build\n *\n * @class StatsPanel\n * @extends {Component}\n */\nclass StatsPanel extends Component {\n  /**\n   * Get all calculated stats and their values\n   *\n   * @returns {DOMElement[]} Array of DOM elements containing stats and values\n   * @memberof StatsPanel\n   */\n  getAllStats() {\n    let allStats = [];\n    const keys = Object.keys(this.props.stats);\n    keys.sort();\n    for (var i = 0; i < keys.length; i++) {\n      allStats.push(\n        <p key={keys[i]}>{`${keys[i]}: ${this.props.stats[keys[i]]}%`}</p>\n      );\n    }\n    return allStats;\n  }\n\n  render() {\n    return (\n      <div id=\"stats-panel\" className=\"info-box\">\n        <h2>\n          Stats{' '}\n          <HelpTooltip tooltip=\"Totals only include unconditional and direct stat boosts. For example, does not include stats from rallies/garrison/% chance etc.\" />\n        </h2>\n        <div id=\"stats-panel-stats\">{this.getAllStats()}</div>\n      </div>\n    );\n  }\n}\n\nexport default StatsPanel;\n","import React, { Component } from 'react';\nimport ReactGA from 'react-ga';\nimport Collapse from 'react-bootstrap/Collapse';\nimport { HelpTooltip } from './Tooltips';\nimport { getMaxTalentCount, replaceTalentText } from './utils';\n\nimport Commanders from './data/commanders.json';\nimport './styles/StatsTalentsPanel.css';\n\n/**\n * Stats talents panel component containing selected main talents\n *\n * @class StatsTalentsPanel\n * @extends {Component}\n */\nclass StatsTalentsPanel extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isShownStatsTalents: false\n    };\n\n    // Context bindings\n    this.toggleStatsTalents = this.toggleStatsTalents.bind(this);\n  }\n\n  /**\n   * Toggles visibility of the main talents descriptions\n   *\n   * @memberof StatsTalentsPanel\n   */\n  toggleStatsTalents() {\n    this.setState(prevState => ({\n      isShownStatsTalents: !prevState.isShownStatsTalents\n    }));\n\n    ReactGA.event({\n      category: 'App',\n      action: 'Toggle stats talents'\n    });\n  }\n\n  /**\n   * Calculate an array of main talents that don't belong in any of\n   * the base stat categories\n   *\n   * @returns {DOMElement[]} Array of all selected main talents\n   * @memberof StatsTalentsPanel\n   */\n  calcStatsTalents() {\n    const commander = this.props.commander;\n    let talents = [];\n\n    ['red', 'yellow', 'blue'].forEach(color => {\n      const nodes = this.props[color];\n\n      if (nodes.some(values => values !== 0)) {\n        nodes.forEach((value, idx) => {\n          const talentInfo = this.props.treeData[Commanders[commander][color]][\n            idx + 1\n          ];\n\n          if (value > 0 && talentInfo.type === 'node-large') {\n            talents.push(\n              <div key={talentInfo.name} className={`stats-talents-main`}>\n                <div className=\"stats-talents-title\">\n                  <span className={`bullet bg-${color}`}></span>\n\n                  {`${talentInfo.name} (${value}/${getMaxTalentCount(\n                    talentInfo.values\n                  )})`}\n                </div>\n\n                <Collapse in={this.state.isShownStatsTalents}>\n                  <div className=\"stats-talents-text\">\n                    {replaceTalentText(\n                      talentInfo.text,\n                      talentInfo.values,\n                      value - 1\n                    )}\n                  </div>\n                </Collapse>\n              </div>\n            );\n          }\n        });\n      }\n    });\n\n    return talents;\n  }\n\n  render() {\n    const mainTalents = this.calcStatsTalents();\n    return (\n      <div\n        id=\"stats-talents\"\n        className=\"info-box\"\n        onClick={this.toggleStatsTalents}\n      >\n        <h2 id=\"stats-talents-title\">\n          Main Talents{' '}\n          <HelpTooltip tooltip=\"Expandable list of all selected main talents\" />\n        </h2>\n        <div data-testid=\"stats-talents\">\n          {mainTalents.length === 0 ? 'None' : mainTalents}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default StatsTalentsPanel;\n","import React, { Component } from 'react';\nimport MediaQuery from 'react-responsive';\nimport SummaryPanel from './SummaryPanel';\nimport StatsPanel from './StatsPanel';\nimport StatsTalentsPanel from './StatsTalentsPanel';\nimport ErrorBoundary from './Error';\nimport { isTouchDevice } from './utils';\n\nimport './styles/InfoPanel.css';\n\n/**\n * Info panel component displaying stats about the current talent build\n *\n * @class InfoPanel\n * @extends {Component}\n */\nclass InfoPanel extends Component {\n  render() {\n    return (\n      <div\n        id=\"info-panel\"\n        data-testid=\"info-panel\"\n        className={\n          this.props.isShownInfoPanel ? 'info-panel-open' : 'info-panel-closed'\n        }\n      >\n        <ErrorBoundary>\n          <div id=\"summary-panel-container\">\n            <SummaryPanel\n              commander={this.props.commander}\n              calcPointsRemaining={this.props.calcPointsRemaining}\n              calcPointsSpent={this.props.calcPointsSpent}\n            />\n            <MediaQuery orientation=\"portrait\">\n              <StatsPanel stats={this.props.stats} />\n            </MediaQuery>\n          </div>\n        </ErrorBoundary>\n\n        <MediaQuery orientation=\"landscape\">\n          <ErrorBoundary>\n            <StatsPanel stats={this.props.stats} />\n          </ErrorBoundary>\n\n          {!isTouchDevice() && (\n            <ErrorBoundary>\n              <StatsTalentsPanel\n                calcPointsSpent={this.props.calcPointsSpent}\n                commander={this.props.commander}\n                treeData={this.props.treeData}\n                red={this.props.red}\n                yellow={this.props.yellow}\n                blue={this.props.blue}\n              />\n            </ErrorBoundary>\n          )}\n        </MediaQuery>\n      </div>\n    );\n  }\n}\n\nexport default InfoPanel;\n","// Utility to map data files to object\nfunction loadTreeData(version) {\n  const treeData = {\n    Attack: require(`./v${version}/Attack.json`),\n    Archer: require(`./v${version}/Archer.json`),\n    Cavalry: require(`./v${version}/Cavalry.json`),\n    Conquering: require(`./v${version}/Conquering.json`),\n    Defense: require(`./v${version}/Defense.json`),\n    Garrison: require(`./v${version}/Garrison.json`),\n    Gathering: require(`./v${version}/Gathering.json`),\n    Infantry: require(`./v${version}/Infantry.json`),\n    Integration: require(`./v${version}/Integration.json`),\n    Leadership: require(`./v${version}/Leadership.json`),\n    Mobility: require(`./v${version}/Mobility.json`),\n    Peacekeeping: require(`./v${version}/Peacekeeping.json`),\n    Skill: require(`./v${version}/Skill.json`),\n    Support: require(`./v${version}/Support.json`),\n    Versatility: require(`./v${version}/Versatility.json`)\n  };\n\n  if (process.env.NODE_ENV === 'development') {\n    console.info(`Info: Loading game data version ${version}`);\n  }\n\n  return treeData;\n}\n\nexport default loadTreeData;\n","import React, { Component, Suspense } from 'react';\nimport ReactGA from 'react-ga';\nimport Spinner from 'react-bootstrap/Spinner';\nimport GuidedTour from './GuidedTour';\nimport NavBar from './NavBar';\nimport InfoPanel from './InfoPanel';\nimport { InvalidBuildModal } from './Modals';\nimport ErrorBoundary from './Error';\nimport loadTreeData from './data/AllTrees';\nimport Commanders from './data/commanders.json';\nimport {\n  sumArray,\n  getMaxTalentCount,\n  getTreeName,\n  setTitle,\n  isTouchDevice,\n  encode,\n  decode\n} from './utils';\nimport { maxPoints } from './values';\nimport { dataVersion } from '../package.json';\n\nimport './styles/App.css';\nimport './styles/fonts.css';\n\nconst TreePanel = React.lazy(() => import('./TreePanel'));\nlet treeData;\n\n/**\n * Main application component. Contains high level logic for managing application state\n *\n * @class App\n * @extends {Component}\n */\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.invalidModalFlag = false;\n    this.invalidBuildMessage = '';\n\n    // Context bindings\n    this.toggleInfoPanel = this.toggleInfoPanel.bind(this);\n    this.toggleTotalDisplay = this.toggleTotalDisplay.bind(this);\n    this.toggleValueDisplay = this.toggleValueDisplay.bind(this);\n    this.toggleNodeSize = this.toggleNodeSize.bind(this);\n    this.toggleSpeedMode = this.toggleSpeedMode.bind(this);\n    this.toggleMouseXY = this.toggleMouseXY.bind(this);\n    this.toggleTalentID = this.toggleTalentID.bind(this);\n    this.toggleSelect = this.toggleSelect.bind(this);\n    this.toggleTour = this.toggleTour.bind(this);\n    this.changeCommander = this.changeCommander.bind(this);\n    this.resetTalents = this.resetTalents.bind(this);\n    this.changeTalentValue = this.changeTalentValue.bind(this);\n    this.calcPointsSpent = this.calcPointsSpent.bind(this);\n    this.calcPointsRemaining = this.calcPointsRemaining.bind(this);\n\n    // Set initial state from query string\n    const urlParams = this.props.url.slice(1).split(';');\n\n    switch (urlParams.length) {\n      case 1: // blank url\n        this.state = this.getEmptyState();\n        treeData = loadTreeData(dataVersion);\n        this.updateURL('clear');\n        break;\n      case 5: // complete url\n        let [urlDataVersion, comID, red, yellow, blue] = urlParams;\n        urlDataVersion = parseInt(urlDataVersion);\n\n        const commanderName = Object.keys(Commanders).find(\n          key => Commanders[key]['id'] === comID\n        );\n\n        // Check for invalid build\n        if (urlDataVersion > dataVersion) {\n          this.invalidBuildMessage = 'Incorrect game data version';\n          this.invalidModalFlag = true;\n        } else if (!commanderName) {\n          this.invalidBuildMessage = 'Unknown commander ID';\n          this.invalidModalFlag = true;\n        } else {\n          this.state = this.getEmptyState();\n          treeData = loadTreeData(urlDataVersion);\n          this.state = {\n            ...this.state,\n            dataVersion: urlDataVersion,\n            commander: commanderName,\n            ...this.createZeroTalents(commanderName)\n          };\n\n          const colorPairs = [\n            [red, 'red'],\n            [yellow, 'yellow'],\n            [blue, 'blue']\n          ];\n\n          for (let color of colorPairs) {\n            // Decode and split talent string into array\n            let talents = decode(color[0])\n              .split('')\n              .map(Number);\n            const maxArray = this.createMaxValueArray(\n              this.state.commander,\n              color[1]\n            );\n\n            if (talents.length !== this.state[color[1]].length) {\n              // Check talent array is correct length\n              this.invalidBuildMessage = `Incorrect number of talents (${color[1]} tree)`;\n              this.invalidModalFlag = true;\n              break;\n            } else if (\n              // Check spent values are not too large\n              talents.some(function(el, idx) {\n                return el > maxArray[idx];\n              })\n            ) {\n              this.invalidBuildMessage = `Too many points assigned in talent (${color[1]} tree)`;\n              this.invalidModalFlag = true;\n              break;\n            } else {\n              // Store color array in state\n              this.state[color[1]] = talents;\n\n              // Calculate stats for the color\n              const treeName = getTreeName(color[1], commanderName);\n              for (let i = 0; i < talents.length; i++) {\n                const talentData = treeData[treeName][i + 1];\n                const stat = talentData['stats'];\n\n                if (talents[i] > 0 && stat) {\n                  const multiStat = Array.isArray(stat);\n                  if (multiStat) {\n                    for (let j = 0; j < stat.length; j++) {\n                      this.state.stats[stat[j]] +=\n                        talentData['values'][talents[i] - 1];\n                    }\n                  } else {\n                    this.state.stats[stat] +=\n                      talentData['values'][talents[i] - 1];\n                  }\n                }\n              }\n            }\n          }\n\n          // Check that the talent build has not overspent points\n          if (this.calcPointsRemaining() < 0) {\n            this.invalidBuildMessage = `Number of spent talent points exceeds maximum`;\n            this.invalidModalFlag = true;\n          }\n        }\n\n        if (this.invalidModalFlag) {\n          this.state = this.getEmptyState();\n          treeData = loadTreeData(dataVersion);\n          this.updateURL('clear');\n        } else {\n          this.updateURL('update');\n        }\n        break;\n      default:\n        // Incorrect number of url params\n        this.invalidBuildMessage = `Incorrect number of build parameters (length: ${urlParams.length}, expected: 5)`;\n        this.invalidModalFlag = true;\n        this.state = this.getEmptyState();\n        treeData = loadTreeData(dataVersion);\n        this.updateURL('clear');\n    }\n  }\n\n  /**\n   * Get empty state values for new application instance. Also checks\n   * local storage for saved settings\n   *\n   * @returns {object} Object containing blank state values\n   * @memberof App\n   */\n  getEmptyState() {\n    const isShownInfoPanel = JSON.parse(\n      localStorage.getItem('isShownInfoPanel')\n    );\n    const isShownValues = JSON.parse(localStorage.getItem('isShownValues'));\n    const isShownTotals = JSON.parse(localStorage.getItem('isShownTotals'));\n    const isSpeedMode = JSON.parse(localStorage.getItem('isSpeedMode'));\n    const isShownMouseXY = JSON.parse(localStorage.getItem('isShownMouseXY'));\n    const isShownTalentID = JSON.parse(localStorage.getItem('isShownTalentID'));\n\n    return {\n      dataVersion: dataVersion,\n      commander: '',\n      red: [],\n      yellow: [],\n      blue: [],\n      stats: this.getEmptyStats(),\n      nodeSize: localStorage.getItem('nodeSize') || 'M',\n      isShownInfoPanel: isShownInfoPanel === null ? true : isShownInfoPanel,\n      isShownValues: isShownValues === null ? true : isShownValues,\n      isShownTotals: isShownTotals === null ? true : isShownTotals,\n      isSpeedMode: isSpeedMode === null ? false : isSpeedMode,\n      isShownMouseXY: isShownMouseXY === null ? false : isShownMouseXY,\n      isShownTalentID: isShownTalentID === null ? false : isShownTalentID\n    };\n  }\n\n  /**\n   * Get object containing all stats and set them to 0\n   *\n   * @returns {object} Object containing stats with 0 values\n   * @memberof App\n   */\n  getEmptyStats() {\n    return { Attack: 0, Defense: 0, Health: 0, 'March Speed': 0 };\n  }\n\n  /**\n   * Update the current URL\n   *\n   * @param {string} method {update | clear} Should the new URL be updated\n   * with the new state or cleared (new app state)?\n   * @memberof App\n   */\n  updateURL(method) {\n    let queryString;\n\n    switch (method) {\n      case 'update':\n        queryString =\n          '?' +\n          [\n            this.state.dataVersion,\n            Commanders[this.state.commander].id,\n            encode(this.state.red.join('')),\n            encode(this.state.yellow.join('')),\n            encode(this.state.blue.join(''))\n          ].join(';');\n\n        setTitle(\n          this.state.commander,\n          this.state.red,\n          this.state.yellow,\n          this.state.blue\n        );\n        break;\n      case 'clear':\n        queryString = '/';\n        break;\n      default:\n        break;\n    }\n    window.history.replaceState('', '', queryString);\n  }\n\n  /**\n   * Set blank state object for the newly selected commander,\n   * followed by `this.updateURL()`\n   *\n   * @param {string} commander Name of the commander being changed to\n   * @memberof App\n   */\n  changeCommander(commander) {\n    if (this.state.dataVersion !== dataVersion) {\n      treeData = loadTreeData(dataVersion);\n    }\n\n    const zeroTalents = this.createZeroTalents(commander);\n    this.setState(\n      {\n        dataVersion: dataVersion,\n        commander: commander,\n        ...zeroTalents,\n        stats: this.getEmptyStats()\n      },\n      () => {\n        this.updateURL('update');\n        this.treePanelRef.drawLines();\n\n        ReactGA.event({\n          category: 'Navigation',\n          action: 'Change commander',\n          label: commander\n        });\n      }\n    );\n\n    if (!isTouchDevice()) {\n      this.treePanelRef.resetPanZoom();\n    }\n  }\n\n  /**\n   * Create a new/blank state object for a commander. The individual talent\n   * tree arrays will be filled with an appropriate number of `0`\n   *\n   * @param {string} commander Name of commander to create empty talents for\n   * @returns {object} Object containing `0` arrays for each tree color\n   * @memberof App\n   */\n  createZeroTalents(commander) {\n    const numRed = Object.keys(treeData[Commanders[commander]['red']]).length;\n    const numYellow = Object.keys(treeData[Commanders[commander]['yellow']])\n      .length;\n    const numBlue = Object.keys(treeData[Commanders[commander]['blue']]).length;\n\n    const zeroTalents = {\n      red: Array(numRed).fill(0),\n      yellow: Array(numYellow).fill(0),\n      blue: Array(numBlue).fill(0)\n    };\n\n    return zeroTalents;\n  }\n\n  /**\n   * Set all tree node values to `0` for the currently selected commander\n   *\n   * @memberof App\n   */\n  resetTalents() {\n    ReactGA.event({\n      category: 'App',\n      action: 'Reset build'\n    });\n    this.changeCommander(this.state.commander);\n  }\n\n  /**\n   * Change the value of a single talent node. Followed by `this.updateURL()`\n   *\n   * @param {string} color Color of the tree the node belongs to\n   * @param {number} idx Index of the node in the tree/color array.\n   * @param {number} valueIdx Index of the changed value.\n   * @param {string} how {increase | decrease} Should node value be increased\n   *  or decreased?\n   * @memberof App\n   */\n  changeTalentValue(color, idx, valueIdx, how) {\n    let talent = treeData[Commanders[this.state.commander][color]][idx];\n    let stat = talent['stats'];\n    let multiStat = Array.isArray(stat);\n    let newArr = this.state[color];\n    let newStats = { ...this.state.stats };\n\n    if (how === 'increase') {\n      newArr[idx - 1] += 1;\n\n      // increase stat value\n      if (stat) {\n        if (multiStat) {\n          // multi-stat\n          stat.forEach(curStat => {\n            if (valueIdx === 0) {\n              newStats[curStat] += talent['values'][0];\n            } else {\n              newStats[curStat] +=\n                talent['values'][valueIdx] - talent['values'][valueIdx - 1];\n            }\n          });\n        } else {\n          // single stat\n          if (valueIdx === 0) {\n            newStats[stat] += talent['values'][0];\n          } else {\n            newStats[stat] +=\n              talent['values'][valueIdx] - talent['values'][valueIdx - 1];\n          }\n        }\n      }\n    } else if (how === 'decrease') {\n      newArr[idx - 1] -= 1;\n\n      // decrease stat value\n      if (stat) {\n        if (multiStat) {\n          // multi-stat\n          stat.forEach(curStat => {\n            if (valueIdx <= 1) {\n              newStats[curStat] -= talent['values'][0];\n            } else {\n              newStats[curStat] -=\n                talent['values'][valueIdx - 1] - talent['values'][valueIdx - 2];\n            }\n          });\n        } else {\n          // single stat\n          if (valueIdx <= 1) {\n            newStats[stat] -= talent['values'][0];\n          } else {\n            newStats[stat] -=\n              talent['values'][valueIdx - 1] - talent['values'][valueIdx - 2];\n          }\n        }\n      }\n    }\n\n    this.setState({ [color]: newArr, stats: newStats }, () =>\n      this.updateURL('update')\n    );\n  }\n\n  /**\n   * Get the maximum number of available points for each talent\n   *\n   * @param {string} commander Name of the commander\n   * @param {string} color Color of the tree to get max values for\n   * @returns {Number[]} Array of maximum available points for each talent in the tree\n   * @memberof App\n   */\n  createMaxValueArray(commander, color) {\n    let maxArray = [];\n\n    Object.keys(treeData[Commanders[commander][color]]).forEach(id => {\n      maxArray.push(\n        getMaxTalentCount(treeData[Commanders[commander][color]][id]['values'])\n      );\n    });\n\n    return maxArray;\n  }\n\n  /**\n   * Calculate the total number of talent points spent. This is just a sum\n   * of all the color/tree array values\n   *\n   * @param {string} color Color of the tree to sum. Omitting this param sums\n   * across all trees\n   * @returns {number} Total number of talent points spent\n   * @memberof App\n   */\n  calcPointsSpent(color = 'total') {\n    let points;\n\n    if (color === 'total') {\n      points = [...this.state.red, ...this.state.yellow, ...this.state.blue];\n    } else {\n      points = [...this.state[color]];\n    }\n\n    return sumArray(points);\n  }\n\n  /**\n   * Calculate number of remaining talent points available to be spent\n   *\n   * @returns {number} Number of remaining talent points\n   * @memberof App\n   */\n  calcPointsRemaining() {\n    return maxPoints - this.calcPointsSpent();\n  }\n\n  /**\n   * Toggle display of info panel\n   *\n   * @memberof App\n   */\n  toggleInfoPanel() {\n    this.setState(\n      prevState => ({\n        isShownInfoPanel: !prevState.isShownInfoPanel\n      }),\n      () => {\n        this.treePanelRef.repaint();\n        localStorage.setItem('isShownInfoPanel', this.state.isShownInfoPanel);\n      }\n    );\n\n    ReactGA.event({\n      category: 'Settings',\n      action: 'Toggle info panel'\n    });\n  }\n\n  /**\n   * Toggle display of total number of points spent in each tree\n   *\n   * @memberof App\n   */\n  toggleTotalDisplay() {\n    this.setState(\n      prevState => ({\n        isShownTotals: !prevState.isShownTotals\n      }),\n      () => {\n        localStorage.setItem('isShownTotals', this.state.isShownTotals);\n      }\n    );\n\n    ReactGA.event({\n      category: 'Settings',\n      action: 'Toggle tree totals'\n    });\n  }\n\n  /**\n   * Toggle display of node values\n   *\n   * @memberof App\n   */\n  toggleValueDisplay() {\n    this.setState(\n      prevState => ({\n        isShownValues: !prevState.isShownValues\n      }),\n      () => {\n        localStorage.setItem('isShownValues', this.state.isShownValues);\n      }\n    );\n\n    ReactGA.event({\n      category: 'Settings',\n      action: 'Toggle node values'\n    });\n  }\n\n  /**\n   * Toggle node size\n   *\n   * @param {string} size Desired node size\n   * @memberof App\n   */\n  toggleNodeSize(size) {\n    this.setState({ nodeSize: size }, () => {\n      this.treePanelRef.repaint();\n      localStorage.setItem('nodeSize', this.state.nodeSize);\n    });\n\n    ReactGA.event({\n      category: 'Settings',\n      action: 'Toggle node size',\n      label: size\n    });\n  }\n\n  /**\n   * Toggle speed mode\n   *\n   * @memberof App\n   */\n  toggleSpeedMode() {\n    this.setState(\n      prevState => ({\n        isSpeedMode: !prevState.isSpeedMode\n      }),\n      () => {\n        this.treePanelRef.drawLines();\n        localStorage.setItem('isSpeedMode', this.state.isSpeedMode);\n      }\n    );\n\n    ReactGA.event({\n      category: 'Settings',\n      action: 'Toggle speed mode'\n    });\n  }\n\n  /**\n   * Toggle mouse XY position display\n   *\n   * @memberof App\n   */\n  toggleMouseXY() {\n    this.setState(\n      prevState => ({\n        isShownMouseXY: !prevState.isShownMouseXY\n      }),\n      () => {\n        this.treePanelRef.toggleMouseListeners();\n        localStorage.setItem('isShownMouseXY', this.state.isShownMouseXY);\n      }\n    );\n  }\n\n  /**\n   * Toggle tooltip talent ID\n   *\n   * @memberof App\n   */\n  toggleTalentID() {\n    this.setState(\n      prevState => ({\n        isShownTalentID: !prevState.isShownTalentID\n      }),\n      () => {\n        localStorage.setItem('isShownTalentID', this.state.isShownTalentID);\n      }\n    );\n  }\n\n  /**\n   * Toggle commander select dropdown. Uses a ref to the navbar\n   *\n   * @memberof App\n   */\n  toggleSelect() {\n    this.navBarRef.toggleSelect();\n  }\n\n  /**\n   * Toggle guided tour\n   *\n   * @memberof App\n   */\n  toggleTour() {\n    this.tourRef.restartTour();\n  }\n\n  render() {\n    return (\n      <div id=\"app\">\n        <GuidedTour ref={component => (this.tourRef = component)} />\n\n        {this.invalidModalFlag && (\n          <InvalidBuildModal message={this.invalidBuildMessage} />\n        )}\n\n        <ErrorBoundary>\n          <NavBar\n            ref={component => (this.navBarRef = component)}\n            toggleInfoPanel={this.toggleInfoPanel}\n            toggleTotalDisplay={this.toggleTotalDisplay}\n            toggleValueDisplay={this.toggleValueDisplay}\n            toggleNodeSize={this.toggleNodeSize}\n            toggleSpeedMode={this.toggleSpeedMode}\n            toggleMouseXY={this.toggleMouseXY}\n            toggleTalentID={this.toggleTalentID}\n            toggleTour={this.toggleTour}\n            changeCommander={this.changeCommander}\n            calcPointsSpent={this.calcPointsSpent}\n            resetTalents={this.resetTalents}\n            commander={this.state.commander}\n            nodeSize={this.state.nodeSize}\n            isShownInfoPanel={this.state.isShownInfoPanel}\n            isShownValues={this.state.isShownValues}\n            isShownTotals={this.state.isShownTotals}\n            isSpeedMode={this.state.isSpeedMode}\n            isShownMouseXY={this.state.isShownMouseXY}\n            isShownTalentID={this.state.isShownTalentID}\n          />\n        </ErrorBoundary>\n\n        <div id=\"main-container\">\n          <Suspense\n            fallback={\n              <div id=\"spinner\">\n                <Spinner size=\"lg\" animation=\"border\" variant=\"light\" />\n                <br />\n                <span className=\"sr-only\">Loading...</span>\n              </div>\n            }\n          >\n            <ErrorBoundary>\n              <InfoPanel\n                ref={component => (this.infoPanelRef = component)}\n                calcPointsSpent={this.calcPointsSpent}\n                calcPointsRemaining={this.calcPointsRemaining}\n                treeData={treeData}\n                commander={this.state.commander}\n                red={this.state.red}\n                yellow={this.state.yellow}\n                blue={this.state.blue}\n                stats={this.state.stats}\n                isShownInfoPanel={this.state.isShownInfoPanel}\n              />\n            </ErrorBoundary>\n\n            <ErrorBoundary>\n              <TreePanel\n                ref={component => (this.treePanelRef = component)}\n                toggleSelect={this.toggleSelect}\n                changeCommander={this.changeCommander}\n                resetTalents={this.resetTalents}\n                changeTalentValue={this.changeTalentValue}\n                calcPointsSpent={this.calcPointsSpent}\n                calcPointsRemaining={this.calcPointsRemaining}\n                treeData={treeData}\n                dataVersion={this.state.dataVersion}\n                commander={this.state.commander}\n                red={this.state.red}\n                yellow={this.state.yellow}\n                blue={this.state.blue}\n                nodeSize={this.state.nodeSize}\n                isShownValues={this.state.isShownValues}\n                isShownTotals={this.state.isShownTotals}\n                isSpeedMode={this.state.isSpeedMode}\n                isShownMouseXY={this.state.isShownMouseXY}\n                isShownTalentID={this.state.isShownTalentID}\n              />\n            </ErrorBoundary>\n          </Suspense>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport ReactGA from 'react-ga';\nimport * as serviceWorker from './serviceWorker';\nimport App from './App';\n\nReactGA.initialize('UA-114296077-2');\nReactGA.pageview('/');\n\nconst url = window.location.search;\nReactDOM.render(<App url={url} />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React, { Component } from 'react';\n\nclass ErrorBoundary extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { error: null, errorInfo: null };\n  }\n\n  componentDidCatch(error, errorInfo) {\n    // Catch errors in any components below and re-render with error\n    this.setState({\n      error: error,\n      errorInfo: errorInfo\n    });\n  }\n\n  render() {\n    if (this.state.errorInfo) {\n      // Error path\n      return (\n        <div>\n          <h3>Something broke!</h3>\n          <details style={{ whiteSpace: 'pre-wrap' }}>\n            {this.state.error && this.state.error.toString()}\n            <br />\n            {this.state.errorInfo.componentStack}\n          </details>\n        </div>\n      );\n    }\n\n    return this.props.children;\n  }\n}\n\nexport default ErrorBoundary;\n","/** Maximum number of talent points available in the game */\nexport const maxPoints = 74;\n\n// Max width of mobile/tablet devices (px)\nexport const mobileBreakpoint = 1280;\n\n/** Mapping value pairs to letters for encoding */\nexport const valuesToLetters = {\n  '00': 'a',\n  '01': 'b',\n  '02': 'c',\n  '03': 'd',\n  '04': 'e',\n  '10': 'f',\n  '11': 'g',\n  '12': 'h',\n  '13': 'i',\n  '14': 'j',\n  '20': 'k',\n  '21': 'l',\n  '22': 'm',\n  '23': 'n',\n  '24': 'o',\n  '30': 'p',\n  '31': 'q',\n  '32': 'r',\n  '33': 's',\n  '34': 't',\n  '35': 'u',\n  '40': 'v',\n  '41': 'w',\n  '42': 'x',\n  '43': 'y',\n  '44': 'z'\n};\n\n/** Mapping letters to value pairs for decoding */\nexport const lettersToValues = {\n  a: '00',\n  b: '01',\n  c: '02',\n  d: '03',\n  e: '04',\n  f: '10',\n  g: '11',\n  h: '12',\n  i: '13',\n  j: '14',\n  k: '20',\n  l: '21',\n  m: '22',\n  n: '23',\n  o: '24',\n  p: '30',\n  q: '31',\n  r: '32',\n  s: '33',\n  t: '34',\n  u: '35',\n  v: '40',\n  w: '41',\n  x: '42',\n  y: '43',\n  z: '44'\n};\n"],"sourceRoot":""}