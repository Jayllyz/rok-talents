{"version":3,"sources":["utils.js","values.js","Error.js","announcements lazy /^/.//.*$/ groupOptions: {} namespace object","data sync /^/.//v.*//Attack/.json$","data sync /^/.//v.*//Archer/.json$","data sync /^/.//v.*//Cavalry/.json$","data sync /^/.//v.*//Conquering/.json$","data sync /^/.//v.*//Defense/.json$","data sync /^/.//v.*//Garrison/.json$","data sync /^/.//v.*//Gathering/.json$","data sync /^/.//v.*//Infantry/.json$","data sync /^/.//v.*//Integration/.json$","data sync /^/.//v.*//Leadership/.json$","data sync /^/.//v.*//Mobility/.json$","data sync /^/.//v.*//Peacekeeping/.json$","data sync /^/.//v.*//Skill/.json$","data sync /^/.//v.*//Support/.json$","data sync /^/.//v.*//Versatility/.json$","serviceWorker.js","Progress.js","GuidedTour.js","NavBarButtons.js","Tooltips.js","NavBarSettings.js","NavBarCommander.js","Modals.js","NavBar.js","SummaryPanel.js","StatsPanel.js","StatsTalentsPanel.js","InfoPanel.js","data/AllTrees.js","App.js","index.js"],"names":["sumArray","arr","reduce","partial","a","isMultidimensional","filter","Array","isArray","length","getMaxTalentCount","talentValues","replaceTalentText","text","replacementIdx","newText","i","re","RegExp","replace","getTreeName","color","commander","commanderData","Commanders","getIncompletePrereqs","id","values","treeData","acc","prereq","push","setTitle","r","y","b","sep","newTitle","createSummaryString","title","document","rSpent","ySpent","bSpent","name","shortName","getURL","embed","window","location","origin","search","isEmbed","path","includes","isTouchDevice","matchMedia","matches","isNewUser","localStorage","getItem","JSON","parse","isUpgrade","oldVer","newVer","split","map","Number","oldMajor","oldMinor","newMajor","newMinor","encode","match","v","valuesToLetters","hasOwnProperty","join","decode","encoded","k","lettersToValues","maxPoints","getEmptyState","dataVersion","storage","nodeSize","isShownInfoPanel","isShownValues","isShownTotals","isScreenshotStats","isSpeedMode","isInstantZero","isInstantMax","isAutoFill","isShownMouseXY","isShownTalentID","showProgress","red","yellow","blue","c","d","e","f","g","h","j","l","m","n","o","p","q","s","t","u","w","x","z","ErrorBoundary","props","state","error","errorInfo","this","setState","style","whiteSpace","toString","componentStack","children","Component","webpackAsyncContext","req","__webpack_require__","Promise","resolve","then","Error","code","ids","keys","Object","module","exports","webpackContext","webpackContextResolve","Boolean","hostname","Container","isFinished","animationDuration","opacity","pointerEvents","transition","Bar","progress","background","height","left","marginLeft","position","top","width","zIndex","boxShadow","display","right","transform","withNProgress","GuidedTour","restartTour","run","stepIndex","handleJoyrideCallback","data","action","index","status","type","STATUS","FINISHED","SKIPPED","ACTIONS","CLOSE","EVENTS","STEP_AFTER","TARGET_NOT_FOUND","PREV","steps","content","target","placement","disableBeacon","locale","last","callback","continuous","showSkipButton","disableOverlayClose","styles","options","primaryColor","overlayColor","NavBarButtons","useState","isDownloading","setIsDownloading","className","data-testid","disabled","calcPointsSpent","onClick","showReset","icon","faTrashAlt","elementID","addBanner","ReactGA","event","category","label","dpr","devicePixelRatio","node","getElementById","visibility","domtoimage","toJpeg","offsetHeight","offsetWidth","transformOrigin","dataUrl","link","createElement","href","download","click","takeScreenshot","Spinner","size","animation","variant","faCamera","showShare","faShareAlt","HelpTooltip","OverlayTrigger","flip","trigger","overlay","Tooltip","tooltip","faQuestionCircle","GeneralTooltip","NavBarSettings","Dropdown","alignRight","as","NavItem","Toggle","NavLink","faCog","Menu","Form","Group","Header","Check","checked","onChange","toggleInfoPanel","toggleValueDisplay","toggleTotalDisplay","Divider","ToggleButtonGroup","value","val","toggleNodeSize","ToggleButton","toggleScreenshotStats","toggleSpeedMode","toggleInstantZero","toggleInstantMax","toggleAutoFill","process","NavBarCommander","toggleSelect","prevState","isOpen","createSelectItems","commanderList","sort","legendaryCommanders","epicCommanders","forEach","selectItem","Item","key","changeCommander","alt","src","tier","nextProps","nextState","show","onToggle","InvalidBuildModal","toggle","modal","Modal","centered","onHide","closeButton","faExclamationTriangle","Body","message","Footer","Button","AnnouncementModal","version","isInvalidBuild","semVerValues","React","lazy","getFilenameFromVersion","Announcement","loadAnnouncement","faBullhorn","fallback","bugs","url","rel","faInfoCircle","AboutModal","showAnnouncement","toggleAnnounce","getContributors","contributors","showDonate","Tabs","defaultActiveKey","Tab","eventKey","author","toggleTour","ResetModal","resetTalents","ShareModal","copyURL","input","readOnly","select","execCommand","innerHTML","copyEmbedURL","shareSocial","faLink","defaultValue","faCopy","EmailShareButton","EmailIcon","round","RedditShareButton","RedditIcon","TwitterShareButton","TwitterIcon","WeiboShareButton","WeiboIcon","WhatsappShareButton","WhatsappIcon","PocketShareButton","PocketIcon","faCode","rows","NavBar","showAbout","aboutModalRef","resetModalRef","shareModalRef","ref","component","Navbar","Brand","minDeviceWidth","cursor","Nav","toggleMouseXY","toggleTalentID","GuideIcon","memo","guides","SummaryPanel","guide","getGuides","calcPointsRemaining","StatsPanel","allStats","stats","getAllStats","MainTalent","points","Collapse","in","isShownStatsTalents","StatsTalentsPanel","toggleStatsTalents","getAllMainTalents","allMainTalents","mainTalents","talent","InfoPanel","talentData","selectedValues","pointsAssigned","statName","calcStats","orientation","loadTreeData","Attack","require","Archer","Cavalry","Conquering","Defense","Garrison","Gathering","Infantry","Integration","Leadership","Mobility","Peacekeeping","Skill","Support","Versatility","TreePanel","App","updateURL","method","queryString","history","replaceState","zeroTalents","createZeroTalents","treePanelRef","drawLines","resetPanZoom","numRed","numYellow","numBlue","fill","changeTalentValue","treeName","idx","how","amount","newArr","lines","jsPlumb","source","addClass","removeClass","createMaxValueArray","maxArray","repaint","setItem","toggleMouseListeners","tourRef","announceRef","invalidModalFlag","invalidBuildMessage","urlParams","slice","urlDataVersion","comID","parseInt","commanderName","find","talents","some","el","isAnimating","self","initialize","pageview","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister","homepage"],"mappings":"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","file":"static/js/main.31b08734.chunk.js","sourcesContent":["import { valuesToLetters, lettersToValues } from './values';\nimport Commanders from './data/commanders.json';\nimport { title } from '../package.json';\n\n/**\n * Sum all values of an array\n *\n * @param {Number[]} arr Array to calculate sum of\n * @returns {Number} Sum of the array\n */\nexport function sumArray(arr) {\n  return arr.reduce((partial, a) => partial + a, 0);\n}\n\n/**\n * Check if two arrays are equal\n *\n * @param {array} a First array\n * @param {array} b Second array\n * @returns {boolean} Are the two arrays equal?\n */\nexport function arraysEqual(a, b) {\n  if (a === b) return true;\n  if (a == null || b == null) return false;\n  // eslint-disable-next-line\n  if (a.length != b.length) return false;\n\n  for (var i = 0; i < a.length; ++i) {\n    if (a[i] !== b[i]) return false;\n  }\n  return true;\n}\n\n/**\n * Check if all array elements are different/unique\n *\n * @param {Array} arr Array to check\n * @returns {Boolean} Whether all elements are different/unique\n */\nexport function arrayAllUnique(arr) {\n  const tmp = new Set(arr);\n  if (tmp.size === arr.length) {\n    return true;\n  }\n  return false;\n}\n\n/**\n * Check if array is nested/multidimensional\n *\n * @param {Array} arr array to check for nesting\n * @returns {Boolean} Boolean indicating whether array is multidimensional\n */\nexport function isMultidimensional(arr) {\n  return arr.filter(Array.isArray).length !== 0;\n}\n\n/**\n * Get maximum number of spendable points for a talent\n *\n * @param {Array} talentValues array of values for a given talent\n * @returns {Number} Number of maximum spendable points\n */\nexport function getMaxTalentCount(talentValues) {\n  let max;\n  if (!isMultidimensional(talentValues)) {\n    max = talentValues.length;\n  } else {\n    // All multidimensional arrays should be same length (checked by unit test)\n    max = talentValues[0].length;\n  }\n  return max;\n}\n\n/**\n * Replace talent text placeholders (e.g. `${1}`) with selected values\n *\n * @param {string} text Full talent text\n * @param {Array} talentValues Array (or multidimensional array) of values for the talent\n * @param {Number} replacementIdx Index of the value to use as replacement\n * @returns {string} Talent text with placeholders replaced\n */\nexport function replaceTalentText(text, talentValues, replacementIdx) {\n  let newText = text;\n\n  if (isMultidimensional(talentValues)) {\n    for (let i = 0; i < talentValues.length; i++) {\n      let re = new RegExp(`\\\\$\\\\{${i + 1}\\\\}`, 'g');\n      newText = newText.replace(re, talentValues[i][replacementIdx]);\n    }\n  } else {\n    newText = newText.replace(/\\$\\{1\\}/g, talentValues[replacementIdx]);\n  }\n\n  return newText;\n}\n\n/**\n * Get the full name of a talent tree (e.g. Skill, Garrison). The name\n * depends on the tree color and the selected commander\n *\n * @param {string} color Color of the tree to retrieve the name for\n * @param {string} commander Name of the commander\n * @returns {string} full tree name\n */\nexport function getTreeName(color, commander) {\n  const commanderData = Commanders[commander];\n  if (commanderData) {\n    return commanderData[color];\n  }\n}\n\n/**\n * Recursively find all incomplete prereqs for a talent node\n *\n * @param {Number} id ID of the talent node\n * @param {Number[]} values Array of selected values for the tree\n * @param {Object} treeData Full data for the talent tree of interest\n * @param {Array} acc Accumulator for all prereq talent IDs\n * @returns {Array} Array of IDs for all prereq talents\n */\nexport function getIncompletePrereqs(id, values, treeData, acc) {\n  for (let prereq of treeData[id].prereq) {\n    const nodeValue = values[prereq - 1];\n    const nodeMax = getMaxTalentCount(treeData[prereq].values);\n    if (nodeValue < nodeMax) {\n      acc.push(prereq);\n    }\n    getIncompletePrereqs(prereq, values, treeData, acc);\n  }\n  return acc;\n}\n\n/**\n * Set the window title with commander name and talents spent in each tree\n *\n * @param {string} commander Full name of the commander\n * @param {Number[]} r Array of red tree values\n * @param {Number[]} y Array of yellow tree values\n * @param {Number[]} b Array of blue tree values\n * @param {string} [sep='/'] Separator to use between point totals\n */\nexport function setTitle(commander, r, y, b, sep = '/') {\n  const newTitle = `${createSummaryString(commander, r, y, b, sep)} | ${title}`;\n  document.title = newTitle;\n}\n\n/**\n * Create a string with commander name and talents spent in each tree\n *\n * @param {string} commander Full name of the commander\n * @param {Number[]} r Array of red tree values\n * @param {Number[]} y Array of yellow tree values\n * @param {Number[]} b Array of blue tree values\n * @param {string} [sep='/'] Separator to use between point totals\n * @returns {string} String summarizing the commander and points spent\n */\nexport function createSummaryString(commander, r, y, b, sep = '/') {\n  const rSpent = sumArray(r);\n  const ySpent = sumArray(y);\n  const bSpent = sumArray(b);\n  const name = Commanders[commander].shortName || commander;\n  return `${name} (${rSpent}${sep}${ySpent}${sep}${bSpent})`;\n}\n\n/**\n * Get current talent URL\n *\n * @param {Boolean} embed Should returned URL be embeddable?\n * @returns {String} Current/embeddable URL\n */\nexport function getURL(embed = false) {\n  if (embed) {\n    return `${window.location.origin}/${window.location.search.replace(\n      '?',\n      '?embed;'\n    )}`;\n  } else {\n    if (isEmbed(window.location.search)) {\n      return `${window.location.origin}/${window.location.search.replace(\n        '?embed;',\n        '?'\n      )}`;\n    } else {\n      return `${window.location.origin}/${window.location.search}`;\n    }\n  }\n}\n\n/**\n * Check whether app is launched in embed mode\n *\n * @param {String} path URL path to check for embed\n * @returns {Boolean} Whether URL path contains an embed directive\n */\nexport function isEmbed(path) {\n  return path.includes('embed') ? true : false;\n}\n\n/**\n * Detect if device is touch enabled\n *\n * @returns {Boolean} Whether device is touch or not\n */\nexport function isTouchDevice() {\n  if (window.matchMedia('(pointer: coarse)').matches) {\n    return true;\n  } else {\n    return false;\n  }\n}\n\n/**\n * Check whether user is new or returning\n *\n * @returns {Boolean} Whether user is new or returning\n */\nexport function isNewUser() {\n  if (\n    !localStorage.getItem('isNewUser') ||\n    JSON.parse(localStorage.getItem('isNewUser') === true)\n  ) {\n    return true;\n  } else {\n    return false;\n  }\n}\n\n/**\n * Check whether release is an upgrade. Ignores hotfix/patch releases\n *\n * @param {String} oldVer SemVer string of old version\n * @param {String} newVer SemVer string of new version\n * @returns {Boolean} Whether newVer is an upgrade\n */\nexport function isUpgrade(oldVer, newVer) {\n  // New users are never considered upgrades\n  if (isNewUser()) {\n    return false;\n  }\n\n  const [oldMajor, oldMinor] = oldVer.split('.').map(Number);\n  const [newMajor, newMinor] = newVer.split('.').map(Number);\n\n  if (newMajor > oldMajor || newMinor > oldMinor) {\n    return true;\n  } else {\n    return false;\n  }\n}\n\n/**\n * Encode/compress the passed text\n *\n * @param {string} text Text to be encoded/compressed\n * @returns {string} Encoded/compressed version of the text\n */\nexport function encode(text) {\n  const encoded = text\n    .match(/(..?)/g)\n    .map(v => {\n      return valuesToLetters.hasOwnProperty(v) ? valuesToLetters[v] : v;\n    })\n    .join('');\n\n  return encoded;\n}\n\n/**\n * Decode encoded text\n *\n * @param {string} encoded Encoded form of the text\n * @returns {string} Decoded string\n */\nexport function decode(encoded) {\n  const decoded = encoded\n    .split('')\n    .map(k => {\n      return lettersToValues.hasOwnProperty(k) ? lettersToValues[k] : k;\n    })\n    .join('');\n\n  return decoded;\n}\n\nexport default {\n  sumArray,\n  arraysEqual,\n  arrayAllUnique,\n  isMultidimensional,\n  getMaxTalentCount,\n  replaceTalentText,\n  setTitle,\n  createSummaryString,\n  getURL,\n  isEmbed,\n  isTouchDevice,\n  isNewUser,\n  isUpgrade,\n  encode,\n  decode\n};\n","/** Maximum number of talent points available in the game */\nexport const maxPoints = 74;\n\n/**\n * Get default state values for new application instance. Also checks\n * local storage for saved settings values\n *\n * @param {Number} dataVersion Data version number to use\n * @param {Boolean} isEmbed Is app in embed mode?\n * @returns {object} Object containing blank state values\n */\nexport function getEmptyState(dataVersion, isEmbed) {\n  let storage;\n\n  if (isEmbed) {\n    // Set default settings for embedded mode\n    storage = {\n      nodeSize: 'L',\n      isShownInfoPanel: false,\n      isShownValues: true,\n      isShownTotals: true,\n      isScreenshotStats: false,\n      isSpeedMode: false,\n      isInstantZero: false,\n      isInstantMax: false,\n      isAutoFill: false,\n      isShownMouseXY: false,\n      isShownTalentID: false\n    };\n  } else {\n    // Get/set default settings for regular mode\n    const isShownInfoPanel = JSON.parse(\n      localStorage.getItem('isShownInfoPanel')\n    );\n    const isShownValues = JSON.parse(localStorage.getItem('isShownValues'));\n    const isShownTotals = JSON.parse(localStorage.getItem('isShownTotals'));\n    const isScreenshotStats = JSON.parse(\n      localStorage.getItem('isScreenshotStats')\n    );\n    const isSpeedMode = JSON.parse(localStorage.getItem('isSpeedMode'));\n    const isInstantZero = JSON.parse(localStorage.getItem('isInstantZero'));\n    const isInstantMax = JSON.parse(localStorage.getItem('isInstantMax'));\n    const isAutoFill = JSON.parse(localStorage.getItem('isAutoFill'));\n    const isShownMouseXY = JSON.parse(localStorage.getItem('isShownMouseXY'));\n    const isShownTalentID = JSON.parse(localStorage.getItem('isShownTalentID'));\n\n    // Default values\n    storage = {\n      nodeSize: localStorage.getItem('nodeSize') || 'M',\n      isShownInfoPanel: isShownInfoPanel === null ? true : isShownInfoPanel,\n      isShownValues: isShownValues === null ? true : isShownValues,\n      isShownTotals: isShownTotals === null ? true : isShownTotals,\n      isScreenshotStats: isScreenshotStats === null ? false : isScreenshotStats,\n      isSpeedMode: isSpeedMode === null ? false : isSpeedMode,\n      isInstantZero: isInstantZero === null ? false : isInstantZero,\n      isInstantMax: isInstantMax === null ? false : isInstantMax,\n      isAutoFill: isAutoFill === null ? false : isAutoFill,\n      isShownMouseXY: isShownMouseXY === null ? false : isShownMouseXY,\n      isShownTalentID: isShownTalentID === null ? false : isShownTalentID\n    };\n  }\n\n  return {\n    showProgress: true,\n    dataVersion: dataVersion,\n    commander: '',\n    red: [],\n    yellow: [],\n    blue: [],\n    ...storage\n  };\n}\n\n/** Mapping value pairs to letters for encoding */\nexport const valuesToLetters = {\n  '00': 'a',\n  '01': 'b',\n  '02': 'c',\n  '03': 'd',\n  '04': 'e',\n  '10': 'f',\n  '11': 'g',\n  '12': 'h',\n  '13': 'i',\n  '14': 'j',\n  '20': 'k',\n  '21': 'l',\n  '22': 'm',\n  '23': 'n',\n  '24': 'o',\n  '30': 'p',\n  '31': 'q',\n  '32': 'r',\n  '33': 's',\n  '34': 't',\n  '35': 'u',\n  '40': 'v',\n  '41': 'w',\n  '42': 'x',\n  '43': 'y',\n  '44': 'z'\n};\n\n/** Mapping letters to value pairs for decoding */\nexport const lettersToValues = {\n  a: '00',\n  b: '01',\n  c: '02',\n  d: '03',\n  e: '04',\n  f: '10',\n  g: '11',\n  h: '12',\n  i: '13',\n  j: '14',\n  k: '20',\n  l: '21',\n  m: '22',\n  n: '23',\n  o: '24',\n  p: '30',\n  q: '31',\n  r: '32',\n  s: '33',\n  t: '34',\n  u: '35',\n  v: '40',\n  w: '41',\n  x: '42',\n  y: '43',\n  z: '44'\n};\n","import React, { Component } from 'react';\n\nclass ErrorBoundary extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { error: null, errorInfo: null };\n  }\n\n  componentDidCatch(error, errorInfo) {\n    // Catch errors in any components below and re-render with error\n    this.setState({\n      error: error,\n      errorInfo: errorInfo\n    });\n  }\n\n  render() {\n    if (this.state.errorInfo) {\n      // Error path\n      return (\n        <div>\n          <h3>Something broke!</h3>\n          <details style={{ whiteSpace: 'pre-wrap' }}>\n            {this.state.error && this.state.error.toString()}\n            <br />\n            {this.state.errorInfo.componentStack}\n          </details>\n        </div>\n      );\n    }\n\n    return this.props.children;\n  }\n}\n\nexport default ErrorBoundary;\n","var map = {\n\t\"./1_2\": [\n\t\t104,\n\t\t0\n\t],\n\t\"./1_2.js\": [\n\t\t104,\n\t\t0\n\t],\n\t\"./1_3\": [\n\t\t105,\n\t\t1\n\t],\n\t\"./1_3.js\": [\n\t\t105,\n\t\t1\n\t],\n\t\"./1_4\": [\n\t\t106,\n\t\t2\n\t],\n\t\"./1_4.js\": [\n\t\t106,\n\t\t2\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 127;\nmodule.exports = webpackAsyncContext;","var map = {\n\t\"./v1/Attack.json\": 137\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 136;","var map = {\n\t\"./v1/Archer.json\": 139\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 138;","var map = {\n\t\"./v1/Cavalry.json\": 141\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 140;","var map = {\n\t\"./v1/Conquering.json\": 143\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 142;","var map = {\n\t\"./v1/Defense.json\": 145\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 144;","var map = {\n\t\"./v1/Garrison.json\": 147\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 146;","var map = {\n\t\"./v1/Gathering.json\": 149\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 148;","var map = {\n\t\"./v1/Infantry.json\": 151\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 150;","var map = {\n\t\"./v1/Integration.json\": 153\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 152;","var map = {\n\t\"./v1/Leadership.json\": 155\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 154;","var map = {\n\t\"./v1/Mobility.json\": 157\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 156;","var map = {\n\t\"./v1/Peacekeeping.json\": 159\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 158;","var map = {\n\t\"./v1/Skill.json\": 161\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 160;","var map = {\n\t\"./v1/Support.json\": 163\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 162;","var map = {\n\t\"./v1/Versatility.json\": 165\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 164;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport { withNProgress } from '@tanem/react-nprogress';\n\nconst Progress = ({ isFinished, progress, animationDuration }) => (\n  <Container isFinished={isFinished} animationDuration={animationDuration}>\n    <Bar progress={progress} animationDuration={animationDuration} />\n  </Container>\n);\n\nconst Container = ({ children, isFinished, animationDuration }) => (\n  <div\n    style={{\n      opacity: isFinished ? 0 : 1,\n      pointerEvents: 'none',\n      transition: `opacity ${animationDuration}ms linear`\n    }}\n  >\n    {children}\n  </div>\n);\n\nconst Bar = ({ progress, animationDuration }) => (\n  <div\n    style={{\n      background: '#29d',\n      height: 2,\n      left: 0,\n      marginLeft: `${(-1 + progress) * 100}%`,\n      position: 'fixed',\n      top: 0,\n      transition: `margin-left ${animationDuration}ms linear`,\n      width: '100%',\n      zIndex: 1031\n    }}\n  >\n    <div\n      style={{\n        boxShadow: '0 0 10px #29d, 0 0 5px #29d',\n        display: 'block',\n        height: '100%',\n        opacity: 1,\n        position: 'absolute',\n        right: 0,\n        transform: 'rotate(3deg) translate(0px, -4px)',\n        width: 100\n      }}\n    />\n  </div>\n);\n\nexport default withNProgress(Progress);\n","import React, { Component } from 'react';\nimport Joyride, { ACTIONS, EVENTS, STATUS } from 'react-joyride';\nimport { isNewUser } from './utils';\n\n/**\n * Component containing the guided tour for app onboarding\n *\n * @class GuidedTour\n * @extends {Component}\n */\nclass GuidedTour extends Component {\n  constructor(props: Props) {\n    super(props);\n\n    this.state = {\n      run: isNewUser() ? true : false,\n      stepIndex: 0,\n      steps: [\n        {\n          content: 'Select your commander using this dropdown',\n          target: '#select-commander',\n          placement: 'auto',\n          disableBeacon: true\n        },\n        {\n          content:\n            'View guides for the selected commander and check the number of points you have left to spend',\n          target: '#summary-panel',\n          placement: 'auto'\n        },\n        {\n          content: 'Check various stats given by your talent build',\n          target: '#stats-panel',\n          placement: 'auto'\n        },\n        {\n          content:\n            'Reset your talent build. This will delete all assigned talent points',\n          target: '#button-reset',\n          placement: 'auto'\n        },\n        {\n          content:\n            'Save a screenshot of your current talent build. No need to settle for those blurry in-game screenshots anymore!',\n          target: '#button-screenshot',\n          placement: 'auto'\n        },\n        {\n          content:\n            'Talent builds can be shared with a link. Click this to get your shareable link, or simply copy your current URL',\n          target: '#button-share',\n          placement: 'auto'\n        },\n        {\n          content:\n            'Change display settings, or activate additional functionality like Speed Mode',\n          target: '#select-settings'\n        },\n        {\n          content:\n            'Get additional info about the app. You can also restart the guided tour here',\n          target: '#nav-icon',\n          locale: { last: 'Finish' }\n        }\n      ]\n    };\n  }\n\n  /**\n   * Restart the guided tour by resetting the current tour step\n   *\n   * @memberof GuidedTour\n   */\n  restartTour = () => {\n    this.setState({\n      run: true,\n      stepIndex: 0\n    });\n  };\n\n  /**\n   * Handle tour events (next step, tour close etc)\n   *\n   * @memberof GuidedTour\n   */\n  handleJoyrideCallback = data => {\n    const { action, index, status, type } = data;\n\n    if ([STATUS.FINISHED, STATUS.SKIPPED].includes(status)) {\n      // Need to set our running state to false, so we can restart if we click start again.\n      this.setState({ run: false, stepIndex: 0 });\n    } else if (action === ACTIONS.CLOSE) {\n      this.setState({ run: false, stepIndex: 0 });\n    } else if (type === EVENTS.STEP_AFTER || type === EVENTS.TARGET_NOT_FOUND) {\n      // Update state to advance the tour\n      this.setState({ stepIndex: index + (action === ACTIONS.PREV ? -1 : 1) });\n    }\n  };\n\n  render() {\n    return (\n      <Joyride\n        run={this.state.run}\n        callback={this.handleJoyrideCallback}\n        stepIndex={this.state.stepIndex}\n        steps={this.state.steps}\n        continuous={true}\n        showProgress={true}\n        showSkipButton={false}\n        disableOverlayClose={true}\n        styles={{\n          options: {\n            primaryColor: 'var(--color-highlight)',\n            overlayColor: 'rgba(0, 0, 0, 0.6)'\n          }\n        }}\n      />\n    );\n  }\n}\n\nexport default GuidedTour;\n","import React, { useState } from 'react';\nimport ReactGA from 'react-ga';\nimport Spinner from 'react-bootstrap/Spinner';\nimport domtoimage from 'dom-to-image';\nimport {\n  faTrashAlt,\n  faCamera,\n  faShareAlt\n} from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { createSummaryString } from './utils';\n\nimport './styles/NavBarButtons.css';\n\n/**\n * Nav bar component containing main buttons\n *\n */\nconst NavBarButtons = props => {\n  const [isDownloading, setIsDownloading] = useState(false);\n\n  /**\n   * Take a screenshot of the talent tree, add banner, and download\n   *\n   * @param {boolean} [addBanner=true] Should a logo/banner be rendered?\n   * @memberof NavBarButtons\n   */\n  const takeScreenshot = (elementID, addBanner = true) => {\n    ReactGA.event({\n      category: 'App',\n      action: 'Screenshot',\n      label: props.commander\n    });\n\n    setIsDownloading(true);\n    const dpr = window.devicePixelRatio || 1;\n    const node = document.getElementById(elementID);\n\n    if (addBanner) {\n      document.getElementById('banner').style.visibility = 'visible';\n    }\n\n    domtoimage\n      .toJpeg(node, {\n        height: node.offsetHeight * dpr,\n        width: node.offsetWidth * dpr,\n        style: {\n          transform: 'scale(' + dpr + ')',\n          transformOrigin: 'top left',\n          width: node.offsetWidth + 'px',\n          height: node.offsetHeight + 'px'\n        }\n      })\n      .then(dataUrl => {\n        const link = document.createElement('a');\n        link.href = dataUrl;\n        link.download = `${createSummaryString(\n          props.commander,\n          props.red,\n          props.yellow,\n          props.blue,\n          '-'\n        )}.jpeg`;\n        link.click();\n\n        document.getElementById('banner').style.visibility = 'hidden';\n        setIsDownloading(false);\n      });\n  };\n\n  return (\n    <form className=\"form-inline\">\n      <button\n        id=\"button-reset\"\n        data-testid=\"button-reset\"\n        type=\"button\"\n        className=\"btn btn-sm btn-danger\"\n        disabled={props.commander | props.calcPointsSpent() ? false : true}\n        onClick={() => props.showReset()}\n      >\n        <FontAwesomeIcon icon={faTrashAlt} />\n        <span className=\"nav-button-text\">Reset</span>\n      </button>\n\n      <button\n        id=\"button-screenshot\"\n        data-testid=\"button-screenshot\"\n        type=\"button\"\n        disabled={props.commander | props.calcPointsSpent() ? false : true}\n        className=\"btn btn-sm btn-primary\"\n        onClick={() => {\n          const elementID = props.isScreenshotStats\n            ? 'main-container'\n            : 'tree-panel';\n          takeScreenshot(elementID);\n        }}\n      >\n        {isDownloading ? (\n          <Spinner size=\"sm\" animation=\"border\" variant=\"light\" />\n        ) : (\n          <FontAwesomeIcon icon={faCamera} />\n        )}\n        <span className=\"nav-button-text\">Screenshot</span>\n      </button>\n\n      <button\n        id=\"button-share\"\n        data-testid=\"button-share\"\n        type=\"button\"\n        disabled={props.commander | props.calcPointsSpent() ? false : true}\n        className=\"btn btn-sm btn-success\"\n        onClick={() => props.showShare()}\n      >\n        <FontAwesomeIcon icon={faShareAlt} />\n        <span className=\"nav-button-text\">Share</span>\n      </button>\n    </form>\n  );\n};\n\nexport default NavBarButtons;\n","import React from 'react';\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\nimport Tooltip from 'react-bootstrap/Tooltip';\nimport { faQuestionCircle } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport './styles/Tooltips.css';\n\n/**\n * Tooltip showing a hoverable 'help' tooltip\n *\n * @returns {Tooltip} Tooltip\n */\nexport const HelpTooltip = props => {\n  return (\n    <OverlayTrigger\n      placement=\"top\"\n      flip={true}\n      trigger={['hover', 'click']}\n      overlay={<Tooltip className=\"help-text\">{props.tooltip}</Tooltip>}\n    >\n      <FontAwesomeIcon icon={faQuestionCircle} className=\"help-icon\" />\n    </OverlayTrigger>\n  );\n};\n\n/**\n * General tooltip component\n *\n * @returns {Tooltip} Tooltip\n */\nexport const GeneralTooltip = props => {\n  return (\n    <OverlayTrigger\n      placement=\"top\"\n      flip={true}\n      trigger={['hover', 'click']}\n      overlay={<Tooltip className=\"help-text\">{props.tooltip}</Tooltip>}\n    >\n      {props.children}\n    </OverlayTrigger>\n  );\n};\n\nexport default { HelpTooltip, GeneralTooltip };\n","import React from 'react';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport NavItem from 'react-bootstrap/NavItem';\nimport NavLink from 'react-bootstrap/NavLink';\nimport Form from 'react-bootstrap/Form';\nimport ToggleButton from 'react-bootstrap/ToggleButton';\nimport ToggleButtonGroup from 'react-bootstrap/ToggleButtonGroup';\nimport { faCog } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { HelpTooltip } from './Tooltips';\n\nimport './styles/NavBarSettings.css';\n\nconst NavBarSettings = props => {\n  return (\n    <Dropdown alignRight as={NavItem} id=\"select-settings\">\n      <Dropdown.Toggle as={NavLink} data-testid=\"select-settings\">\n        <FontAwesomeIcon icon={faCog} />\n        <span className=\"nav-button-text\">Settings</span>\n      </Dropdown.Toggle>\n\n      <Dropdown.Menu id=\"settings-menu\" className=\"nav-menu\">\n        <Form>\n          <Form.Group id=\"settings-group\">\n            <Dropdown.Header>Display</Dropdown.Header>\n            <Form.Check\n              type=\"switch\"\n              id=\"settings-info-panel\"\n              data-testid=\"settings-info-panel\"\n              label=\"Info panel\"\n              checked={props.isShownInfoPanel}\n              onChange={e => props.toggleInfoPanel()}\n            />\n            <Form.Check\n              type=\"switch\"\n              id=\"settings-values\"\n              data-testid=\"settings-values\"\n              label=\"Node values\"\n              checked={props.isShownValues}\n              onChange={e => props.toggleValueDisplay()}\n            />\n            <Form.Check\n              type=\"switch\"\n              id=\"settings-totals\"\n              data-testid=\"settings-totals\"\n              label=\"Total spent\"\n              checked={props.isShownTotals}\n              onChange={e => props.toggleTotalDisplay()}\n            />\n\n            <Dropdown.Divider />\n\n            <Dropdown.Header>Node Size</Dropdown.Header>\n            <div className=\"d-flex flex-column\">\n              <ToggleButtonGroup\n                name=\"size\"\n                size=\"sm\"\n                value={props.nodeSize}\n                onChange={val => {\n                  props.toggleNodeSize(val);\n                }}\n              >\n                <ToggleButton\n                  type=\"radio\"\n                  name=\"radio\"\n                  value=\"S\"\n                  variant=\"outline-primary\"\n                >\n                  S\n                </ToggleButton>\n                <ToggleButton\n                  type=\"radio\"\n                  name=\"radio\"\n                  value=\"M\"\n                  variant=\"outline-primary\"\n                >\n                  M\n                </ToggleButton>\n                <ToggleButton\n                  type=\"radio\"\n                  name=\"radio\"\n                  value=\"L\"\n                  variant=\"outline-primary\"\n                >\n                  L\n                </ToggleButton>\n              </ToggleButtonGroup>\n\n              <Dropdown.Divider />\n              <Dropdown.Header>Screenshot</Dropdown.Header>\n              <Form.Check\n                type=\"switch\"\n                id=\"settings-screenshot-stats\"\n                label=\"Include stats\"\n                checked={props.isScreenshotStats}\n                onChange={e => props.toggleScreenshotStats()}\n              />\n\n              <Dropdown.Divider />\n              <Dropdown.Header>Expert</Dropdown.Header>\n              <div className=\"help-wrapper\">\n                <Form.Check\n                  type=\"switch\"\n                  id=\"settings-speed-mode\"\n                  label=\"Speed mode\"\n                  checked={props.isSpeedMode}\n                  onChange={e => props.toggleSpeedMode()}\n                />\n                <HelpTooltip\n                  tooltip=\"No tooltips. Left/right click nodes directly to assign/remove\n            points\"\n                />\n              </div>\n              <div className=\"help-wrapper\">\n                <Form.Check\n                  type=\"switch\"\n                  id=\"settings-instant-zero\"\n                  label=\"Instant zero\"\n                  checked={props.isInstantZero}\n                  onChange={e => props.toggleInstantZero()}\n                />\n                <HelpTooltip tooltip=\"Set a single talent to zero with 1 click\" />\n              </div>\n              <div className=\"help-wrapper\">\n                <Form.Check\n                  type=\"switch\"\n                  id=\"settings-instant-max\"\n                  label=\"Instant max\"\n                  checked={props.isInstantMax}\n                  onChange={e => props.toggleInstantMax()}\n                />\n                <HelpTooltip tooltip=\"Max a single talent with 1 click\" />\n              </div>\n              <div className=\"help-wrapper\">\n                <Form.Check\n                  type=\"switch\"\n                  id=\"settings-auto-fill\"\n                  label=\"Auto fill\"\n                  checked={props.isAutoFill}\n                  onChange={e => props.toggleAutoFill()}\n                />\n                <HelpTooltip tooltip=\"Automatically fill all prerequisites for a talent\" />\n              </div>\n            </div>\n\n            {process.env.NODE_ENV === 'development' && (\n              <>\n                <Dropdown.Divider />\n                <Dropdown.Header>Dev Mode</Dropdown.Header>\n                <Form.Check\n                  type=\"switch\"\n                  id=\"settings-mouse\"\n                  data-testid=\"settings-mouse\"\n                  label=\"Show mouse XY\"\n                  checked={props.isShownMouseXY}\n                  onChange={e => props.toggleMouseXY()}\n                />\n                <Form.Check\n                  type=\"switch\"\n                  id=\"settings-talentID\"\n                  label=\"Show talent ID\"\n                  checked={props.isShownTalentID}\n                  onChange={e => props.toggleTalentID()}\n                />\n              </>\n            )}\n          </Form.Group>\n        </Form>\n      </Dropdown.Menu>\n    </Dropdown>\n  );\n};\n\nexport default NavBarSettings;\n","import React, { Component } from 'react';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport NavItem from 'react-bootstrap/NavItem';\nimport NavLink from 'react-bootstrap/NavLink';\n\nimport Commanders from './data/commanders.json';\nimport './styles/NavBarCommander.css';\n\n/**\n * Nav bar component containing commander drop down\n *\n * @class NavBarCommander\n * @extends {Component}\n */\nclass NavBarCommander extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isOpen: false\n    };\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    if (\n      this.props.commander !== nextProps.commander ||\n      this.state.isOpen !== nextState.isOpen\n    ) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  /**\n   * Toggle open state of the commander select dropdown\n   *\n   * @memberof NavBarCommander\n   */\n  toggleSelect = () => {\n    this.setState(prevState => ({\n      isOpen: !prevState.isOpen\n    }));\n  };\n\n  /**\n   * Create a list of all available commanders (sorted)\n   *\n   * @returns {Dropdown.Item[]} Array of Dropdown items for all commanders\n   * @memberof NavBarCommander\n   */\n  createSelectItems = () => {\n    const commanderList = Object.keys(Commanders).sort();\n    let legendaryCommanders = [];\n    let epicCommanders = [];\n\n    commanderList.forEach(c => {\n      let selectItem = (\n        <Dropdown.Item\n          data-testid=\"menu-item\"\n          key={c}\n          onClick={() => {\n            this.props.changeCommander(c);\n          }}\n        >\n          <img\n            className=\"select-commander-icon\"\n            alt={c}\n            src={`${process.env.PUBLIC_URL}/images/commanders/${c}.png`}\n          ></img>\n          {Commanders[c]['shortName'] ? Commanders[c]['shortName'] : c}\n        </Dropdown.Item>\n      );\n\n      if (Commanders[c].tier === 'Legendary') {\n        legendaryCommanders.push(selectItem);\n      } else if (Commanders[c].tier === 'Epic') {\n        epicCommanders.push(selectItem);\n      }\n    });\n    return [\n      <Dropdown.Header key=\"header-legendary\">Legendary</Dropdown.Header>,\n      ...legendaryCommanders,\n      <Dropdown.Divider key=\"div1\" />,\n      <Dropdown.Header key=\"header-epic\">Epic</Dropdown.Header>,\n      ...epicCommanders\n    ];\n  };\n\n  render() {\n    return (\n      <Dropdown\n        id=\"select-commander\"\n        alignRight\n        as={NavItem}\n        show={this.state.isOpen}\n        onToggle={this.toggleSelect}\n      >\n        <Dropdown.Toggle as={NavLink} data-testid=\"select-commander\">\n          {this.props.commander ? (\n            <img\n              data-testid=\"select-commander-icon\"\n              className=\"select-commander-icon select-commander-icon-header\"\n              alt={this.props.commander}\n              src={`${process.env.PUBLIC_URL}/images/commanders/${this.props.commander}.png`}\n            ></img>\n          ) : (\n            <img\n              data-testid=\"select-commander-icon\"\n              className=\"select-commander-icon select-commander-icon-header\"\n              alt=\"Unknown commander\"\n              src={`${process.env.PUBLIC_URL}/images/commanders/unknown.png`}\n            ></img>\n          )}\n          <span className=\"nav-button-text\">\n            {this.props.commander\n              ? Commanders[this.props.commander]['shortName']\n                ? Commanders[this.props.commander]['shortName']\n                : this.props.commander\n              : ' Commander'}\n          </span>\n        </Dropdown.Toggle>\n\n        <Dropdown.Menu id=\"select-commander-menu\" className=\"nav-menu\">\n          {this.createSelectItems()}\n        </Dropdown.Menu>\n      </Dropdown>\n    );\n  }\n}\n\nexport default NavBarCommander;\n","import React, { Component, Suspense } from 'react';\nimport ReactGA from 'react-ga';\nimport Tabs from 'react-bootstrap/Tabs';\nimport Tab from 'react-bootstrap/Tab';\nimport Button from 'react-bootstrap/Button';\nimport Modal from 'react-bootstrap/Modal';\nimport {\n  faExclamationTriangle,\n  faInfoCircle,\n  faTrashAlt,\n  faShareAlt,\n  faLink,\n  faCode,\n  faCopy,\n  faBullhorn,\n} from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  TwitterShareButton,\n  WhatsappShareButton,\n  RedditShareButton,\n  WeiboShareButton,\n  PocketShareButton,\n  EmailShareButton,\n  TwitterIcon,\n  WhatsappIcon,\n  RedditIcon,\n  PocketIcon,\n  EmailIcon,\n  WeiboIcon,\n} from 'react-share';\n\nimport { title, author, contributors, bugs, version } from '../package.json';\nimport { getURL } from './utils';\nimport './styles/Modals.css';\n\n/**\n * Modal displaying warning about an invalid build retrived from URL\n *\n * @class InvalidBuildModal\n * @extends {Component}\n */\nexport class InvalidBuildModal extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      modal: true,\n    };\n  }\n\n  toggle = () => {\n    this.setState((prevState) => ({\n      modal: !prevState.modal,\n    }));\n  };\n\n  render() {\n    return (\n      <Modal centered show={this.state.modal} onHide={this.toggle}>\n        <Modal.Header closeButton>\n          <span>\n            <FontAwesomeIcon\n              icon={faExclamationTriangle}\n              className=\"modal-icon\"\n            />\n          </span>\n          Invalid Talent Build\n        </Modal.Header>\n        <Modal.Body className=\"modal-body\">\n          <div>\n            The talent build you're trying to view is invalid. Make sure you've\n            copied and pasted the link correctly.\n            <br />\n            <br />\n          </div>\n          <div data-testid=\"invalid-modal-body\">\n            <b>Reason:</b> {this.props.message}\n          </div>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"primary\" onClick={this.toggle}>\n            Close\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    );\n  }\n}\n\n/**\n * Modal displaying announcements\n *\n * @class AnnouncementModal\n * @extends {Component}\n */\nexport class AnnouncementModal extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      version: version,\n      modal:\n        this.props.isNewUser ||\n        this.props.isEmbed ||\n        !this.props.isUpgrade ||\n        this.props.isInvalidBuild\n          ? false\n          : true,\n    };\n  }\n\n  toggle = () => {\n    this.setState((prevState) => ({\n      modal: !prevState.modal,\n    }));\n  };\n\n  show = (version) => {\n    this.setState({ modal: true, version: version });\n  };\n\n  getFilenameFromVersion(version) {\n    const semVerValues = version.split('.');\n    return `${semVerValues[0]}_${semVerValues[1]}.js`;\n  }\n\n  loadAnnouncement(version) {\n    const Announcement = React.lazy(() =>\n      import(`./announcements/${this.getFilenameFromVersion(version)}`)\n    );\n    return Announcement;\n  }\n\n  render() {\n    const Announcement = this.loadAnnouncement(this.state.version);\n\n    return (\n      <Modal\n        data-testid=\"announce-modal\"\n        centered\n        size=\"lg\"\n        show={this.state.modal}\n        onHide={this.toggle}\n      >\n        <Modal.Header closeButton>\n          <span>\n            <FontAwesomeIcon icon={faBullhorn} className=\"modal-icon\" />\n          </span>\n          Announcement\n        </Modal.Header>\n        <Modal.Body className=\"modal-body\">\n          <Suspense fallback={<div>Loading...</div>}>\n            <Announcement />\n          </Suspense>\n          <hr className=\"announce-hr\" />\n          If you have any feature requests, or notice any website issues, you\n          can make a post{' '}\n          <a href={bugs.url} target=\"_blank\" rel=\"noopener noreferrer\">\n            here\n          </a>\n          .\n        </Modal.Body>\n        <Modal.Footer>\n          <span className=\"modal-reminder\">\n            ( You can view this announcement again on the Info page\n            <FontAwesomeIcon icon={faInfoCircle} className=\"modal-icon\" />)\n          </span>\n          <Button variant=\"primary\" onClick={this.toggle}>\n            Close\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    );\n  }\n}\n\n/**\n * Modal displaying information about the application\n *\n * @class AboutModal\n * @extends {Component}\n */\nexport class AboutModal extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      modal: false,\n    };\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    if (this.state.modal !== nextState.modal) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  toggle = () => {\n    this.setState((prevState) => ({\n      modal: !prevState.modal,\n    }));\n  };\n\n  showAnnouncement = (version) => {\n    this.toggle();\n    this.props.toggleAnnounce(version);\n  };\n\n  getContributors = () => {\n    let contributorsList = contributors.map((c, i) => [\n      i > 0 && ', ',\n      <a href={c.url} target=\"_blank\" rel=\"noopener noreferrer\" key={c.name}>\n        {c.name}\n      </a>,\n    ]);\n\n    return contributorsList;\n  };\n\n  showDonate = () => {\n    ReactGA.event({\n      category: 'App',\n      action: 'Donate',\n    });\n  };\n\n  render() {\n    return (\n      <Modal centered show={this.state.modal} onHide={this.toggle}>\n        <Modal.Header closeButton>\n          <span>\n            <FontAwesomeIcon icon={faInfoCircle} className=\"modal-icon\" />\n          </span>\n          {title}\n        </Modal.Header>\n\n        <Modal.Body>\n          <Tabs defaultActiveKey=\"about\" className=\"tab-title\">\n            <Tab eventKey=\"about\" title=\"About\">\n              <div>\n                <img\n                  id=\"modal-app-icon\"\n                  src={`${process.env.PUBLIC_URL}/logo.svg`}\n                  alt=\"RoK Talents Logo\"\n                ></img>\n                Talent builder for Rise of Kingdoms. Best viewed on PC/laptop.\n              </div>\n              <br />\n              <div>\n                <span className=\"about-label\">App version:</span> {version}\n              </div>\n              <div>\n                <span className=\"about-label\">Creator:</span>{' '}\n                <a href={author.url} target=\"_blank\" rel=\"noopener noreferrer\">\n                  {author.name}\n                </a>\n              </div>\n              <div>\n                <span className=\"about-label\">Contributors:</span>{' '}\n                {this.getContributors()}\n              </div>\n              <div>\n                <span className=\"about-label\">Report bug:</span>{' '}\n                <a href={bugs.url} target=\"_blank\" rel=\"noopener noreferrer\">\n                  Submit\n                </a>\n              </div>\n              <div>\n                <span className=\"about-label\">Support development:</span>{' '}\n                <a\n                  href=\"https://www.buymeacoffee.com/simonho\"\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                >\n                  <img\n                    id=\"coffee\"\n                    src=\"https://cdn.buymeacoffee.com/buttons/default-orange.png\"\n                    alt=\"Buy Me A Coffee\"\n                    onClick={this.showDonate}\n                  ></img>\n                </a>\n              </div>\n            </Tab>\n\n            <Tab eventKey=\"releases\" title=\"Releases\">\n              <Button\n                className=\"button-releases\"\n                variant=\"success\"\n                size=\"sm\"\n                onClick={() => {\n                  this.showAnnouncement(version);\n                }}\n              >\n                View latest release\n              </Button>\n              <hr />\n              <h2>Release History (click to view):</h2>\n              <Button\n                className=\"button-releases-history\"\n                variant=\"primary\"\n                size=\"sm\"\n                onClick={() => {\n                  this.showAnnouncement('1.4.0');\n                }}\n              >\n                1.4.0\n              </Button>\n              <Button\n                className=\"button-releases-history\"\n                variant=\"primary\"\n                size=\"sm\"\n                onClick={() => {\n                  this.showAnnouncement('1.3.0');\n                }}\n              >\n                1.3.0\n              </Button>\n              <Button\n                className=\"button-releases-history\"\n                variant=\"primary\"\n                size=\"sm\"\n                onClick={() => {\n                  this.showAnnouncement('1.2.0');\n                }}\n              >\n                1.2.0\n              </Button>\n            </Tab>\n\n            <Tab eventKey=\"instructions\" title=\"Instructions\">\n              <ol>\n                <li>Choose commander in the top-right dropdown list</li>\n                <li>Assign points by clicking on talent nodes</li>\n                <li>Check your build stats in the Stats panel</li>\n                <li>\n                  Click the Share button to get a{' '}\n                  <strong>shareable link</strong> to your build\n                </li>\n              </ol>\n\n              <Button\n                id=\"button-tour\"\n                variant=\"success\"\n                size=\"sm\"\n                onClick={() => {\n                  this.toggle();\n                  this.props.toggleTour();\n                }}\n              >\n                Show Guided Tour\n              </Button>\n\n              <br />\n              <div>\n                Video guide:{' '}\n                <a\n                  href=\"https://www.youtube.com/watch?v=jBv_BZXjFgM\"\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                >\n                  Legend Rhony\n                </a>\n              </div>\n            </Tab>\n          </Tabs>\n        </Modal.Body>\n      </Modal>\n    );\n  }\n}\n\n/**\n * Modal displaying reset/delete confirmation\n *\n * @class ResetModal\n * @extends {Component}\n */\nexport class ResetModal extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      modal: false,\n    };\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    if (this.state.modal !== nextState.modal) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  toggle = () => {\n    this.setState((prevState) => ({\n      modal: !prevState.modal,\n    }));\n  };\n\n  render() {\n    return (\n      <Modal centered show={this.state.modal} onHide={this.toggle}>\n        <Modal.Header closeButton>\n          <span>\n            <FontAwesomeIcon icon={faTrashAlt} className=\"modal-icon\" />\n          </span>\n          Reset\n        </Modal.Header>\n\n        <Modal.Body className=\"modal-body\">\n          <div>Are you sure you want to reset the talent build?</div>\n          <div>This will remove all assigned talent points.</div>\n        </Modal.Body>\n\n        <Modal.Footer>\n          <Button\n            variant=\"danger\"\n            onClick={() => {\n              this.props.resetTalents();\n              this.toggle();\n            }}\n          >\n            Reset\n          </Button>\n          <Button variant=\"secondary\" onClick={this.toggle}>\n            Cancel\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    );\n  }\n}\n\n/**\n * Modal displaying sharing options for talent build\n *\n * @class ShareModal\n * @extends {Component}\n */\nexport class ShareModal extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      modal: false,\n    };\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    if (this.state.modal !== nextState.modal) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  toggle = () => {\n    this.setState((prevState) => ({\n      modal: !prevState.modal,\n    }));\n  };\n\n  copyURL = () => {\n    const input = document.getElementById('url');\n    input.readOnly = true;\n    input.select();\n    document.execCommand('copy');\n    document.getElementById('copyButton').innerHTML = '\\u2713';\n    ReactGA.event({\n      category: 'Share',\n      action: 'Copy URL',\n    });\n  };\n\n  copyEmbedURL = () => {\n    const input = document.getElementById('url-embed');\n    input.readOnly = true;\n    input.select();\n    document.execCommand('copy');\n    document.getElementById('copyEmbedButton').innerHTML = '\\u2713';\n    ReactGA.event({\n      category: 'Share',\n      action: 'Copy Embed URL',\n    });\n  };\n\n  shareSocial = () => {\n    ReactGA.event({\n      category: 'Share',\n      action: 'Share social media',\n    });\n  };\n\n  render() {\n    return (\n      <Modal centered show={this.state.modal} onHide={this.toggle}>\n        <Modal.Header closeButton>\n          <span>\n            <FontAwesomeIcon icon={faShareAlt} className=\"modal-icon\" />\n          </span>\n          Share Talent Build\n        </Modal.Header>\n\n        <Modal.Body>\n          <Tabs defaultActiveKey=\"link\" className=\"tab-title\">\n            <Tab eventKey=\"link\" title=\"Link\">\n              <div className=\"share-modal-label\">\n                Shareable link to this talent build:\n              </div>\n\n              <div className=\"input-group mb-3\">\n                <div className=\"input-group-prepend\">\n                  <span className=\"input-group-text\">\n                    <FontAwesomeIcon icon={faLink} />\n                  </span>\n                </div>\n                <input\n                  id=\"url\"\n                  type=\"text\"\n                  className=\"form-control\"\n                  defaultValue={getURL()}\n                  readOnly\n                ></input>\n                <div className=\"input-group-append\">\n                  <button\n                    id=\"copyButton\"\n                    className=\"btn btn-success\"\n                    type=\"button\"\n                    onClick={this.copyURL}\n                  >\n                    <FontAwesomeIcon icon={faCopy} />\n                  </button>\n                </div>\n              </div>\n\n              <hr />\n\n              <div className=\"share-modal-label\">Share to social media:</div>\n\n              <div id=\"share-modal-social\" onClick={this.shareSocial}>\n                <EmailShareButton url={window.location.href}>\n                  <EmailIcon size={32} round />\n                </EmailShareButton>\n                <RedditShareButton url={window.location.href}>\n                  <RedditIcon size={32} round />\n                </RedditShareButton>\n                <TwitterShareButton url={window.location.href}>\n                  <TwitterIcon size={32} round />\n                </TwitterShareButton>\n                <WeiboShareButton url={window.location.href}>\n                  <WeiboIcon size={32} round />\n                </WeiboShareButton>\n                <WhatsappShareButton url={window.location.href}>\n                  <WhatsappIcon size={32} round />\n                </WhatsappShareButton>\n                <PocketShareButton url={window.location.href}>\n                  <PocketIcon size={32} round />\n                </PocketShareButton>\n              </div>\n            </Tab>\n\n            <Tab eventKey=\"embed\" title=\"Embed\">\n              <div>\n                If you have a blog or website, you can use the{' '}\n                <strong>HTML</strong> code below to embed this talent build\n                directly into your site.\n              </div>\n              <div>\n                <strong>Note</strong>: The embedded talent build will be\n                view-only.\n              </div>\n              <br />\n\n              <div className=\"input-group mb-3\">\n                <div className=\"input-group-prepend\">\n                  <span className=\"input-group-text\">\n                    <FontAwesomeIcon icon={faCode} />\n                  </span>\n                </div>\n                <textarea\n                  id=\"url-embed\"\n                  className=\"form-control\"\n                  rows={5}\n                  defaultValue={`<iframe height=\"400\" width=\"400\" allowfullscreen=\"true\" sandbox=\"allow-scripts allow-modals allow-same-origin allow-popups allow-popups-to-escape-sandbox\" src=\"${getURL(\n                    true\n                  )}\"></iframe>`}\n                  readOnly\n                ></textarea>\n                <div className=\"input-group-append\">\n                  <button\n                    id=\"copyEmbedButton\"\n                    className=\"btn btn-success\"\n                    type=\"button\"\n                    onClick={this.copyEmbedURL}\n                  >\n                    <FontAwesomeIcon icon={faCopy} />\n                  </button>\n                </div>\n              </div>\n            </Tab>\n          </Tabs>\n        </Modal.Body>\n\n        <Modal.Footer>\n          <Button variant=\"primary\" onClick={this.toggle}>\n            Close\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    );\n  }\n}\n\nexport default {\n  InvalidBuildModal,\n  AnnouncementModal,\n  AboutModal,\n  ResetModal,\n  ShareModal,\n};\n","import React, { Component } from 'react';\nimport ReactGA from 'react-ga';\nimport MediaQuery from 'react-responsive';\nimport Navbar from 'react-bootstrap/Navbar';\nimport Nav from 'react-bootstrap/Nav';\nimport NavBarButtons from './NavBarButtons';\nimport NavBarSettings from './NavBarSettings';\nimport NavBarCommander from './NavBarCommander';\nimport { AboutModal, ResetModal, ShareModal } from './Modals';\nimport { faInfoCircle } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nimport { title } from '../package.json';\nimport './styles/NavBar.css';\n\n/**\n * Nav bar component containing main application buttons/controls\n *\n * @class NavBar\n * @extends {Component}\n */\nclass NavBar extends Component {\n  /**\n   * Control visibility of the \"About\" modal\n   *\n   * @memberof NavBar\n   */\n  showAbout = () => {\n    this.aboutModalRef.toggle();\n    ReactGA.event({\n      category: 'App',\n      action: 'View about modal'\n    });\n  };\n\n  /**\n   * Control visibility of the \"Reset\" modal\n   *\n   * @memberof NavBar\n   */\n  showReset = () => {\n    this.resetModalRef.toggle();\n  };\n\n  /**\n   * Control visibility of the \"Share\" modal\n   *\n   * @memberof NavBar\n   */\n  showShare = () => {\n    this.shareModalRef.toggle();\n    ReactGA.event({\n      category: 'Share',\n      action: 'View share modal'\n    });\n  };\n\n  render() {\n    return (\n      <>\n        <AboutModal\n          ref={component => (this.aboutModalRef = component)}\n          toggleTour={this.props.toggleTour}\n          toggleAnnounce={this.props.toggleAnnounce}\n        />\n        <ResetModal\n          ref={component => (this.resetModalRef = component)}\n          resetTalents={this.props.resetTalents}\n        />\n        <ShareModal ref={component => (this.shareModalRef = component)} />\n\n        <Navbar\n          variant=\"light\"\n          className={this.props.isSpeedMode ? 'nav-speed' : 'navbar'}\n        >\n          <Navbar.Brand href=\"/\">\n            <img\n              id=\"nav-app-icon\"\n              src={`${process.env.PUBLIC_URL}/icon.svg`}\n              alt=\"RoK Talents Logo\"\n            ></img>\n          </Navbar.Brand>\n\n          <MediaQuery minDeviceWidth={450}>\n            <Navbar.Brand href=\"/\">{title}</Navbar.Brand>\n          </MediaQuery>\n\n          <Navbar.Brand\n            id=\"nav-icon\"\n            className=\"mr-auto\"\n            style={{ cursor: 'pointer' }}\n            onClick={() => this.showAbout(true)}\n          >\n            <FontAwesomeIcon icon={faInfoCircle} />\n          </Navbar.Brand>\n\n          <Nav className=\"ml-auto\">\n            <NavBarButtons\n              isScreenshotStats={this.props.isScreenshotStats}\n              calcPointsSpent={this.props.calcPointsSpent}\n              showReset={this.showReset}\n              showShare={this.showShare}\n              commander={this.props.commander}\n              red={this.props.red}\n              yellow={this.props.yellow}\n              blue={this.props.blue}\n            />\n\n            <NavBarSettings\n              toggleInfoPanel={this.props.toggleInfoPanel}\n              toggleTotalDisplay={this.props.toggleTotalDisplay}\n              toggleValueDisplay={this.props.toggleValueDisplay}\n              toggleNodeSize={this.props.toggleNodeSize}\n              toggleScreenshotStats={this.props.toggleScreenshotStats}\n              toggleSpeedMode={this.props.toggleSpeedMode}\n              toggleInstantZero={this.props.toggleInstantZero}\n              toggleInstantMax={this.props.toggleInstantMax}\n              toggleAutoFill={this.props.toggleAutoFill}\n              toggleMouseXY={this.props.toggleMouseXY}\n              toggleTalentID={this.props.toggleTalentID}\n              isShownInfoPanel={this.props.isShownInfoPanel}\n              isShownValues={this.props.isShownValues}\n              isShownTotals={this.props.isShownTotals}\n              isScreenshotStats={this.props.isScreenshotStats}\n              isSpeedMode={this.props.isSpeedMode}\n              isInstantZero={this.props.isInstantZero}\n              isInstantMax={this.props.isInstantMax}\n              isAutoFill={this.props.isAutoFill}\n              isShownMouseXY={this.props.isShownMouseXY}\n              isShownTalentID={this.props.isShownTalentID}\n              nodeSize={this.props.nodeSize}\n            />\n\n            <NavBarCommander\n              changeCommander={this.props.changeCommander}\n              commander={this.props.commander}\n            />\n          </Nav>\n        </Navbar>\n      </>\n    );\n  }\n}\n\nexport default NavBar;\n","import React from 'react';\nimport ReactGA from 'react-ga';\nimport { GeneralTooltip } from './Tooltips';\nimport Commanders from './data/commanders.json';\nimport './styles/SummaryPanel.css';\n\n/**\n * Summary panel component displaying commander info\n *\n */\nconst SummaryPanel = props => {\n  const getGuides = () => {\n    if (Commanders[props.commander].guides) {\n      let guides = [];\n\n      for (let guide in Commanders[props.commander].guides) {\n        guides.push(\n          <GuideIcon key={guide} commander={props.commander} name={guide} />\n        );\n      }\n      return <div id=\"summary-panel-guides\">Guide: {guides}</div>;\n    }\n  };\n\n  return (\n    <div id=\"summary-panel\" className=\"info-box\">\n      <h1>{props.commander ? props.commander : 'Summary'}</h1>\n      <h3>{props.commander && Commanders[props.commander].title}</h3>\n      <h3>{props.commander && getGuides()}</h3>\n\n      <div id=\"summary-panel-summary\">\n        <p>Points remaining: {props.calcPointsRemaining()}</p>\n        <p>Points spent: {props.calcPointsSpent()}</p>\n      </div>\n    </div>\n  );\n};\n\n/**\n * Icon for commander guides\n *\n * @returns {DOMElement} Icon linking to the external commander guide\n */\nconst GuideIcon = React.memo(props => {\n  const clickGuide = () => {\n    ReactGA.event({\n      category: 'Navigation',\n      action: `View guide (${props.name})`,\n      label: props.commander\n    });\n  };\n\n  return (\n    <GeneralTooltip tooltip={props.name}>\n      <a\n        href={Commanders[props.commander].guides[props.name]}\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n        onClick={clickGuide}\n      >\n        <img\n          className=\"summary-panel-guide-icon\"\n          src={`${process.env.PUBLIC_URL}/images/guides/${props.name}.png`}\n          alt={props.name}\n        ></img>\n      </a>\n    </GeneralTooltip>\n  );\n});\n\nexport default SummaryPanel;\n","import React from 'react';\nimport { HelpTooltip } from './Tooltips';\n\nimport './styles/StatsPanel.css';\n\n/**\n * Stats panel component displaying stats about the current talent build\n */\nconst StatsPanel = React.memo(props => {\n  /**\n   * Get all calculated stats and their values\n   *\n   * @returns {DOMElement[]} Array of DOM elements containing stats and values\n   */\n  const getAllStats = () => {\n    let allStats = [];\n    const keys = Object.keys(props.stats);\n    keys.sort();\n    for (var i = 0; i < keys.length; i++) {\n      allStats.push(\n        <p key={keys[i]}>{`${keys[i]}: ${props.stats[keys[i]]}%`}</p>\n      );\n    }\n\n    return allStats.length > 0 ? allStats : 'None';\n  };\n\n  return (\n    <div id=\"stats-panel\" className=\"info-box\">\n      <h2>\n        Stats{' '}\n        <HelpTooltip tooltip=\"Totals only include unconditional and direct stat boosts. For example, does not include stats from rallies/garrison/% chance etc.\" />\n      </h2>\n      <div id=\"stats-panel-stats\">{getAllStats()}</div>\n    </div>\n  );\n});\n\nexport default StatsPanel;\n","import React, { Component } from 'react';\nimport ReactGA from 'react-ga';\nimport Collapse from 'react-bootstrap/Collapse';\nimport { HelpTooltip } from './Tooltips';\nimport './styles/StatsTalentsPanel.css';\n\n/**\n * Stats talents panel component containing selected main talents\n *\n * @class StatsTalentsPanel\n * @extends {Component}\n */\nclass StatsTalentsPanel extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isShownStatsTalents: false\n    };\n  }\n\n  /**\n   * Toggles visibility of the main talents descriptions\n   *\n   * @memberof StatsTalentsPanel\n   */\n  toggleStatsTalents = () => {\n    this.setState(prevState => ({\n      isShownStatsTalents: !prevState.isShownStatsTalents\n    }));\n\n    ReactGA.event({\n      category: 'App',\n      action: 'Toggle stats talents'\n    });\n  };\n\n  /**\n   * Get all main talents and their values/text\n   *\n   * @returns {DOMElement[]} Array of DOM elements containing main talents and values\n   * @memberof StatsTalentsPanel\n   */\n  getAllMainTalents = () => {\n    let allMainTalents = [];\n\n    for (let talent of this.props.mainTalents) {\n      allMainTalents.push(\n        <MainTalent\n          isShownStatsTalents={this.state.isShownStatsTalents}\n          key={talent.name}\n          name={talent.name}\n          color={talent.color}\n          points={talent.points}\n          maxPoints={talent.maxPoints}\n          text={talent.text}\n        />\n      );\n    }\n\n    return allMainTalents.length > 0 ? allMainTalents : 'None';\n  };\n\n  render() {\n    return (\n      <div\n        id=\"stats-talents\"\n        className=\"info-box\"\n        onClick={this.toggleStatsTalents}\n      >\n        <h2 id=\"stats-talents-title\">\n          Main Talents{' '}\n          <HelpTooltip tooltip=\"Expandable list of all selected main talents\" />\n        </h2>\n        <div data-testid=\"stats-talents\">{this.getAllMainTalents()}</div>\n      </div>\n    );\n  }\n}\n\nfunction MainTalent(props) {\n  return (\n    <div className={`stats-talents-main`}>\n      <div className=\"stats-talents-title\">\n        <span className={`bullet bg-${props.color}`}></span>\n\n        {`${props.name} (${props.points}/${props.maxPoints})`}\n      </div>\n\n      <Collapse in={props.isShownStatsTalents}>\n        <div className=\"stats-talents-text\">{props.text}</div>\n      </Collapse>\n    </div>\n  );\n}\n\nexport default StatsTalentsPanel;\n","import React, { Component } from 'react';\nimport MediaQuery from 'react-responsive';\nimport SummaryPanel from './SummaryPanel';\nimport StatsPanel from './StatsPanel';\nimport StatsTalentsPanel from './StatsTalentsPanel';\nimport ErrorBoundary from './Error';\n\nimport Commanders from './data/commanders.json';\nimport { getMaxTalentCount, replaceTalentText, isTouchDevice } from './utils';\nimport './styles/InfoPanel.css';\n\n/**\n * Info panel component displaying stats about the current talent build\n *\n * @class InfoPanel\n * @extends {Component}\n */\nclass InfoPanel extends Component {\n  /**\n   * Calculate all stats on point assignment\n   *\n   * @returns {[Array, Object]} Calculated stats and object containing main talents\n   * @memberof InfoPanel\n   */\n  calcStats() {\n    let mainTalents = [];\n    let stats = {};\n\n    if (this.props.commander) {\n      const commanderData = Commanders[this.props.commander];\n\n      for (let color of ['red', 'yellow', 'blue']) {\n        const talentData = this.props.treeData[commanderData[color]];\n        const selectedValues = this.props[color];\n\n        for (let i = 1; i < selectedValues.length + 1; i++) {\n          const pointsAssigned = selectedValues[i - 1];\n\n          if (pointsAssigned !== 0) {\n            const talent = talentData[i];\n            const statName = talent.stats;\n\n            if (statName) {\n              if (!(statName in stats)) {\n                stats[statName] = 0;\n              }\n              stats[statName] += talent.values[pointsAssigned - 1];\n            }\n\n            if (talent.type === 'node-large') {\n              mainTalents.push({\n                name: talent.name,\n                color: color,\n                points: pointsAssigned,\n                maxPoints: getMaxTalentCount(talent.values),\n                text: replaceTalentText(\n                  talent.text,\n                  talent.values,\n                  pointsAssigned - 1\n                )\n              });\n            }\n          }\n        }\n      }\n    }\n    return [stats, mainTalents];\n  }\n\n  render() {\n    const [stats, mainTalents] = this.calcStats();\n\n    return (\n      <div\n        id=\"info-panel\"\n        data-testid=\"info-panel\"\n        className={\n          this.props.isShownInfoPanel ? 'info-panel-open' : 'info-panel-closed'\n        }\n      >\n        <ErrorBoundary>\n          <div id=\"summary-panel-container\">\n            <SummaryPanel\n              commander={this.props.commander}\n              calcPointsRemaining={this.props.calcPointsRemaining}\n              calcPointsSpent={this.props.calcPointsSpent}\n            />\n            <MediaQuery orientation=\"portrait\">\n              <StatsPanel stats={stats} />\n            </MediaQuery>\n          </div>\n        </ErrorBoundary>\n\n        <MediaQuery orientation=\"landscape\">\n          <ErrorBoundary>\n            <StatsPanel stats={stats} />\n          </ErrorBoundary>\n\n          {!isTouchDevice() && (\n            <ErrorBoundary>\n              <StatsTalentsPanel mainTalents={mainTalents} />\n            </ErrorBoundary>\n          )}\n        </MediaQuery>\n      </div>\n    );\n  }\n}\n\nexport default InfoPanel;\n","// Utility to map data files to object\nfunction loadTreeData(version) {\n  const treeData = {\n    Attack: require(`./v${version}/Attack.json`),\n    Archer: require(`./v${version}/Archer.json`),\n    Cavalry: require(`./v${version}/Cavalry.json`),\n    Conquering: require(`./v${version}/Conquering.json`),\n    Defense: require(`./v${version}/Defense.json`),\n    Garrison: require(`./v${version}/Garrison.json`),\n    Gathering: require(`./v${version}/Gathering.json`),\n    Infantry: require(`./v${version}/Infantry.json`),\n    Integration: require(`./v${version}/Integration.json`),\n    Leadership: require(`./v${version}/Leadership.json`),\n    Mobility: require(`./v${version}/Mobility.json`),\n    Peacekeeping: require(`./v${version}/Peacekeeping.json`),\n    Skill: require(`./v${version}/Skill.json`),\n    Support: require(`./v${version}/Support.json`),\n    Versatility: require(`./v${version}/Versatility.json`)\n  };\n\n  if (process.env.NODE_ENV === 'development') {\n    console.info(`Info: Loading game data version ${version}`);\n  }\n\n  return treeData;\n}\n\nexport default loadTreeData;\n","import React, { Component, Suspense } from 'react';\nimport ReactGA from 'react-ga';\nimport { jsPlumb } from 'jsplumb';\nimport Progress from './Progress';\nimport Spinner from 'react-bootstrap/Spinner';\nimport GuidedTour from './GuidedTour';\nimport NavBar from './NavBar';\nimport InfoPanel from './InfoPanel';\nimport { InvalidBuildModal, AnnouncementModal } from './Modals';\nimport ErrorBoundary from './Error';\nimport loadTreeData from './data/AllTrees';\nimport Commanders from './data/commanders.json';\nimport { maxPoints, getEmptyState } from './values';\nimport { version, dataVersion } from '../package.json';\nimport {\n  sumArray,\n  getMaxTalentCount,\n  setTitle,\n  isTouchDevice,\n  isUpgrade,\n  isNewUser,\n  encode,\n  decode,\n} from './utils';\n\nimport './styles/App.css';\nimport './styles/fonts.css';\n\nconst TreePanel = React.lazy(() => import('./TreePanel'));\nlet treeData;\n\n/**\n * Main application component. Contains high level logic for managing application state\n *\n * @class App\n * @extends {Component}\n */\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.invalidModalFlag = false;\n    this.invalidBuildMessage = '';\n\n    // Set initial state from query string\n    const urlParams = this.props.url.slice(1).split(';');\n\n    if (this.props.isEmbed) {\n      ReactGA.event({\n        category: 'Load',\n        action: 'Embed',\n      });\n    }\n\n    switch (urlParams.length) {\n      case 1: // blank url\n        this.state = getEmptyState(dataVersion, this.props.isEmbed);\n        treeData = loadTreeData(dataVersion);\n        this.updateURL('clear');\n        ReactGA.event({\n          category: 'Load',\n          action: 'New',\n        });\n        break;\n      case 5: // complete url\n      case 6: // embed url\n        // eslint-disable-next-line\n        let path, urlDataVersion, comID, red, yellow, blue;\n        if (urlParams.length === 5) {\n          [urlDataVersion, comID, red, yellow, blue] = urlParams;\n        } else if (urlParams.length === 6) {\n          [path, urlDataVersion, comID, red, yellow, blue] = urlParams;\n        }\n        urlDataVersion = parseInt(urlDataVersion);\n\n        const commanderName = Object.keys(Commanders).find(\n          (key) => Commanders[key]['id'] === comID\n        );\n\n        // Check for invalid build\n        if (urlDataVersion > dataVersion) {\n          this.invalidBuildMessage = 'Incorrect game data version';\n          this.invalidModalFlag = true;\n        } else if (!commanderName) {\n          this.invalidBuildMessage = 'Unknown commander ID';\n          this.invalidModalFlag = true;\n        } else {\n          this.state = getEmptyState(urlDataVersion, this.props.isEmbed);\n          treeData = loadTreeData(urlDataVersion);\n          this.state = {\n            ...this.state,\n            dataVersion: urlDataVersion,\n            commander: commanderName,\n            ...this.createZeroTalents(commanderName),\n          };\n\n          const colorPairs = [\n            [red, 'red'],\n            [yellow, 'yellow'],\n            [blue, 'blue'],\n          ];\n\n          for (let color of colorPairs) {\n            // Decode and split talent string into array\n            let talents = decode(color[0]).split('').map(Number);\n            const maxArray = this.createMaxValueArray(\n              this.state.commander,\n              color[1]\n            );\n\n            if (talents.length !== this.state[color[1]].length) {\n              // Check talent array is correct length\n              this.invalidBuildMessage = `Incorrect number of talents (${color[1]} tree)`;\n              this.invalidModalFlag = true;\n              break;\n            } else if (\n              // Check spent values are not too large\n              talents.some(function (el, idx) {\n                return el > maxArray[idx];\n              })\n            ) {\n              this.invalidBuildMessage = `Too many points assigned in talent (${color[1]} tree)`;\n              this.invalidModalFlag = true;\n              break;\n            } else {\n              // Store color array in state\n              this.state[color[1]] = talents;\n            }\n          }\n\n          // Check that the talent build has not overspent points\n          if (this.calcPointsRemaining() < 0) {\n            this.invalidBuildMessage = `Number of spent talent points exceeds maximum`;\n            this.invalidModalFlag = true;\n          }\n        }\n\n        if (this.invalidModalFlag) {\n          this.state = getEmptyState(dataVersion, this.props.isEmbed);\n          treeData = loadTreeData(dataVersion);\n          this.updateURL('clear');\n          ReactGA.event({\n            category: 'Load',\n            action: 'Error',\n            label: this.props.url,\n          });\n        } else {\n          this.updateURL('update');\n          ReactGA.event({\n            category: 'Load',\n            action: 'Existing',\n            label: this.props.url,\n          });\n        }\n        break;\n      default:\n        // Incorrect number of url params\n        this.invalidBuildMessage = `Incorrect number of build parameters (length: ${urlParams.length}, expected: 5)`;\n        this.invalidModalFlag = true;\n        this.state = getEmptyState(dataVersion, this.props.isEmbed);\n        treeData = loadTreeData(dataVersion);\n        this.updateURL('clear');\n        ReactGA.event({\n          category: 'Load',\n          action: 'Error',\n          label: this.props.url,\n        });\n    }\n  }\n\n  componentDidMount() {\n    if (!this.props.isEmbed) {\n      localStorage.setItem('version', version);\n    }\n\n    if (isNewUser()) {\n      localStorage.setItem('isNewUser', false);\n    }\n\n    this.setState({ showProgress: false });\n  }\n\n  /**\n   * Update the current URL\n   *\n   * @param {string} method {update | clear} Should the new URL be updated\n   * with the new state or cleared (new app state)?\n   * @memberof App\n   */\n  updateURL = (method) => {\n    let queryString;\n\n    switch (method) {\n      case 'update':\n        queryString =\n          '?' +\n          (this.props.isEmbed ? 'embed;' : '') +\n          [\n            this.state.dataVersion,\n            Commanders[this.state.commander].id,\n            encode(this.state.red.join('')),\n            encode(this.state.yellow.join('')),\n            encode(this.state.blue.join('')),\n          ].join(';');\n\n        setTitle(\n          this.state.commander,\n          this.state.red,\n          this.state.yellow,\n          this.state.blue\n        );\n        break;\n      case 'clear':\n        queryString = '/';\n        break;\n      default:\n        break;\n    }\n    window.history.replaceState('', '', queryString);\n  };\n\n  /**\n   * Set blank state object for the newly selected commander,\n   * followed by `this.updateURL()`\n   *\n   * @param {string} commander Name of the commander being changed to\n   * @memberof App\n   */\n  changeCommander = (commander) => {\n    if (this.state.dataVersion !== dataVersion) {\n      treeData = loadTreeData(dataVersion);\n    }\n\n    const zeroTalents = this.createZeroTalents(commander);\n    this.setState(\n      { dataVersion: dataVersion, commander: commander, ...zeroTalents },\n      () => {\n        this.updateURL('update');\n        this.treePanelRef.drawLines();\n\n        ReactGA.event({\n          category: 'Navigation',\n          action: 'Change commander',\n          label: commander,\n        });\n      }\n    );\n\n    if (!isTouchDevice()) {\n      this.treePanelRef.resetPanZoom();\n    }\n  };\n\n  /**\n   * Create a new/blank state object for a commander. The individual talent\n   * tree arrays will be filled with an appropriate number of `0`\n   *\n   * @param {string} commander Name of commander to create empty talents for\n   * @returns {object} Object containing `0` arrays for each tree color\n   * @memberof App\n   */\n  createZeroTalents = (commander) => {\n    const numRed = Object.keys(treeData[Commanders[commander]['red']]).length;\n    const numYellow = Object.keys(treeData[Commanders[commander]['yellow']])\n      .length;\n    const numBlue = Object.keys(treeData[Commanders[commander]['blue']]).length;\n\n    const zeroTalents = {\n      red: Array(numRed).fill(0),\n      yellow: Array(numYellow).fill(0),\n      blue: Array(numBlue).fill(0),\n    };\n\n    return zeroTalents;\n  };\n\n  /**\n   * Set all tree node values to `0` for the currently selected commander\n   *\n   * @memberof App\n   */\n  resetTalents = () => {\n    ReactGA.event({\n      category: 'App',\n      action: 'Reset build',\n    });\n    this.changeCommander(this.state.commander);\n  };\n\n  /**\n   * Change the value of a single talent node. Followed by `this.updateURL()`\n   *\n   * @param {string} treeName Name of the tree the node belongs to\n   * @param {string} color Color of the tree the node belongs to\n   * @param {number} idx Index of the node in the tree/color array.\n   * @param {string} how {increase | decrease} Should node value be increased\n   *  or decreased?\n   * @param {number} amount How much to change the value by\n   * @memberof App\n   */\n  changeTalentValue = (treeName, color, idx, how, amount) => {\n    let newArr = this.state[color];\n    const lines = jsPlumb.select({\n      source: document.getElementById(`${treeName + idx}`),\n    });\n\n    switch (how) {\n      case 'increase':\n        newArr[idx - 1] += amount;\n        if (newArr[idx - 1] > 0) {\n          lines.addClass(`line-${color}`);\n        }\n        break;\n      case 'decrease':\n        newArr[idx - 1] -= amount;\n        if (newArr[idx - 1] === 0) {\n          lines.removeClass(`line-${color}`);\n        }\n        break;\n      default:\n    }\n\n    this.setState({ [color]: newArr }, () => this.updateURL('update'));\n  };\n\n  /**\n   * Get the maximum number of available points for each talent\n   *\n   * @param {string} commander Name of the commander\n   * @param {string} color Color of the tree to get max values for\n   * @returns {Number[]} Array of maximum available points for each talent in the tree\n   * @memberof App\n   */\n  createMaxValueArray = (commander, color) => {\n    let maxArray = [];\n\n    Object.keys(treeData[Commanders[commander][color]]).forEach((id) => {\n      maxArray.push(\n        getMaxTalentCount(treeData[Commanders[commander][color]][id]['values'])\n      );\n    });\n\n    return maxArray;\n  };\n\n  /**\n   * Calculate the total number of talent points spent. This is just a sum\n   * of all the color/tree array values\n   *\n   * @param {string} color Color of the tree to sum. Omitting this param sums\n   * across all trees\n   * @returns {number} Total number of talent points spent\n   * @memberof App\n   */\n  calcPointsSpent = (color = 'total') => {\n    let points;\n\n    if (color === 'total') {\n      points = [...this.state.red, ...this.state.yellow, ...this.state.blue];\n    } else {\n      points = [...this.state[color]];\n    }\n\n    return sumArray(points);\n  };\n\n  /**\n   * Calculate number of remaining talent points available to be spent\n   *\n   * @returns {number} Number of remaining talent points\n   * @memberof App\n   */\n  calcPointsRemaining = () => {\n    return maxPoints - this.calcPointsSpent();\n  };\n\n  /**\n   * Toggle display of info panel\n   *\n   * @memberof App\n   */\n  toggleInfoPanel = () => {\n    this.setState(\n      (prevState) => ({\n        isShownInfoPanel: !prevState.isShownInfoPanel,\n      }),\n      () => {\n        this.treePanelRef.repaint();\n        localStorage.setItem('isShownInfoPanel', this.state.isShownInfoPanel);\n      }\n    );\n\n    ReactGA.event({\n      category: 'Settings',\n      action: 'Toggle info panel',\n    });\n  };\n\n  /**\n   * Toggle display of total number of points spent in each tree\n   *\n   * @memberof App\n   */\n  toggleTotalDisplay = () => {\n    this.setState(\n      (prevState) => ({\n        isShownTotals: !prevState.isShownTotals,\n      }),\n      () => {\n        localStorage.setItem('isShownTotals', this.state.isShownTotals);\n      }\n    );\n\n    ReactGA.event({\n      category: 'Settings',\n      action: 'Toggle tree totals',\n    });\n  };\n\n  /**\n   * Toggle display of node values\n   *\n   * @memberof App\n   */\n  toggleValueDisplay = () => {\n    this.setState(\n      (prevState) => ({\n        isShownValues: !prevState.isShownValues,\n      }),\n      () => {\n        localStorage.setItem('isShownValues', this.state.isShownValues);\n      }\n    );\n\n    ReactGA.event({\n      category: 'Settings',\n      action: 'Toggle node values',\n    });\n  };\n\n  /**\n   * Toggle node size\n   *\n   * @param {string} size Desired node size\n   * @memberof App\n   */\n  toggleNodeSize = (size) => {\n    this.setState({ nodeSize: size }, () => {\n      this.treePanelRef.repaint();\n      localStorage.setItem('nodeSize', this.state.nodeSize);\n    });\n\n    ReactGA.event({\n      category: 'Settings',\n      action: 'Toggle node size',\n      label: size,\n    });\n  };\n\n  /**\n   * Toggle screenshot stats\n   *\n   * @memberof App\n   */\n  toggleScreenshotStats = () => {\n    this.setState(\n      (prevState) => ({\n        isScreenshotStats: !prevState.isScreenshotStats,\n      }),\n      () => {\n        localStorage.setItem('isScreenshotStats', this.state.isScreenshotStats);\n      }\n    );\n\n    ReactGA.event({\n      category: 'Settings',\n      action: 'Toggle screenshot stats',\n    });\n  };\n\n  /**\n   * Toggle speed mode\n   *\n   * @memberof App\n   */\n  toggleSpeedMode = () => {\n    this.setState(\n      (prevState) => ({\n        isSpeedMode: !prevState.isSpeedMode,\n      }),\n      () => {\n        this.treePanelRef.drawLines();\n        localStorage.setItem('isSpeedMode', this.state.isSpeedMode);\n      }\n    );\n\n    ReactGA.event({\n      category: 'Settings',\n      action: 'Toggle speed mode',\n    });\n  };\n\n  /**\n   * Toggle instant zero mode\n   *\n   * @memberof App\n   */\n  toggleInstantZero = () => {\n    this.setState(\n      (prevState) => ({\n        isInstantZero: !prevState.isInstantZero,\n      }),\n      () => {\n        localStorage.setItem('isInstantZero', this.state.isInstantZero);\n      }\n    );\n\n    ReactGA.event({\n      category: 'Settings',\n      action: 'Toggle instant zero',\n    });\n  };\n\n  /**\n   * Toggle instant max mode\n   *\n   * @memberof App\n   */\n  toggleInstantMax = () => {\n    this.setState(\n      (prevState) => ({\n        isInstantMax: !prevState.isInstantMax,\n      }),\n      () => {\n        localStorage.setItem('isInstantMax', this.state.isInstantMax);\n      }\n    );\n\n    ReactGA.event({\n      category: 'Settings',\n      action: 'Toggle instant max',\n    });\n  };\n\n  /**\n   * Toggle auto fill mode\n   *\n   * @memberof App\n   */\n  toggleAutoFill = () => {\n    this.setState(\n      (prevState) => ({\n        isAutoFill: !prevState.isAutoFill,\n      }),\n      () => {\n        localStorage.setItem('isAutoFill', this.state.isAutoFill);\n      }\n    );\n\n    ReactGA.event({\n      category: 'Settings',\n      action: 'Toggle auto fill',\n    });\n  };\n\n  /**\n   * Toggle mouse XY position display\n   *\n   * @memberof App\n   */\n  toggleMouseXY = () => {\n    this.setState(\n      (prevState) => ({\n        isShownMouseXY: !prevState.isShownMouseXY,\n      }),\n      () => {\n        this.treePanelRef.toggleMouseListeners();\n        localStorage.setItem('isShownMouseXY', this.state.isShownMouseXY);\n      }\n    );\n  };\n\n  /**\n   * Toggle tooltip talent ID\n   *\n   * @memberof App\n   */\n  toggleTalentID = () => {\n    this.setState(\n      (prevState) => ({\n        isShownTalentID: !prevState.isShownTalentID,\n      }),\n      () => {\n        localStorage.setItem('isShownTalentID', this.state.isShownTalentID);\n      }\n    );\n  };\n\n  /**\n   * Toggle guided tour\n   *\n   * @memberof App\n   */\n  toggleTour = () => {\n    this.tourRef.restartTour();\n  };\n\n  /**\n   * Toggle announcement\n   *\n   * @memberof App\n   */\n  toggleAnnounce = (version) => {\n    this.announceRef.show(version);\n  };\n\n  render() {\n    return (\n      <div id=\"app\">\n        {!this.props.isEmbed && (\n          <GuidedTour ref={(component) => (this.tourRef = component)} />\n        )}\n\n        {this.invalidModalFlag && (\n          <InvalidBuildModal message={this.invalidBuildMessage} />\n        )}\n\n        <AnnouncementModal\n          ref={(component) => (this.announceRef = component)}\n          isEmbed={this.props.isEmbed}\n          isUpgrade={\n            localStorage.getItem('version')\n              ? isUpgrade(localStorage.getItem('version'), version)\n              : true\n          }\n          isNewUser={isNewUser()}\n          isInvalidBuild={this.invalidModalFlag}\n        />\n\n        <Progress\n          isAnimating={this.state.showProgress}\n          animationDuration={1000}\n        />\n\n        {!this.props.isEmbed && (\n          <ErrorBoundary>\n            <NavBar\n              toggleInfoPanel={this.toggleInfoPanel}\n              toggleTotalDisplay={this.toggleTotalDisplay}\n              toggleValueDisplay={this.toggleValueDisplay}\n              toggleNodeSize={this.toggleNodeSize}\n              toggleScreenshotStats={this.toggleScreenshotStats}\n              toggleSpeedMode={this.toggleSpeedMode}\n              toggleInstantZero={this.toggleInstantZero}\n              toggleInstantMax={this.toggleInstantMax}\n              toggleAutoFill={this.toggleAutoFill}\n              toggleMouseXY={this.toggleMouseXY}\n              toggleTalentID={this.toggleTalentID}\n              toggleAnnounce={this.toggleAnnounce}\n              toggleTour={this.toggleTour}\n              changeCommander={this.changeCommander}\n              calcPointsSpent={this.calcPointsSpent}\n              resetTalents={this.resetTalents}\n              commander={this.state.commander}\n              red={this.state.red}\n              yellow={this.state.yellow}\n              blue={this.state.blue}\n              nodeSize={this.state.nodeSize}\n              isShownInfoPanel={this.state.isShownInfoPanel}\n              isShownValues={this.state.isShownValues}\n              isShownTotals={this.state.isShownTotals}\n              isScreenshotStats={this.state.isScreenshotStats}\n              isSpeedMode={this.state.isSpeedMode}\n              isInstantZero={this.state.isInstantZero}\n              isInstantMax={this.state.isInstantMax}\n              isAutoFill={this.state.isAutoFill}\n              isShownMouseXY={this.state.isShownMouseXY}\n              isShownTalentID={this.state.isShownTalentID}\n            />\n          </ErrorBoundary>\n        )}\n\n        <div id=\"main-container\">\n          <Suspense\n            fallback={\n              <div id=\"spinner\">\n                <Spinner size=\"lg\" animation=\"border\" variant=\"light\" />\n                <br />\n                <span>Loading</span>\n              </div>\n            }\n          >\n            {!this.props.isEmbed && (\n              <ErrorBoundary>\n                <InfoPanel\n                  calcPointsSpent={this.calcPointsSpent}\n                  calcPointsRemaining={this.calcPointsRemaining}\n                  treeData={treeData}\n                  commander={this.state.commander}\n                  red={this.state.red}\n                  yellow={this.state.yellow}\n                  blue={this.state.blue}\n                  isShownInfoPanel={this.state.isShownInfoPanel}\n                />\n              </ErrorBoundary>\n            )}\n\n            <ErrorBoundary>\n              <TreePanel\n                ref={(component) => (this.treePanelRef = component)}\n                changeCommander={this.changeCommander}\n                resetTalents={this.resetTalents}\n                changeTalentValue={this.changeTalentValue}\n                calcPointsSpent={this.calcPointsSpent}\n                calcPointsRemaining={this.calcPointsRemaining}\n                treeData={treeData}\n                dataVersion={this.state.dataVersion}\n                commander={this.state.commander}\n                red={this.state.red}\n                yellow={this.state.yellow}\n                blue={this.state.blue}\n                nodeSize={this.state.nodeSize}\n                isShownValues={this.state.isShownValues}\n                isShownTotals={this.state.isShownTotals}\n                isSpeedMode={this.state.isSpeedMode}\n                isInstantZero={this.state.isInstantZero}\n                isInstantMax={this.state.isInstantMax}\n                isAutoFill={this.state.isAutoFill}\n                isShownMouseXY={this.state.isShownMouseXY}\n                isShownTalentID={this.state.isShownTalentID}\n                isEmbed={this.props.isEmbed}\n              />\n            </ErrorBoundary>\n          </Suspense>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport ReactGA from 'react-ga';\nimport { isEmbed } from './utils';\nimport { homepage } from '../package.json';\nimport * as serviceWorker from './serviceWorker';\nimport App from './App';\n\nconst embed = isEmbed(window.location.search);\n\nif (window.self === window.top || embed) {\n  ReactGA.initialize('UA-114296077-2');\n  ReactGA.pageview('/');\n\n  const url = window.location.search;\n  ReactDOM.render(\n    <App url={url} isEmbed={embed} />,\n    document.getElementById('root')\n  );\n\n  // If you want your app to work offline and load faster, you can change\n  // unregister() to register() below. Note this comes with some pitfalls.\n  // Learn more about service workers: https://bit.ly/CRA-PWA\n  serviceWorker.unregister();\n} else {\n  ReactDOM.render(\n    <div>\n      Please visit the full website at{' '}\n      <a href={homepage} target=\"_blank\" rel=\"noopener noreferrer\">\n        {homepage.split('//')[1]}\n      </a>\n    </div>,\n    document.getElementById('root')\n  );\n}\n"],"sourceRoot":""}